			  Z80 ASSEMBLER - ZASM VER 1.6
                      	;Compatible BASIC for PC-6001
                      	; by AKIKAWA, Hisashi  2013-2019
                      	
                      	;This software is redistributable under the LGPLv2.1 or any later version.
                      	
                      	
                      	;subroutine entry address
  0000                	BOOT	equ	0000h
  0008                	CHKPAR	equ	0008h
  0010                	ANADAT	equ	0010h
  0018                	JPHK1	equ	0018h
  0020                	CPHLDE	equ	0020h
  0028                	CHKSGN	equ	0028h
  0038                	JPHK2	equ	0038h
  0384                	ERRSTR	equ	0384h
  038B                	ERRIN	equ	038bh
  0390                	OK	equ	0390h
  0442                	EDIT	equ	0442h
  06EA                	CMDEND	equ	06eah
  0709                	INTPRT2	equ	0709h
  0741                	FTOI2	equ	0741h
  0D16                	ABTOF	equ	0d16h
  0DE3                	INT1INC	equ	0de3h
  0DE4                	INT1ARG	equ	0de4h
  0E78                	IN90H	equ	0e78h
  0E8F                	OUT90H	equ	0e8fh
  0EB0                	INTGRP	equ	0eb0h
  0EB5                	INTKEY	equ	0eb5h
  0EF6                	IKBF	equ	0ef6h
  0F2B                	IKPOP	equ	0f2bh
  0F74                	INTTIM	equ	0f74h
  0FBC                	GETCH	equ	0fbch
  0FC4                	GETC	equ	0fc4h
  103A                	GETKBF	equ	103ah
  1058                	CLRKBF	equ	1058h
  1061                	STICK	equ	1061h
  1075                	PUTC	equ	1075h
  10AA                	PUTCHR	equ	10aah
  10EA                	PATCH1	equ	10eah
  116D                	SETCSR	equ	116dh
  1179                	CSRON	equ	1179h
  1181                	CSROFF	equ	1181h
  11B8                	Y2AD	equ	11b8h
  11CD                	XY2AD	equ	11cdh
  11DA                	DELLIN	equ	11dah
  1257                	PUTCH	equ	1257h
  1260                	SCRLUP	equ	1260h
  12A9                	SCRLDW	equ	12a9h
  1390                	CHGMOD	equ	1390h
  13ED                	CHGDSP	equ	13edh
  140C                	CHGACT	equ	140ch
  1478                	AD2GAD	equ	1478h
  14A0                	CGROM	equ	14a0h
  14AF                	PUTCH2	equ	14afh
  15C0                	SETATT	equ	15c0h
  1A1C                	PUTPRT	equ	1a1ch
  1A4F                	CNVKANA	equ	1a4fh
  1A61                	ROPEN	equ	1a61h
  1A70                	GETCMT	equ	1a70h
  1AAA                	RCLOSE	equ	1aaah
  1AB8                	WOPEN	equ	1ab8h
  1ACC                	PUTCMT	equ	1acch
  1AED                	CHK90H	equ	1aedh
  1B06                	WCLOSE	equ	1b06h
  1B2A                	BLNKAST	equ	1b2ah
  1B49                	RLOFF	equ	1b49h
  1B4B                	RLON	equ	1b4bh
  1B54                	OUTB0H	equ	1b54h
  1B60                	PLSTPS	equ	1b60h
  1BB3                	PLSTOP	equ	1bb3h
  1BBE                	SOUND2	equ	1bbeh
  1BC5                	SOUND	equ	1bc5h
  1BCD                	BELL	equ	1bcdh
  1CA6                	JOYSTK	equ	1ca6h
  1CB4                	PATCH2	equ	1cb4h
  1DBB                	SETC3	equ	1dbbh
  1DFB                	CLS	equ	1dfbh
  1EB3                	PLAY	equ	1eb3h
  2030                	SCALE2	equ	2030h		;for mkII
  204B                	SCALE	equ	204bh
  2539                	GETFN	equ	2539h
  254E                	CMTSKP	equ	254eh
  2576                	FOUND	equ	2576h
  2583                	PRTFN	equ	2583h
  259A                	INPOPN	equ	259ah
  25A8                	PRTOPN	equ	25a8h
  25E5                	WAIT	equ	25e5h
  26C7                	PUTDEV	equ	26c7h
  2739                	PUTNL	equ	2739h
  274D                	STOPESC	equ	274dh
  28F9                	INPT1	equ	28f9h
  2D13                	SETGXY	equ	2d13h
  2D47                	PSET	equ	2d47h
  2DE4                	LINEBF	equ	2de4h
  2E1F                	LINE	equ	2e1fh
  2E35                	LINEB	equ	2e35h
  2EF1                	PAINT2	equ	2ef1h
  2EFA                	PAINT	equ	2efah
  30CE                	PUTSINC	equ	30ceh
  30CF                	PUTS	equ	30cfh
  310F                	GC	equ	310fh
  34F9                	RESSTK	equ	34f9h
  397A                	PUTI1	equ	397ah		;for mkII
  3A99                	INLNUM	equ	3a99h
  3AA1                	PUTI2	equ	3aa1h
  3AA5                	I2TOA	equ	3aa5h
  3AAC                	FTOA	equ	3aach
  3BAF                	RNDPLS	equ	3bafh
                      	
                      	;BASIC command
  0781                	C_RUN	equ	0781h		;RUN
  07E0                	C_DATA	equ	07e0h		;DATA
  07E2                	C_REM	equ	07e2h		;REM
  087A                	C_LPRT	equ	087ah		;LPRINT
  087E                	C_PRT	equ	087eh		;PRINT
  1D9B                	C_COLR	equ	1d9bh		;COLOR
  1E04                	C_SCRN	equ	1e04h		;SCREEN
                      	
                      	;work area
  FA18                	STOPFLG	equ	0fa18h		;03h=STOP,1bh=ESC
  FA19                	CMTSTAT	equ	0fa19h		;bit1=data received, bit4=error
  FA1A                	INPDEV	equ	0fa1ah		;input device
  FA1D                	CMTBUF	equ	0fa1dh		;CMT data
  FA1E                	ASTSTAT	equ	0fa1eh		;cload asterisk status
  FA1F                	BAUD	equ	0fa1fh		;baud rate (00=600baud, ff=1200baud)
  FA20                	HEIGHT	equ	0fa20h		;Y max+1
  FA27                	PORTB0H	equ	0fa27h		;port b0h
  FA28                	TMCNT	equ	0fa28h		;time count, fa28-fa2b
  FA2D                	CONSOL4	equ	0fa2dh		;console 4th parameter
  FA2E                	CSRBLNK	equ	0fa2eh		;0=cursor blink off, 1=on
  FA2F                	CSRSTAT	equ	0fa2fh		;0=normal, ff=reversed
  FA30                	GRPWRK	equ	0fa30h		;input graphic character work
  FA31                	GRPFLG	equ	0fa31h		;print graphic character flag
  FA32                	FKEYCNT	equ	0fa32h		;function key counter
  FA51                	RSEED	equ	0fa51h		;random seed, fa51-fa55
  FA57                	PRTPOS	equ	0fa57h		;printer head position
  FA58                	DEVICE	equ	0fa58h		;output device
  FA5B                	STACK	equ	0fa5bh		;initial stack pointer
  FA5D                	LINENUM	equ	0fa5dh		;current line number
  FA5F                	STARTAD	equ	0fa5fh		;basic program start address
  FA61                	CMDTBL	equ	0fa61h		;command jump table
  FAE5                	FNCTBL	equ	0fae5h		;function jump table
  FB3D                	FKEYTBL	equ	0fb3dh		;function key data
  FB8D                	FKEYAD	equ	0fb8dh		;function key address
  FB8F                	KYBFIN	equ	0fb8fh		;key buffer pointer for input
  FB90                	KYBFOUT	equ	0fb90h		;key buffer pointer for output
  FB92                	KYBFSZ	equ	0fb92h		;key buffer size
  FB93                	KYBFAD	equ	0fb93h		;key buffer address
  FB95                	RSBFIN	equ	0fb95h		;RS-232C buffer in
  FB96                	RSBFOUT	equ	0fb96h		;RS-232C buffer out
  FB98                	RSBFSZ	equ	0fb98h		;RS-232C buffer size
  FB99                	RSBFAD	equ	0fb99h		;RS-232C buffer address
                      	
                      	;PLAY command
  FBA1                	BUFAIN	equ	0fba1h		;channelA buffer pointer for input
  FBA2                	BUFAOUT	equ	0fba2h		;channelA buffer pointer for output
  FBA4                	BUFASZ	equ	0fba4h		;channelA buffer size
  FBA5                	BUFAAD	equ	0fba5h		;channelA buffer address
  FBA7                	BUFBIN	equ	0fba7h		;channelB buffer in
  FBAD                	BUFCIN	equ	0fbadh		;channelC buffer in
                      	
  FBB9                	KEYBUF	equ	0fbb9h		;key buffer, fbb9-fbf8
  FBF9                	RSBUF	equ	0fbf9h		;RS-232C buffer, fbf9-fc38
                      	
                      	;PLAY command
  FC39                	BUFA	equ	0fc39h		;channelA buffer, fc39-fc78
  FC79                	BUFB	equ	0fc79h		;channelB buffer, fc79-fcb8
  FCB9                	BUFC	equ	0fcb9h		;channelC buffer, fcb9-fcf8
  FD14                	CHANNEL	equ	0fd14h		;channel (0-2)
  FD15                	SVBCK	equ	0fd15h		;backup of S/V-value
  FD17                	PLAYLEN	equ	0fd17h		;length
  FD18                	PLAYSTR	equ	0fd18h		;string address
  FD1B                	PLAYST	equ	0fd1bh		;PLAY status
  FD1D                	PLWKA	equ	0fd1dh		;PLAY work for channelA
  0000                	REMAIN	equ	0fd1dh-PLWKA	;remaining time
  0002                	PLLEN	equ	0fd1fh-PLWKA	;string length
  0003                	PLADR	equ	0fd20h-PLWKA	;string address
  000F                	OCTAVE	equ	0fd2ch-PLWKA	;O-value
  0010                	LENGTH	equ	0fd2dh-PLWKA	;L-value
  0011                	TEMPO	equ	0fd2eh-PLWKA	;T-value
  0012                	VOLUME	equ	0fd2fh-PLWKA	;V-value
  0013                	PERIOD	equ	0fd30h-PLWKA	;M-value
  FD42                	PLWKB	equ	0fd42h		;PLAY work for channelB
  FD67                	PLWKC	equ	0fd67h		;PLAY work for channelC
                      	
  FD8C                	PAGES	equ	0fd8ch		;How many pages?
  FD8D                	USREND	equ	0fd8dh		;user area end, fd8d-fd8e
  FD8F                	SCREEN2	equ	0fd8fh		;screen 2nd parameter-1
  FD90                	SCREEN3	equ	0fd90h		;screen 3rd parameter-1
                      	
  FD91                	VRAM	equ	0fd91h		;VRAM address (high)
  FD92                	SCREEN1	equ	0fd92h		;screen 1st parameter-1
  FD93                	COLOR1	equ	0fd93h		;color 1st parameter
  FD94                	COLOR2	equ	0fd94h		;color 2nd parameter
  FD95                	COLOR3	equ	0fd95h		;color 3rd parameter (1,2 -> 0,2)
  FD96                	M1COLOR	equ	0fd96h		;screen mode 1 color parameters, fd96-fd98
  FD99                	M2COLOR	equ	0fd99h		;screen mode 2 color parameters, fd99-fd9b
  FD9C                	M3COLOR	equ	0fd9ch		;screen mode 3 color parameters, fd9c-fd9e
  FD9F                	M4COLOR	equ	0fd9fh		;screen mode 4 color parameters, fd9f-fda1
  FDA2                	CONSOL1	equ	0fda2h		;console 1st line number+1
  FDA3                	CONSOL2	equ	0fda3h		;console last line number+1
  FDA5                	LASTLIN	equ	0fda5h		;sc12:(CONSOL2)-(CONSOL3) sc34:(CONSOLE2)
  FDA6                	CONSOL3	equ	0fda6h		;console 3rd parameter
  FDA7                	FKEYSFT	equ	0fda7h		;shift key status for function key display
  FDA8                	CSRY	equ	0fda8h		;cursor Y+1
  FDA9                	CSRX	equ	0fda9h		;cursor X+1
  FDAA                	CSRAD	equ	0fdaah		;cursor address
  FDAC                	WIDTH	equ	0fdach		;X max+1
  FDAE                	GRPX1	equ	0fdaeh		;graphic X, fdae-fdaf
  FDB0                	GRPY1	equ	0fdb0h		;graphic Y, fdb0-fdb1
  FDB7                	LINEST	equ	0fdb7h		;line connection status, (0=connect) fdb7-fdc6
  FDC8                	PAGE1	equ	0fdc8h		;page1 data, fdc8-fdfe
  FDFF                	PAGE2	equ	0fdffh		;page2 data, fdff-fe35
  FE36                	PAGE3	equ	0fe36h		;page3 data, fe36-fe6c
  FE6D                	PAGE4	equ	0fe6dh		;page4 data, fe6d-fea3
                      	
  FEA4                	INPTXY	equ	0fea4h		;INPUT command initial position
  FEA6                	INPTX	equ	0fea6h		;INPUT command end position
  FEA7                	INPTPAG	equ	0fea7h		;INPUT command page
  FEA8                	INSMODE	equ	0fea8h		;0=not insert mode, ff=insert mode
  FEAA                	STOPSC2	equ	0feaah		;screen 2nd parameter -1 in stop
  FEAB                	STOPSC3	equ	0feabh		;screen 3rd parameter -1 in stop
  FEAC                	ATTDAT	equ	0feach		;color attribute data
  FEAD                	GRPX2	equ	0feadh		;graphic X, fead-feae
  FEAF                	GRPY2	equ	0feafh		;graphic Y, feaf-feb0
  FEB1                	GRPX3	equ	0feb1h		;graphic work, feb1-feb2
  FEB3                	GRPY3	equ	0feb3h		;graphic work, feb3-feb4
  FEB5                	PAWRK	equ	0feb5h		;paint work, feb5-feb6
  FEB7                	PACNT	equ	0feb7h		;paint work
  FEC5                	BORDERA	equ	0fec5h		;paint border color attribute
  FEC6                	BORDERC	equ	0fec6h		;paint border color code
  FECA                	GMKYBUF	equ	0fecah		;reply to game key query
                      	;TARGET	equ	0fecbh		;target file name, fecb-fed0
  FED1                	FNAME	equ	0fed1h		;loading file name, fed1-fed6
  FED8                	VERIFY	equ	0fed8h		;load/verify flag 00h=load ffh=verify
  FEDA                	INPBUF	equ	0fedah		;input buffer, feda-ff21, (ff22)-(ff23)=00h
  FF25                	ARGTYP	equ	0ff25h		;0=value 1=string
  FF27                	STREND	equ	0ff27h		;strings area end
  FF29                	BASICAD	equ	0ff29h		;basic area start
  FF2D                	STRDSC1	equ	0ff2dh		;temporary string descriptor, ff2d-ff30
  FF31                	STRDSC2	equ	0ff31h		;ff31-ff34
  FF35                	STRDSC3	equ	0ff35h		;ff35-ff38
  FF39                	STRDSC4	equ	0ff39h		;ff39-ff3c
  FF3D                	STRAD	equ	0ff3dh		;string area start address - 1
  FF41                	GCWRK	equ	0ff41h		;garbage collection work
  FF45                	DATALN	equ	0ff45h		;data line number
  FF4E                	PROGAD	equ	0ff4eh		;program address in interpreting
  FF50                	TMP	equ	0ff50h		;temporary
  FF52                	STOPLN	equ	0ff52h		;line number at stop
  FF54                	STOPAD	equ	0ff54h		;stop address
  FF56                	VARAD	equ	0ff56h		;variable area start address
  FF58                	ARRAD	equ	0ff58h		;array area start address
  FF5A                	FREEAD	equ	0ff5ah		;free area start address
  FF5C                	DATAAD	equ	0ff5ch		;data command address
  FF5E                	FNPAR	equ	0ff5eh		;FN() parameter name
  FF60                	FNARG	equ	0ff60h		;FN() argument value, ff60-ff64
  FF65                	OPRTR	equ	0ff65h		;operator, FAC1-1
  FF66                	FAC1	equ	0ff66h		;floating accumlator 1, ff66-ff6a
  FF6D                	FAC2	equ	0ff6dh		;floating accumlator 2, ff6d-ff71
  FF72                	FAC3	equ	0ff72h		;floating accumlator 3 (string conversion)
  FF8A                	HOOK	equ	0ff8ah		;hook area, ff8a-ffe3
  FF99                	HOOKCLP	equ	0ff99h		;hook for changing link pointer
  FFD8                	HOOKSTP	equ	0ffd8h		;hook for stop key
  FFDB                	HOOK18H	equ	0ffdbh		;hook for 0018h
  FFE1                	HOOK38H	equ	0ffe1h		;hook for 0038h
                      	
  0020                	COLUMNS	equ	32
  0010                	ROWS	equ	16
                      	
  0081                	FOR	equ	081h
  0083                	DATA	equ	083h
  0088                	GOTO	equ	088h
  0089                	RUN	equ	089h
  008C                	GOSUB	equ	08ch
  008E                	REM	equ	08eh
  0093                	DEF	equ	093h
  0095                	PRINT	equ	095h
  009F                	SCREEN	equ	09fh
  00AA                	CMDLAST	equ	0aah
  00C2                	TAB	equ	0c2h
  00C3                	TO	equ	0c3h
  00C4                	FN	equ	0c4h
  00C5                	SPC	equ	0c5h
  00C6                	INKEY	equ	0c6h
  00C7                	THEN	equ	0c7h
  00C8                	NOT_	equ	0c8h
  00C9                	STEP	equ	0c9h
  00CA                	PLUS	equ	0cah
  00CB                	MINUS	equ	0cbh
  00CC                	ASTRSK	equ	0cch
  00D1                	GT_	equ	0d1h
  00D2                	EQ_	equ	0d2h
  00D3                	LT_	equ	0d3h
  00D4                	FNC1ST	equ	0d4h
  00D7                	USR	equ	0d7h
  00EA                	LEFT_	equ	0eah
  00EC                	MID_	equ	0ech
  00F1                	FNCLAST	equ	0f1h
                      	
                      	
                      	;;;;;;;;;;;;;;;;;;;;;;;;;
                      	
                      	;boot
  0000                		org	BOOT
  0000  F3            		di
  0001  C36316        		jp	COLD
                      	
                      	
                      	;check parameter
                      	; compare (hl) and data at (sp)
                      	;input: sp,hl
                      	;output: a=data, hl=data address, z-flag(a=00h or 3ah), c-flag(a=30h-39h)
  0004                	_CHKPAR:ds	CHKPAR-_CHKPAR
  0008                		org	CHKPAR
                      	
  0008  E3            		ex	(sp),hl
  0009  7E            		ld	a,(hl)
  000A  23            		inc	hl
  000B  E3            		ex	(sp),hl
  000C  BE            		cp	(hl)
  000D  C2DC03        		jp	nz,SNERR
                      	
                      	
                      	;skip space and analyze a byte
                      	;input: hl=address-1
                      	;output: a=data, hl=data address, z-flag(a=00h or 3ah), c-flag(a=30h-39h)
                      	;destroy: f
  0010                	_ANADAT:ds	ANADAT-_ANADAT
  0010                		org	ANADAT
                      	
  0010  CD593F        		call	SKIPSPINC
  0013  C3C60B        		jp	CHKFIG
                      	
                      	
                      	;jump hook
  0016                	_JPHK1	:ds	JPHK1-_JPHK1
  0018                		org	JPHK1
                      	
  0018  C3DBFF        		jp	HOOK18H
                      	
                      	
                      	;compare hl and de
                      	;input: hl,de
                      	;output: f
                      	;destroy: af
  001B                	_CPHLDE:ds	CPHLDE-_CPHLDE
  0020                		org	CPHLDE
                      	
  0020  7C            		ld	a,h
  0021  92            		sub	d
  0022  C0            		ret	nz
  0023  7D            		ld	a,l
  0024  93            		sub	e
  0025  C9            		ret
                      	
                      	
                      	;check sign of FAC1
                      	;input: FAC1
                      	;output: a(0:FAC1=0 1:FAC1>0 ff:FAC1<0), z(1:FAC1=0)
                      	;destroy: af
  0026                	_CHKSGN:ds	CHKSGN-_CHKSGN
  0028                		org	CHKSGN
  0028  3A6AFF        		ld	a,(FAC1+4)
  002B  B7            		or	a
  002C  C8            		ret	z
  002D  C30239        		jp	CHKSGN2
                      	
                      	
                      	;jump hook
  0030                	_JPHK2:	ds	JPHK2-_JPHK2
  0038                		org	JPHK2
                      	
  0038  C3E1FF        		jp	HOOK38H
                      	
                      	
                      	;hot start
  003B                	HOT:
                      	;initialize function key
  003B  215301        		ld	hl,FKEYLST
  003E  113DFB        		ld	de,FKEYTBL
  0041  0E0A          		ld	c,10
  0043                	SETFKLP1:
  0043  7E            		ld	a,(hl)
  0044  23            		inc	hl
  0045  E5            		push	hl		;
  0046  CDB525        		call	CNVASC
                      	
  0049  0608          		ld	b,8
  004B                	SETFKLP2:
  004B  05            		dec	b
  004C  12            		ld	(de),a
  004D  13            		inc	de
  004E  23            		inc	hl
  004F  7E            		ld	a,(hl)
  0050  B7            		or	a
  0051  F24B00        		jp	p,SETFKLP2
                      	
  0054  E1            		pop	hl		;
  0055  7E            		ld	a,(hl)
  0056  23            		inc	hl
                      	
  0057                	SETFKLP3:
  0057  12            		ld	(de),a
  0058  13            		inc	de
  0059  AF            		xor	a
  005A  10FB          		djnz	SETFKLP3
                      	
  005C  0D            		dec	c
  005D  20E4          		jr	nz,SETFKLP1
  005F  CDAF12        		call	PRTFKEY
                      	
                      	;check external ROM
  0062  2A0040        		ld	hl,(4000h)
  0065  114142        		ld	de,'A'+'B'*100h
  0068  E7            		rst	CPHLDE
  0069  2A0240        		ld	hl,(4002h)
  006C  CCA507        		call	z,JPHL
                      	
                      	;How Many Pages?
  006F                	PAGELP:
  006F  210801        		ld	hl,HOWMANY
  0072  CDCF30        		call	PUTS
  0075  CDF928        		call	INPT1
  0078  D7            		rst	ANADAT
  0079  1600          		ld	d,00h
  007B  3017          		jr	nc,SETPAGEMAX
  007D  42            		ld	b,d		;=0
  007E  CDD127        		call	ATOI2
  0081  7A            		ld	a,d
  0082  B7            		or	a
  0083  2008          		jr	nz,PAGEFC
  0085  7B            		ld	a,e
  0086  3D            		dec	a
  0087  218CFD        		ld	hl,PAGES
  008A  BE            		cp	(hl)
  008B  3814          		jr	c,SETPAGE
  008D                	PAGEFC:
  008D  1E08          		ld	e,08h		;?FC Error
  008F                	PAGEERR:
  008F  CDBF03        		call	PRTERR
  0092  18DB          		jr	PAGELP
                      	
  0094                	SETPAGEMAX:
  0094  1E02          		ld	e,02h		;?SN Error
  0096  20F7          		jr	nz,PAGEERR
  0098  B7            		or	a
  0099  1E26          		ld	e,26h		;?MO Error
  009B  20F2          		jr	nz,PAGEERR	;colon
                      	
  009D  218CFD        		ld	hl,PAGES
  00A0  5E            		ld	e,(hl)
  00A1                	SETPAGE:
  00A1  73            		ld	(hl),e
                      	
  00A2  CDDC34        		call	NEW
  00A5  210301        		ld	hl,ENDTBL-1
  00A8  19            		add	hl,de
  00A9  66            		ld	h,(hl)
  00AA  2EFF          		ld	l,0ffh
  00AC  228DFD        		ld	(USREND),hl
  00AF  013200        		ld	bc,50
  00B2  CDBE35        		call	CLRMAIN
                      	
                      	;print start message
  00B5  211901        		ld	hl,SYSNAME
  00B8  CDCF30        		call	PUTS
  00BB  CDEA34        		call	CHKFRE
  00BE  212F00        		ld	hl,002fh
  00C1  19            		add	hl,de
  00C2  CDA13A        		call	PUTI2
  00C5  21F800        		ld	hl,BFREE
  00C8                	PUTSEDIT:
  00C8  CDCF30        		call	PUTS
  00CB  C34204        		jp	EDIT
                      	
                      	
                      	;initialize table
  00CE                	IOTBL93:
  00CE  C0            		db	0c0h		;8255 portA=mode2 portB=mode0
  00CF  0D            		db	0dh		;enable 8255 INT for writing
  00D0  09            		db	09h		;enable 8255 INT for reading
  00D1  05            		db	05h		;CGROM off
  00D2  03            		db	03h		;CRTC
  00D3  0F            		db	0fh		;nobf=1 (for emulator?)
                      	
  00D4                	IOTBL81:
  00D4  12            		db	12h		;reset error, DTR=1, RxE/TxEN=0
  00D5  12            		db	12h		; set twice for synchronous mode
  00D6  52            		db	52h		;reset, reset error, DTR=1, RxE/TxEN=0
  00D7  4F            		db	4fh		;stop bits=1, parity disable,
                      					; character length=8bits, baud rate factor=64
  00D8  37            		db	37h		;reset error, RTS/DTR/RxE/TxEN=1
                      	
                      	;for mkII
  00D9                	IOTBLF0:
                      	;F0:	db	0ddh		;0000-7fff:internal RAM for reading (test)
  00D9  71            	F0:	db	71h		;0000-3fff:internal ROM for reading
                      					;4000-7fff:external ROM for reading
  00DA  DD            	F1:	db	0ddh		;8000-ffff:internal RAM for reading
  00DB  55            	F2:	db	55h		;0000-ffff:internal RAM for writing
  00DC  C2            	F3:	db	0c2h		;wait & int control
  00DD  00            	F4:	db	00h		;INT1 address
  00DE  00            	F5:	db	00h		;INT2 address
  00DF  03            	F6:	db	03h		;timer count up
  00E0  06            	F7:	db	06h		;timer interrupt address
  00E1  C3            	F8:	db	0c3h		;CG rom access control
                      	
                      	;interrupt
  00E2                	INTTBL:
  00E2  B50E          		dw	INTKEY		;fa02 normal key
  00E4  590F          		dw	INT232		;fa04 RS-232C
  00E6  740F          		dw	INTTIM		;fa06 2ms timer
  00E8  9A0F          		dw	INTCMT		;fa08 CMT read
  00EA  A70F          		dw	EIRET		;fa0a ?
  00EC  A70F          		dw	EIRET		;fa0c ?
  00EE  A90F          		dw	INTWSTP		;fa0e CMT write stop
  00F0  A90F          		dw	INTRSTP		;fa10 CMT read stop
  00F2  B10F          		dw	INTERR		;fa12 CMT error
  00F4  B00E          		dw	INTGRP		;fa14 GRAPH key etc.
  00F6  100F          		dw	INTGAM		;fa16 reply to game key query
                      	
                      	
  00F8                	BFREE:
  00F8  20427974657320		db	" Bytes free", 00h
  0104                	ENDTBL:
  0104  F9DFBF9F      		db	0f9h, 0dfh, 0bfh, 9fh
  0108                	HOWMANY:
  0108  486F77204D616E		db	"How Many Pages"
  0116                	QMARK:
  0116  3F2000        		db	"? ", 00h
  0119                	SYSNAME:
  0119  9ADE96FD424153		db	9ah, 0deh, 96h, 0fdh, "BASIC Ver.0.7", 0dh, 0ah, 00h
                      	
  012D                	PAGEDATA:
  012D  C0            		db	0c0h		;fd91	VRAM address
  012E  00            		db	00h		;fd92	screen 1st parameter-1
  012F  01            		db	01h		;fd93	color 1st parameter
  0130  00            		db	00h		;fd94	color 2nd parameter
  0131  00            		db	00h		;fd95	color 3rd parameter (1,2 -> 0,2)
  0132  010000        		db	01h, 00h, 00h	;fd96	screen mode 1 color parameters
  0135  010000        		db	01h, 00h, 00h	;fd99	screen mode 2 color parameters
  0138  020000        		db	02h, 00h, 00h	;fd9c	screen mode 3 color parameters
  013B  030000        		db	03h, 00h, 00h	;fd9f	screen mode 4 color parameters
  013E  01            		db	01h		;fda2	console 1st line number+1
  013F  10            		db	10h		;fda3	console last line number+1
  0140  00            		db	00h		;fda4
  0141  0F            		db	0fh		;fda5	sc12:(fda3)-(fda6) sc34:(fda3)
  0142  01            		db	01h		;fda6	console 3rd parameter
  0143  00            		db	00h		;fda7	shift key status for function key disp
  0144  01            		db	01h		;fda8	cursor Y+1
  0145  01            		db	01h		;fda9	cursor X+1
  0146  00C2          		dw	0c200h		;fdaa	cursor address
  0148  20            		db	COLUMNS		;fdac	X max+1
  0149  00            		db	00h		;fdad
  014A  0000          		dw	0000h		;fdae	graphic X
  014C  0000          		dw	0000h		;fdb0	graphic Y
  014E  00            		db	00h		;fdb2
  014F  00            		db	00h		;fdb3
  0150  00            		db	00h		;fdb4
  0151  00            		db	00h		;fdb5
  0152  10            		db	10h		;fdb6	LINEST-1
                      	
                      	
  0153                	FKEYLST:
  0153  9A20          		db	9ah, ' '	;COLOR
  0155  A322          		db	0a3h, 22h	;CLOAD"
  0157  8820          		db	88h, ' '	;GOTO
  0159  9720          		db	97h, ' '	;LIST
  015B  890D          		db	89h, 0dh	;RUN
  015D  9F20          		db	9fh, ' '	;SCREEN
  015F  A422          		db	0a4h, 22h	;CSAVE"
  0161  9520          		db	95h, ' '	;PRINT
  0163  A720          		db	0a7h, ' '	;PLAY
  0165  960D          		db	96h, 0dh	;CONT
                      	
                      	
  0167                	OPRTBL:
                      	;c4-c7
                      	;	dw					F_FN,	F_SPC,	F_INKY,	C_THEN
                      	;c8-cf
  0167  470CDC036F3685		dw	O_NOT,	C_STEP,	O_PLS,	O_MNS,	O_MUL,	O_DIV,	O_POW,	O_AND
                      	;d0-d3
  0177  CF0BE70B      		dw	O_OR,	O_GTEQLT
                      	
  017B                	CMDLST:
                      	;80-8f
  017B  65356006DC35E0		dw	C_END,	C_FOR,	C_NEXT,	C_DATA,	C_INPT,	C_DIM,	C_READ,	C_LET
  018B  A6078107250816		dw	C_GOTO,	C_RUN,	C_IF,	C_RSTR,	C_GSUB,	C_RET,	C_REM,	C_STOP
                      	;90-9f
  019B  B60DFF077A0857		dw	C_OUT,	C_ON,	C_LPRT,	C_DEF,	C_POKE,	C_PRT,	C_CONT,	C_LIST
  01AB  BB0593359B1D38		dw	C_LLST,	C_CLR,	C_COLR,	C_PSET,	C_PRST,	C_LINE,	C_PAIN,	C_SCRN
                      	;a0-aa
  01BB  FB1DD31CF61C5A		dw	C_CLS,	C_LOCA,	C_CNSL,	C_CLD,	C_CSV,	C_EXEC,	C_SOUN,	C_PLAY
  01CB  E6224E22D434  		dw	C_KEY,	C_LCPY,	C_NEW
                      	
  01D1                	FNCLST:
                      	;d4-df
  01D1  0A3980391639E5		dw					F_SGN,	F_INT,	F_ABS,	F_USR
  01D9  1332A80D330D41		dw	F_FRE,	F_INP,	F_LPOS,	F_POS,	F_SQR,	F_RND,	F_LOG,	F_EXP
                      	;e0-ef
  01E9  753D883D533EEE		dw	F_COS,	F_SIN,	F_TAN,	F_PEEK,	F_LEN,	F_HEX,	F_STR,	F_VAL
  01F9  AC31B631C031C7		dw	F_ASC,	F_CHR,	F_LEFT,	F_RHT,	F_MID,	F_POIN,	F_CSRL,	F_STCK
                      	;f0-f1
  0209  2E226F1E      		dw	F_STRG,	F_TIME
                      	
                      	
  020D                	CMDNAME:
  020D  C54E44C64F52CE		db	'E'+80h,"ND",	'F'+80h,"OR",	'N'+80h,"EXT",	'D'+80h,"ATA"
  021B  C94E505554C449		db	'I'+80h,"NPUT",	'D'+80h,"IM",	'R'+80h,"EAD",	'L'+80h,"ET"
  022A  C74F544FD2554E		db	'G'+80h,"OTO",	'R'+80h,"UN",	'I'+80h,"F",	'R'+80h,"ESTORE"
  023A  C74F535542D245		db	'G'+80h,"OSUB",	'R'+80h,"ETURN",'R'+80h,"EM",	'S'+80h,"TOP"
                      	
  024C  CF5554CF4ECC50		db	'O'+80h,"UT",	'O'+80h,"N",	'L'+80h,"PRINT",'D'+80h,"EF"
  025A  D04F4B45D05249		db	'P'+80h,"OKE",	'P'+80h,"RINT",	'C'+80h,"ONT",	'L'+80h,"IST"
  026B  CC4C495354C34C		db	'L'+80h,"LIST",	'C'+80h,"LEAR",	'C'+80h,"OLOR",	'P'+80h,"SET"
  027E  D05245534554CC		db	'P'+80h,"RESET",'L'+80h,"INE",	'P'+80h,"AINT",	'S'+80h,"CREEN"
                      	
  0293  C34C53CC4F4341		db	'C'+80h,"LS",	'L'+80h,"OCATE",'C'+80h,"ONSOLE",'C'+80h,"LOAD"
  02A8  C353415645C558		db	'C'+80h,"SAVE",	'E'+80h,"XEC",	'S'+80h,"OUND",	'P'+80h,"LAY"
  02BA  CB4559CC434F50		db	'K'+80h,"EY",	'L'+80h,"COPY",	'N'+80h,"EW"
                      	
  02C5                	FNCNAME:
  02C5  D4414228D44F  		db					'T'+80h,"AB(",	'T'+80h,"O"
  02CB  C64ED3504328C9		db	'F'+80h,"N",	'S'+80h,"PC(",	'I'+80h,"NKEY$",'T'+80h,"HEN"
  02DB  CE4F54D3544550		db	'N'+80h,"OT",	'S'+80h,"TEP",	'+'+80h,	'-'+80h
  02E4  AAAFDEC14E44  		db	'*'+80h,	'/'+80h,	'^'+80h,	'A'+80h,"ND"
                      	
  02EA  CF52BEBDBC    		db	'O'+80h,"R",	'>'+80h,	'='+80h,	'<'+80h
  02EF  D3474EC94E54C1		db	'S'+80h,"GN",	'I'+80h,"NT",	'A'+80h,"BS",	'U'+80h,"SR"
  02FB  C65245C94E50CC		db	'F'+80h,"RE",	'I'+80h,"NP",	'L'+80h,"POS",	'P'+80h,"OS"
  0308  D35152D24E44CC		db	'S'+80h,"QR",	'R'+80h,"ND",	'L'+80h,"OG",	'E'+80h,"XP"
                      	
  0314  C34F53D3494ED4		db	'C'+80h,"OS",	'S'+80h,"IN",	'T'+80h,"AN",	'P'+80h,"EEK"
  0321  CC454EC8455824		db	'L'+80h,"EN",	'H'+80h,"EX$",	'S'+80h,"TR$",	'V'+80h,"AL"
  032F  C15343C3485224		db	'A'+80h,"SC",	'C'+80h,"HR$",	'L'+80h,"EFT$",	'R'+80h,"IGHT$"
  0341  CD494424D04F49		db	'M'+80h,"ID$",	'P'+80h,"OINT",	'C'+80h,"SRLIN",'S'+80h,"TICK"
                      	
  0355  D354524947D449		db	'S'+80h,"TRIG",	'T'+80h,"IME",	80h
                      	
                      	
  035F                	_ERRBELL:ds	ERRSTR-1-_ERRBELL
  0383                		org	ERRSTR-1
  0383                	ERRBELL:
  0383  07            		db	07h
                      	
  0384                	_ERRSTR:ds	ERRSTR-_ERRSTR
  0384                		org	ERRSTR
  0384  204572726F7200		db	" Error", 00h
                      	
  038B                	_ERRIN:	ds	ERRIN-_ERRIN
  038B                		org	ERRIN
  038B  20696E2000    		db	" in ", 00h
                      	
  0390                	_OK:
  0390                		ds	OK-_OK
  0390                		org	OK
  0390  4F6B0D0A00    		db	"Ok", 0dh, 0ah, 00h
                      	
  0395                	ERRID:
  0395  4E46534E52474F		db	"NF", "SN", "RG", "OD", "FC", "OV", "OM", "UL"
  03A5  425344442F3049		db	"BS", "DD", "/0", "ID", "TM", "OS", "LS", "ST"
  03B5  434E554654524D		db	"CN", "UF", "TR", "MO", "FD"
                      	
                      	
                      	;print error message
                      	;input: e=error number
                      	;destroys: af,bc,de,hl
  03BF                	PRTERR:
  03BF  3E3F          		ld	a,'?'
  03C1  CD7510        		call	PUTC
  03C4  219503        		ld	hl,ERRID
  03C7  1600          		ld	d,00h
  03C9  19            		add	hl,de
  03CA  7E            		ld	a,(hl)
  03CB  CD7510        		call	PUTC
  03CE  23            		inc	hl
  03CF  7E            		ld	a,(hl)
  03D0  CD7510        		call	PUTC
  03D3  218303        		ld	hl,ERRBELL
  03D6  C3CF30        		jp	PUTS
                      	
                      	
  03D9                	NFERR:
  03D9  1E00          		ld	e,00h
  03DB  01            		db	01h		;ld bc,****
  03DC                	F_HEX:
  03DC                	C_TO:
  03DC                	C_TAB:
  03DC                	F_SPC:
  03DC                	C_THEN:
  03DC                	C_STEP:
  03DC                	SNERR:
  03DC  1E02          		ld	e,02h
  03DE  01            		db	01h		;ld bc,****
  03DF                	RGERR:
  03DF  1E04          		ld	e,04h
  03E1  01            		db	01h		;ld bc,****
  03E2                	ODERR:
  03E2  1E06          		ld	e,06h
  03E4  01            		db	01h		;ld bc,****
  03E5                	FCERR:
  03E5                	F_USR:
  03E5  1E08          		ld	e,08h
  03E7  01            		db	01h		;ld bc,****
  03E8                	OVERR:
  03E8  1E0A          		ld	e,0ah
  03EA  01            		db	01h		;ld bc,****
  03EB                	OMERR:
  03EB  1E0C          		ld	e,0ch
  03ED  01            		db	01h		;ld bc,****
  03EE                	ULERR:
  03EE  1E0E          		ld	e,0eh
  03F0  01            		db	01h		;ld bc,****
  03F1                	BSERR:
  03F1  1E10          		ld	e,10h
  03F3  01            		db	01h		;ld bc,****
  03F4                	DDERR:
  03F4  1E12          		ld	e,12h
  03F6  01            		db	01h		;ld bc,****
  03F7                	DIV0ERR:
  03F7  1E14          		ld	e,14h
  03F9  01            		db	01h		;ld bc,****
  03FA                	IDERR:
  03FA  1E16          		ld	e,16h
  03FC  01            		db	01h		;ld bc,****
  03FD                	TMERR:
  03FD  1E18          		ld	e,18h
  03FF  01            		db	01h		;ld bc,****
  0400                	OSERR:
  0400  1E1A          		ld	e,1ah
  0402  01            		db	01h		;ld bc,****
  0403                	LSERR:
  0403  1E1C          		ld	e,1ch
  0405  01            		db	01h		;ld bc,****
  0406                	STERR:
  0406  1E1E          		ld	e,1eh
  0408  01            		db	01h		;ld bc,****
  0409                	CNERR:
  0409  1E20          		ld	e,20h
  040B  01            		db	01h		;ld bc,****
  040C                	UFERR:
  040C  1E22          		ld	e,22h
  040E  01            		db	01h		;ld bc,****
  040F                	TRERR:
  040F  1E24          		ld	e,24h
  0411  01            		db	01h		;ld bc,****
  0412                	MOERR:
  0412  1E26          		ld	e,26h
  0414  01            		db	01h		;ld bc,****
  0415                	FDERR:
  0415  1E28          		ld	e,28h
                      	
  0417  ED7B5BFA      		ld	sp,(STACK)
  041B  AF            		xor	a
  041C  3231FF        		ld	(STRDSC2),a
  041F  3235FF        		ld	(STRDSC3),a
  0422  3239FF        		ld	(STRDSC4),a
  0425  3D            		dec	a
  0426  3255FF        		ld	(STOPAD+1),a	;(STOPAD)>=fa00h
  0429  CD5409        		call	PRTNLXTXT
  042C  CDBF03        		call	PRTERR
                      	
  042F                	PRTLNUM:
  042F  CDB31B        		call	PLSTOP
                      	
  0432  2A5DFA        		ld	hl,(LINENUM)
  0435  7C            		ld	a,h
  0436  A5            		and	l
  0437  3C            		inc	a
  0438  C4993A        		call	nz,INLNUM	;if (LINENUM)<>0ffffh
  043B  C34204        		jp	EDIT
                      	
                      	
                      	;program edit and direct command mode
  043E                	_EDIT:	ds	EDIT-_EDIT
  0442                		org	EDIT
                      	
  0442  CD5810        		call	CLRKBF
  0445                	EDIT2:
  0445  3E01          		ld	a,1
  0447  3258FA        		ld	(DEVICE),a
  044A  3A57FA        		ld	a,(PRTPOS)
  044D  B7            		or	a
  044E  C43927        		call	nz,PUTNL
  0451  CD5109        		call	PRTNLXALL
  0454  219003        		ld	hl,OK
  0457  CDCF30        		call	PUTS
                      	
  045A  21FFFF        		ld	hl,0ffffh
  045D  225DFA        		ld	(LINENUM),hl
                      	
  0460                	EDITLP:
  0460  CDF928        		call	INPT1
  0463  DCB31B        		call	c,PLSTOP
  0466  CD2505        		call	CNVIL
  0469  21D9FE        		ld	hl,INPBUF-1
  046C  D7            		rst	ANADAT		;
  046D  3C            		inc	a
  046E  3D            		dec	a
  046F  28EF          		jr	z,EDITLP
  0471  D20A07        		jp	nc,INTPRT	;
                      	
                      	
                      	;change program
  0474                	CHGPRG:
  0474  CD5F07        		call	GETLN
  0477  E5            		push	hl		;buffer address
  0478  D5            		push	de		;line number
  0479  E5            		push	hl		;buffer address
  047A  CDF104        		call	SRCHLN		;
  047D  3015          		jr	nc,NOTDEL
                      	
                      	
                      	;bc=address to be deleted
                      	;hl=next line address
                      	;(sp)=buffer address
  047F                	DELPRG:
  047F  C5            		push	bc		;address to be deleted
  0480  EB            		ex	de,hl		;de <- next line address
  0481  2A56FF        		ld	hl,(VARAD)
  0484  B7            		or	a
  0485  ED52          		sbc	hl,de
  0487  44            		ld	b,h
  0488  4D            		ld	c,l
  0489  EB            		ex	de,hl		;hl <- next line address
  048A  D1            		pop	de		;address to be deleted in
  048B  D5            		push	de
  048C  EDB0          		ldir
  048E  ED5356FF      		ld	(VARAD),de
  0492  C1            		pop	bc		;address to be inserted in
  0493  37            		scf			;
                      	
  0494                	NOTDEL:
  0494  E1            		pop	hl		;buffer address
  0495  34            		inc	(hl)
  0496  35            		dec	(hl)
  0497  2005          		jr	nz,INSPRG
  0499  3833          		jr	c,PRGEND	;
  049B  C3EE03        		jp	ULERR
                      	
  049E                	INSPRG:
  049E  AF            		xor	a
  049F  110500        		ld	de,5
  04A2                	PRGLP:
  04A2  1C            		inc	e
  04A3  3C            		inc	a
  04A4  23            		inc	hl
  04A5  34            		inc	(hl)
  04A6  35            		dec	(hl)
  04A7  20F9          		jr	nz,PRGLP
                      	
  04A9  2A56FF        		ld	hl,(VARAD)
  04AC  E5            		push	hl
                      	;	or	a
  04AD  ED42          		sbc	hl,bc
  04AF  E5            		push	hl		;slide size
  04B0  09            		add	hl,bc		;old (VARAD)
  04B1  19            		add	hl,de		;old (VARAD)+size
  04B2  2256FF        		ld	(VARAD),hl
  04B5  EB            		ex	de,hl
  04B6  C1            		pop	bc		;slide size
  04B7  E1            		pop	hl		;old (VARAD)
  04B8  2B            		dec	hl
  04B9  1B            		dec	de
  04BA  EDB8          		lddr
                      	
  04BC                	COPYPRG:
  04BC  23            		inc	hl		;address to be inserted in
  04BD  23            		inc	hl
  04BE  13            		inc	de
  04BF  13            		inc	de
  04C0  73            		ld	(hl),e
  04C1  23            		inc	hl
  04C2  72            		ld	(hl),d
  04C3  23            		inc	hl
  04C4  D1            		pop	de		;line number	
  04C5  73            		ld	(hl),e
  04C6  23            		inc	hl
  04C7  72            		ld	(hl),d
  04C8  23            		inc	hl
  04C9  EB            		ex	de,hl
  04CA  E1            		pop	hl		;buffer address
                      	
  04CB  4F            		ld	c,a		;b=0
  04CC  EDB0          		ldir
                      	
  04CE                	PRGEND:
  04CE  CDF934        		call	RESSTK
  04D1  CDD604        		call	CHGLKP
  04D4  188A          		jr	EDITLP
                      	
                      	
                      	;change link pointer
                      	;destroy: af,bc,de,hl
  04D6                	CHGLKP:
  04D6  CD99FF        		call	HOOKCLP
  04D9  ED5B5FFA      		ld	de,(STARTAD)
                      	;skip address and line number
  04DD                	CHGLKPLP:
  04DD  62            		ld	h,d
  04DE  6B            		ld	l,e
  04DF  7E            		ld	a,(hl)
  04E0  23            		inc	hl
  04E1  B6            		or	(hl)
  04E2  C8            		ret	z
                      	
  04E3  010300        		ld	bc,0003h
  04E6  09            		add	hl,bc
                      	
                      	;search for next line
  04E7  AF            		xor	a
  04E8  4F            		ld	c,a		;b=0
  04E9  EDB1          		cpir
                      	
                      	;next line address
  04EB  EB            		ex	de,hl
  04EC  73            		ld	(hl),e
  04ED  23            		inc	hl
  04EE  72            		ld	(hl),d
  04EF  18EC          		jr	CHGLKPLP
                      	
                      	
                      	;search for line number
                      	;input: de=line number
                      	;output: z=1,c=1) bc=address, hl=next line address
                      	;	 z=0,c=0) bc=next line address, hl=next next line address
                      	;	 z=1,c=0) bc=hl=end address
                      	;destroy: af
  04F1                	SRCHLN:
  04F1  2A5DFA        		ld	hl,(LINENUM)
  04F4  E7            		rst	CPHLDE
  04F5  300C          		jr	nc,SRCHSTART	;less than or equal to current line number
  04F7  2A4EFF        		ld	hl,(PROGAD)
  04FA                	SRCHLP1:
  04FA  7E            		ld	a,(hl)
  04FB  23            		inc	hl
  04FC  B7            		or	a
  04FD  20FB          		jr	nz,SRCHLP1
                      	
                      	;for PORTOPIA (mk2)
                      	;	jr	SRCHLP2
  04FF  CD0605        		call	SRCHLP2
  0502  D8            		ret	c
                      	
  0503                	SRCHSTART:
  0503  2A5FFA        		ld	hl,(STARTAD)	;search from program start address
                      	
  0506                	SRCHLP2:
  0506  44            		ld	b,h
  0507  4D            		ld	c,l
  0508  7E            		ld	a,(hl)
  0509  23            		inc	hl
  050A  B6            		or	(hl)
  050B  2815          		jr	z,SRCHEND2	;program end
  050D  23            		inc	hl
  050E  23            		inc	hl
  050F  7E            		ld	a,(hl)
  0510  2B            		dec	hl
  0511  BA            		cp	d
  0512  2002          		jr	nz,SRCHNZ
  0514  7E            		ld	a,(hl)
  0515  BB            		cp	e
  0516                	SRCHNZ:
  0516  0A            		ld	a,(bc)
  0517  2B            		dec	hl
  0518  66            		ld	h,(hl)
  0519  6F            		ld	l,a
  051A  38EA          		jr	c,SRCHLP2	;(hl,hl-1)-de
  051C  2001          		jr	nz,SRCHEND	;(hl,hl-1)-de
  051E  37            		scf
  051F                	SRCHEND:
  051F  0B            		dec	bc
  0520  2B            		dec	hl
  0521  C9            		ret
                      	
  0522                	SRCHEND2:
  0522  2B            		dec	hl
  0523  18FA          		jr	SRCHEND
                      	
                      	
                      	;convert to intermediate language
                      	;input: hl=INPBUF-1
  0525                	CNVIL:
  0525  54            		ld	d,h
  0526  5D            		ld	e,l
                      	
  0527                	ILLP1:
  0527  13            		inc	de
  0528  1A            		ld	a,(de)
  0529  B7            		or	a
  052A  FA2705        		jp	m,ILLP1		;kana
  052D  23            		inc	hl
  052E  CAB505        		jp	z,ILEND
  0531  FE22          		cp	22h		;double quotation mark
  0533  2849          		jr	z,ILDQ
  0535  FE3F          		cp	'?'
  0537  285E          		jr	z,ILQ
  0539  FE14          		cp	14h
  053B  285E          		jr	z,ILGRP
                      	
  053D  E5            		push	hl
  053E  CDAC0B        		call	TOUPPER
  0541  F680          		or	80h
  0543  12            		ld	(de),a
                      	
  0544  0680          		ld	b,80h
  0546  210D02        		ld	hl,CMDNAME
                      	
  0549                	ILLP2:
  0549  D5            		push	de
  054A  1A            		ld	a,(de)
  054B  BE            		cp	(hl)
  054C  2016          		jr	nz,ILLP5
                      	
                      	;1st character matched
  054E                	ILLP3:
  054E  23            		inc	hl
  054F  7E            		ld	a,(hl)
  0550  07            		rlca
  0551  3850          		jr	c,ILFOUND
                      	
  0553  78            		ld	a,b
  0554  FE88          		cp	GOTO
  0556                	ILLP4:
  0556  13            		inc	de
  0557  1A            		ld	a,(de)
  0558  2004          		jr	nz,NOGOTO
  055A  FE20          		cp	' '
  055C  28F8          		jr	z,ILLP4
  055E                	NOGOTO:
  055E  CDAC0B        		call	TOUPPER
  0561  BE            		cp	(hl)
  0562  28EA          		jr	z,ILLP3
                      	
  0564                	ILLP5:
  0564  23            		inc	hl
  0565  7E            		ld	a,(hl)
  0566  07            		rlca
  0567  30FB          		jr	nc,ILLP5
  0569  D1            		pop	de
  056A  04            		inc	b
  056B  78            		ld	a,b
  056C  FEF2          		cp	FNCLAST+1
  056E  3008          		jr	nc,ILNC
  0570  FEAB          		cp	CMDLAST+1
  0572  20D5          		jr	nz,ILLP2
  0574  06C2          		ld	b,TAB
  0576  18D1          		jr	ILLP2
                      	
                      	;not found
  0578                	ILNC:
  0578  1A            		ld	a,(de)
  0579  E67F          		and	7fh
  057B  47            		ld	b,a
  057C  1826          		jr	ILPUT
                      	
  057E                	ILDQ:
  057E  77            		ld	(hl),a
                      	
  057F                	ILREM:
  057F  4F            		ld	c,a		;double quotation mark or 0(REM)
  0580  0601          		ld	b,01h		;double quotation counter
                      	
                      	;REM,DATA,""
                      	;loop until (de)=0 or (de)=c
  0582                	ILLP6:
  0582  13            		inc	de
  0583  23            		inc	hl
  0584  1A            		ld	a,(de)
  0585  77            		ld	(hl),a
  0586  B7            		or	a
  0587  282D          		jr	z,ILEND2
  0589  FE22          		cp	22h
  058B  2001          		jr	nz,ILNZ
  058D  04            		inc	b
  058E                	ILNZ:
  058E  CB40          		bit	0,b
  0590  20F0          		jr	nz,ILLP6
  0592  B9            		cp	c
  0593  20ED          		jr	nz,ILLP6
  0595  1890          		jr	ILLP1
                      		
  0597                	ILQ:
  0597  3695          		ld	(hl),PRINT	;95h
  0599  188C          		jr	ILLP1
                      	
  059B                	ILGRP:
  059B  77            		ld	(hl),a
  059C  13            		inc	de
  059D  23            		inc	hl
  059E  1A            		ld	a,(de)
  059F  77            		ld	(hl),a
  05A0  C32705        		jp	ILLP1
                      	
                      	;found
  05A3                	ILFOUND:
  05A3  F1            		pop	af		;cancel
  05A4                	ILPUT:
  05A4  E1            		pop	hl
  05A5  70            		ld	(hl),b
  05A6  78            		ld	a,b
  05A7  D68E          		sub	REM
  05A9  28D4          		jr	z,ILREM
  05AB  FEF5          		cp	DATA-REM
  05AD  C22705        		jp	nz,ILLP1
                      	
  05B0                	ILDAT:
  05B0  013A00        		ld	bc,003ah	;b=0,c=':'
  05B3  18CD          		jr	ILLP6
                      	
  05B5                	ILEND:
  05B5  77            		ld	(hl),a		;a=0
  05B6                	ILEND2:
  05B6  23            		inc	hl
  05B7  77            		ld	(hl),a		;a=0
  05B8  23            		inc	hl
  05B9  77            		ld	(hl),a		;a=0
  05BA  C9            		ret
                      	
                      	
                      	;LLIST command
  05BB                	C_LLST:
  05BB  3E01          		ld	a,1
  05BD  3258FA        		ld	(DEVICE),a
                      	;	jp	C_LIST
                      	
                      	
                      	;LIST command
  05C0                	C_LIST:
  05C0  F1            		pop	af		;cancel return address
  05C1  110000        		ld	de,0
  05C4  CD613F        		call	CHKCLN
  05C7  2814          		jr	z,LISTTOEND
                      	
  05C9  CD5F07        		call	GETLN
  05CC  D5            		push	de		;start line number
  05CD  CD613F        		call	CHKCLN
  05D0  281D          		jr	z,LISTSTRT
                      	
  05D2  FECB          		cp	MINUS
  05D4  C2DC03        		jp	nz,SNERR
  05D7  CD603F        		call	CHKCLNINC
  05DA  2007          		jr	nz,LISTNZ
  05DC  D1            		pop	de
  05DD                	LISTTOEND:
  05DD  01FAFF        		ld	bc,65530
  05E0  C5            		push	bc
  05E1  180C          		jr	LISTSTRT
                      	
  05E3                	LISTNZ:
  05E3  CD5F07        		call	GETLN
  05E6  CD613F        		call	CHKCLN
  05E9  C2DC03        		jp	nz,SNERR
                      	
  05EC  E1            		pop	hl
  05ED  D5            		push	de		;push end line number
  05EE  EB            		ex	de,hl		;de <- start line number
                      	
                      	
                      	;de=start line number, (sp)=end line number
  05EF                	LISTSTRT:
  05EF  CDF104        		call	SRCHLN
  05F2  60            		ld	h,b
  05F3  69            		ld	l,c
                      	
  05F4                	LISTLP1:
  05F4  CD4D27        		call	STOPESC
                      	
  05F7  23            		inc	hl
  05F8  7E            		ld	a,(hl)
  05F9  23            		inc	hl
  05FA  B6            		or	(hl)
  05FB  2843          		jr	z,LISTEND2
                      	
  05FD  CD3927        		call	PUTNL
                      	
  0600  D1            		pop	de		;end line number
  0601  D5            		push	de
                      	
  0602  23            		inc	hl
  0603  7E            		ld	a,(hl)
  0604  23            		inc	hl
  0605  E5            		push	hl
  0606  66            		ld	h,(hl)
  0607  6F            		ld	l,a
                      	
  0608  13            		inc	de
  0609  E7            		rst	CPHLDE
  060A  3033          		jr	nc,LISTEND
                      	
  060C  CDA13A        		call	PUTI2
  060F  3E20          		ld	a,' '
  0611  CDC726        		call	PUTDEV
                      	
  0614  E1            		pop	hl
                      	
  0615  010000        		ld	bc,0000h	;double quotation mark and DATA counter
  0618  50            		ld	d,b		;REM counter
  0619                	LISTLP3:
  0619  23            		inc	hl
  061A  7E            		ld	a,(hl)
  061B  B7            		or	a
  061C  28D6          		jr	z,LISTLP1
                      	
  061E  FE22          		cp	22h
  0620  2822          		jr	z,LISTDQ
                      	
  0622  CB40          		bit	0,b
  0624  2014          		jr	nz,LISTPUT
                      	
  0626  0C            		inc	c
  0627  0D            		dec	c
  0628  201D          		jr	nz,LISTCHKCLN
                      	
  062A  14            		inc	d
  062B  15            		dec	d
  062C  200C          		jr	nz,LISTPUT
                      	
  062E  FE8E          		cp	REM
  0630  281C          		jr	z,LISTREM
  0632  FE83          		cp	DATA
  0634  2819          		jr	z,LISTDATA
  0636  B7            		or	a
  0637  FA5006        		jp	m,LISTCMD
  063A                	LISTPUT:
  063A  CDC726        		call	PUTDEV
  063D  18DA          		jr	LISTLP3
                      	
  063F                	LISTEND:
  063F  F1            		pop	af		;cancel stack
  0640                	LISTEND2:
  0640  F1            		pop	af		;cancel stack
  0641  C34204        		jp	EDIT
                      	
  0644                	LISTDQ:
  0644  04            		inc	b
  0645  18F3          		jr	LISTPUT
                      	
  0647                	LISTCHKCLN:
  0647  FE3A          		cp	':'
  0649  20EF          		jr	nz,LISTPUT
  064B  0D            		dec	c
  064C  18EC          		jr	LISTPUT
                      	
  064E                	LISTREM:
  064E  14            		inc	d
  064F                	LISTDATA:
  064F  0C            		inc	c
  0650                	LISTCMD:
  0650  E5            		push	hl
  0651  CDB525        		call	CNVASC
                      	
  0654                	LISTLP4:
  0654  CDC726        		call	PUTDEV
  0657  23            		inc	hl
  0658  7E            		ld	a,(hl)
  0659  B7            		or	a
  065A  F25406        		jp	p,LISTLP4
  065D  E1            		pop	hl
  065E  18B9          		jr	LISTLP3
                      	
                      	
                      	;FOR command
  0660                	C_FOR:
  0660  F1            		pop	af		;cancel return address
  0661  CD8433        		call	CHKVAR
  0664  7E            		ld	a,(hl)
  0665  FE28          		cp	'('
  0667  CADC03        		jp	z,SNERR
                      	
  066A  CD9832        		call	GETVAR
  066D  2A4EFF        		ld	hl,(PROGAD)
                      	
  0670  D5            		push	de		;variable address
                      	
  0671  CDA234        		call	VARIN
  0674  CD780B        		call	CHKNUM
  0677  7E            		ld	a,(hl)
  0678  FEC3          		cp	TO
  067A  C2DC03        		jp	nz,SNERR
  067D  23            		inc	hl
  067E  CD6F0B        		call	NUMARGMO
  0681  EB            		ex	de,hl
  0682  CD1F39        		call	PUSHF1		;TO value
  0685  EB            		ex	de,hl
  0686  CD613F        		call	CHKCLN		;a=(hl)
  0689  224EFF        		ld	(PROGAD),hl
  068C  CC4122        		call	z,SETPLS1	;no change in z-flag
  068F  2809          		jr	z,STEP1
  0691  FEC9          		cp	STEP
  0693  C2DC03        		jp	nz,SNERR
  0696  23            		inc	hl
  0697  CD6F0B        		call	NUMARGMO
  069A                	STEP1:
  069A  CD4C39        		call	POPF2		;TO value
  069D  C1            		pop	bc		;variable address
                      	
  069E  2A4EFF        		ld	hl,(PROGAD)
  06A1  E5            		push	hl		;program address
  06A2  210200        		ld	hl,0002h
  06A5  39            		add	hl,sp
  06A6                	FORLP:
  06A6  CDD507        		call	SRCHSTK2
  06A9  280F          		jr	z,FOROK		;not found or gosub identifier found
                      	
                      	;check program address
  06AB  111100        		ld	de,0011h
  06AE  19            		add	hl,de
  06AF  5E            		ld	e,(hl)
  06B0  23            		inc	hl
  06B1  56            		ld	d,(hl)
  06B2  23            		inc	hl
  06B3  E3            		ex	(sp),hl
  06B4  E7            		rst	CPHLDE
  06B5  E3            		ex	(sp),hl
  06B6  20EE          		jr	nz,FORLP
                      	
  06B8  F9            		ld	sp,hl
  06B9  D5            		push	de		;program address
                      	
  06BA                	FOROK:
  06BA  2A5DFA        		ld	hl,(LINENUM)
  06BD  E5            		push	hl		;line number
  06BE  CD2E39        		call	PUSHF2		;TO value
  06C1  CD1F39        		call	PUSHF1		;STEP value
  06C4  C5            		push	bc		;variable address
  06C5  3E81          		ld	a,FOR		;identifier
  06C7  F5            		push	af
  06C8  33            		inc	sp
  06C9  181C          		jr	INTPEND
                      	
                      	
                      	;
                      	;
                      	;
                      	;
  06CB                	_COMMAND:ds	CMDEND-14-_COMMAND
  06DC                		org	CMDEND-14
                      	
                      	;execute command
  06DC                	COMMAND:
  06DC  FEAB          		cp	CMDLAST+1	;abh
  06DE  D2DC03        		jp	nc,SNERR
  06E1  1161FA        		ld	de,CMDTBL
  06E4  CD4B3F        		call	JPTBL
                      	
                      	;intepretation end
  06E7                	INTPEND:
  06E7  2A4EFF        		ld	hl,(PROGAD)
                      	
                      	;command end
  06EA                	_CMDEND:ds	CMDEND-_CMDEND
  06EA                		org	CMDEND
                      	
  06EA  2B            		dec	hl
  06EB  D7            		rst	ANADAT
                      	
                      	;	call	CHKCLN
                      	
  06EC  CA0A07        		jp	z,INTPRT
  06EF  C3DC03        		jp	SNERR
                      	
                      	
                      	;continued from C_RUN
                      	;input: hl(=(STARTAD)), z(1=colon or 00h)
  06F2                	RUN2:
  06F2  2807          		jr	z,RUNLP
  06F4  EB            		ex	de,hl
  06F5  CDA607        		call	C_GOTO
  06F8  60            		ld	h,b
  06F9  69            		ld	l,c
  06FA  23            		inc	hl
                      	
  06FB                	RUNLP:
  06FB  7E            		ld	a,(hl)
  06FC  23            		inc	hl
  06FD  B6            		or	(hl)
  06FE  CA4204        		jp	z,EDIT
  0701  23            		inc	hl
  0702  5E            		ld	e,(hl)
  0703  23            		inc	hl
  0704  56            		ld	d,(hl)
  0705  ED535DFA      		ld	(LINENUM),de
                      	
                      	
                      	;0709h: used by PORTOPIA
  0709                	_INTPRT2:ds	INTPRT2-_INTPRT2
  0709                		org	INTPRT2
                      	
  0709  23            		inc	hl
                      	
  070A                	INTPRT:
  070A  CD5B27        		call	CHKSTOP
  070D  CA3635        		jp	z,STOP1
  0710  7E            		ld	a,(hl)
  0711  23            		inc	hl
  0712  224EFF        		ld	(PROGAD),hl
  0715  B7            		or	a
  0716  FADC06        		jp	m,COMMAND
  0719  28E0          		jr	z,RUNLP
  071B  FE3A          		cp	':'
  071D  28EB          		jr	z,INTPRT
  071F  FE20          		cp	' '
  0721  28E7          		jr	z,INTPRT
  0723  2B            		dec	hl
                      	
  0724                	VAR:
  0724  CD8433        		call	CHKVAR
  0727  CD9832        		call	GETVAR
  072A  2A4EFF        		ld	hl,(PROGAD)
  072D  CDA234        		call	VARIN
  0730  18B5          		jr	INTPEND
                      	
                      	
                      	;get a 1-byte integer for function
                      	;input: hl=program address
                      	;output: FAC1,e, hl=next address, a(0=ok)
                      	;destroy: FAC2,f,bc
  0732                	FNCI1:
  0732  CD640B        		call	FNCNUM
                      	;	jp	FTOI1
                      	
                      	
                      	;convert float to 1-byte integer
                      	;input: FAC1
                      	;output: e, a(0=ok)
                      	;destroy: f,bc,de,hl
  0735                	FTOI1:
  0735  CD4107        		call	FTOI2
  0738  7A            		ld	a,d
  0739  B7            		or	a
  073A  C8            		ret	z
  073B  C3E503        		jp	FCERR
                      	
                      	
                      	;convert float to 2-byte integer for USR() (-32768~32767)
                      	;input: FAC1
                      	;output: de
                      	;destroy: af,bc,hl
  073E                	_FTOI2:	ds	FTOI2-_FTOI2
  0741                		org	FTOI2
                      	
  0741  CDB10C        		call	FTOI
  0744  3A69FF        		ld	a,(FAC1+3)
  0747  AA            		xor	d
  0748  F0            		ret	p
  0749  C3E503        		jp	FCERR
                      	
                      	
                      	;convert FAC1 and FAC2 to 2-byte integer
                      	;input: FAC1, FAC2
                      	;output: hl, de
                      	;destroy: af,bc,FAC1,FAC2
  074C                	F12TOI2:
  074C  3A25FF        		ld	a,(ARGTYP)
  074F  B7            		or	a
  0750  C2FD03        		jp	nz,TMERR
  0753  CD4107        		call	FTOI2
  0756  D5            		push	de		;
  0757  CD6E39        		call	EXFAC
  075A  CD4107        		call	FTOI2
  075D  E1            		pop	hl		;
  075E  C9            		ret
                      	
                      	
                      	;get line number from string (0-65529)
                      	;input: hl=program address
                      	;output: de=integer, hl=next address
                      	;destroy: af,bc
  075F                	GETLN:
  075F  0600          		ld	b,0
  0761  CDD127        		call	ATOI2
  0764  E5            		push	hl
  0765  21F9FF        		ld	hl,65529
  0768  E7            		rst	CPHLDE
  0769  E1            		pop	hl
  076A  D0            		ret	nc
  076B  119919        		ld	de,6553
  076E                	GETLNLP:
  076E  2B            		dec	hl
  076F  7E            		ld	a,(hl)
  0770  FE20          		cp	' '
  0772  C0            		ret	nz
  0773  18F9          		jr	GETLNLP
                      	
                      	
                      	;run command
  0775                	_C_RUN:	ds	C_RUN-_C_RUN
  0781                		org	C_RUN
                      	
  0781  CDF934        		call	RESSTK
  0784  CD613F        		call	CHKCLN
  0787  EB            		ex	de,hl
  0788  2A5FFA        		ld	hl,(STARTAD)
  078B  C3F206        		jp	RUN2
                      	
                      	
                      	;GOSUB command
  078E                	C_GSUB:
  078E  CDA607        		call	C_GOTO
  0791  2B            		dec	hl
  0792                	GSUBLP:
  0792  CD603F        		call	CHKCLNINC
  0795  20FB          		jr	nz,GSUBLP
                      	
  0797  44            		ld	b,h
  0798  4D            		ld	c,l
                      	
  0799  CDEA34        		call	CHKFRE
  079C  2A5DFA        		ld	hl,(LINENUM)
  079F  E3            		ex	(sp),hl
  07A0  C5            		push	bc		;program address
  07A1  3E8C          		ld	a,GOSUB
  07A3  F5            		push	af		;gosub identifier
  07A4  33            		inc	sp
  07A5                	JPHL:
  07A5  E9            		jp	(hl)
                      	
                      	
                      	;GOTO command
  07A6                	C_GOTO:
  07A6  CD5F07        		call	GETLN
  07A9  E5            		push	hl
  07AA  CDF104        		call	SRCHLN
  07AD  E1            		pop	hl
  07AE  D2EE03        		jp	nc,ULERR
  07B1  ED434EFF      		ld	(PROGAD),bc
  07B5  C9            		ret
                      	
                      	
                      	;RETURN command
  07B6                	C_RET:
  07B6  C1            		pop	bc		;return address
  07B7                	RETLP:
  07B7  CDD107        		call	SRCHSTK
  07BA  D2DF03        		jp	nc,RGERR	;not found
  07BD  2807          		jr	z,RETOK		;gosub identifier found
  07BF  211300        		ld	hl,0013h
  07C2  39            		add	hl,sp
  07C3  F9            		ld	sp,hl
  07C4  18F1          		jr	RETLP
                      	
  07C6                	RETOK:
  07C6  33            		inc	sp
  07C7  E1            		pop	hl
  07C8  224EFF        		ld	(PROGAD),hl
  07CB  E1            		pop	hl
  07CC  225DFA        		ld	(LINENUM),hl
  07CF  C5            		push	bc		;return address
  07D0  C9            		ret
                      	
                      	
                      	;search stack for for/gosub identifier
                      	;output: c-flag(1=found), z-flag(0=for/1=gosub if found)
                      	;destroy: af,de,hl
  07D1                	SRCHSTK:
  07D1  210200        		ld	hl,0002h
  07D4  39            		add	hl,sp
                      	
                      	;search (hl)
                      	;destroy: af,de
  07D5                	SRCHSTK2:
  07D5  ED5B5BFA      		ld	de,(STACK)
  07D9  E7            		rst	CPHLDE
  07DA  D0            		ret	nc		;(z-flag=1)
  07DB  7E            		ld	a,(hl)
  07DC  FE8C          		cp	GOSUB
  07DE  37            		scf
  07DF  C9            		ret
                      	
                      	
                      	;DATA command
  07E0                	_C_DATA:ds	C_DATA-_C_DATA
  07E0                		org	C_DATA
                      	
  07E0  013A          		db	01h, ':'	;ld bc,0e3ah/nop
                      	
                      	
                      	;REM command
  07E2                	_C_REM:	ds	C_REM-_C_REM
  07E2                		org	C_REM
                      	
  07E2  0E00          		ld	c,0
                      	
                      	;input: c
  07E4                	DATREM:
  07E4  0600          		ld	b,0
  07E6                	DATALP:
  07E6  7E            		ld	a,(hl)
  07E7  B7            		or	a
  07E8  CAA80B        		jp	z,SETPRGAD
                      	
  07EB  CB40          		bit	0,b
  07ED  2004          		jr	nz,DATANZ
  07EF  B9            		cp	c
  07F0  CAA80B        		jp	z,SETPRGAD
  07F3                	DATANZ:
  07F3  23            		inc	hl
  07F4  FE22          		cp	22h		;double quotation mark
  07F6  20EE          		jr	nz,DATALP
  07F8  04            		inc	b
  07F9  18EB          		jr	DATALP
                      	
                      	
                      	;LET command
  07FB                	C_LET:
  07FB  F1            		pop	af		;cancel return address
  07FC  C32407        		jp	VAR
                      	
                      	
                      	;ON command
  07FF                	C_ON:
  07FF  CDE40D        		call	INT1ARG
  0802  7E            		ld	a,(hl)
  0803  57            		ld	d,a		;
  0804  F604          		or	04h
  0806  FE8C          		cp	GOSUB		;88h(GOTO) or 8ch(GOSUB)
  0808  C2DC03        		jp	nz,SNERR
                      	
  080B                	ONLP:
  080B  23            		inc	hl
  080C  1D            		dec	e
  080D  280E          		jr	z,ONZ
  080F  D5            		push	de
  0810  CD5F07        		call	GETLN
  0813  224EFF        		ld	(PROGAD),hl
  0816  D1            		pop	de
  0817  7E            		ld	a,(hl)
  0818  FE2C          		cp	','
  081A  28EF          		jr	z,ONLP
  081C  C9            		ret
                      	
  081D                	ONZ:
  081D  7A            		ld	a,d		;
  081E  FE88          		cp	GOTO
  0820  2884          		jr	z,C_GOTO
  0822  C38E07        		jp	C_GSUB
                      	
                      	
                      	;IF command
  0825                	C_IF:
  0825  CD6F0B        		call	NUMARGMO
  0828  7E            		ld	a,(hl)
  0829  FEC7          		cp	THEN
  082B  2805          		jr	z,IFOK
  082D  FE88          		cp	GOTO
  082F  C2DC03        		jp	nz,SNERR
  0832                	IFOK:
  0832  3A6AFF        		ld	a,(FAC1+4)
  0835  B7            		or	a
  0836  28AA          		jr	z,C_REM
                      	;	call	SKIPSPINC
                      	;	sub	'0'
                      	;	cp	'9'-'0'+1
                      	
  0838  D7            		rst	ANADAT
                      	
  0839  DAA607        		jp	c,C_GOTO
  083C                	IFEND:
  083C  224EFF        		ld	(PROGAD),hl
  083F  F1            		pop	af		;cancel return address
  0840  C30A07        		jp	INTPRT		;skip colon check
                      	
                      	
                      	;LPRINT command
  0843                	_C_LPRT:ds	C_LPRT-_C_LPRT
  087A                		org	C_LPRT
                      	
  087A  3E01          		ld	a,1
  087C  1803          		jr	PRTDEV
                      	
                      	
                      	;PRINT command
  087E                	_C_PRT:	ds	C_PRT-_C_PRT
  087E                		org	C_PRT
                      	
  087E  CD7327        		call	DEVNUM
  0881                	PRTDEV:
  0881  3258FA        		ld	(DEVICE),a
  0884  07            		rlca
  0885  DCA825        		call	c,PRTOPN
                      	
  0888                	PRTLP1:
  0888  CD613F        		call	CHKCLN		;a=(hl)
  088B  284B          		jr	z,PRTEOL
  088D                	PRTLP2:
  088D  FE3B          		cp	';'
  088F  284F          		jr	z,PRTNEXT
  0891  FE2C          		cp	','
  0893  2848          		jr	z,PRTCMM
  0895  FEC5          		cp	SPC
  0897  CA1F09        		jp	z,PRTSPC
  089A  FEC2          		cp	TAB
  089C  CA2F09        		jp	z,PRTTAB
                      	
  089F  CD3D17        		call	ARG
  08A2  3A25FF        		ld	a,(ARGTYP)
  08A5  B7            		or	a
  08A6  2813          		jr	z,PRTNUM
                      	
                      	;string
  08A8  CD9226        		call	STRARG2
  08AB  2A4EFF        		ld	hl,(PROGAD)
  08AE  B7            		or	a
  08AF  28D7          		jr	z,PRTLP1
  08B1  47            		ld	b,a
  08B2                	PRTSLP:
  08B2  1A            		ld	a,(de)
  08B3  13            		inc	de
  08B4  CDC726        		call	PUTDEV
  08B7  10F9          		djnz	PRTSLP
  08B9  18CD          		jr	PRTLP1
                      	
  08BB                	PRTNUM:
  08BB  E5            		push	hl
  08BC  CDAC3A        		call	FTOA
                      	
  08BF  3AACFD        		ld	a,(WIDTH)
  08C2  C603          		add	a,3
  08C4  4F            		ld	c,a
  08C5  AF            		xor	a
  08C6  EDB1          		cpir
  08C8  3AA9FD        		ld	a,(CSRX)
  08CB  B9            		cp	c
  08CC  D43927        		call	nc,PUTNL
  08CF  2172FF        		ld	hl,FAC3
  08D2  CDCF30        		call	PUTS
  08D5  E1            		pop	hl
  08D6  18B0          		jr	PRTLP1
                      	
  08D8                	PRTEOL:
                      	;	xor	a
                      	;	ld	(GRPFLG),a
  08D8  CD3927        		call	PUTNL
  08DB  1809          		jr	PRTEND
                      	
  08DD                	PRTCMM:
  08DD  CDF108        		call	CMMMAIN
  08E0                	PRTNEXT:
  08E0  23            		inc	hl
  08E1                	PRTNEXT2:
  08E1  CD613F        		call	CHKCLN
  08E4  20A7          		jr	nz,PRTLP2
  08E6                	PRTEND:
  08E6  224EFF        		ld	(PROGAD),hl
  08E9  3A58FA        		ld	a,(DEVICE)
  08EC  07            		rlca
  08ED  D0            		ret	nc
  08EE  C3061B        		jp	WCLOSE
                      	
  08F1                	CMMMAIN:
  08F1  3A58FA        		ld	a,(DEVICE)
  08F4  B7            		or	a
  08F5  2807          		jr	z,CMM0	;CRT
  08F7  3D            		dec	a
  08F8  2817          		jr	z,CMM1	;printer
                      	
                      	;RS-232C,CMT
  08FA  060E          		ld	b,14
  08FC  180B          		jr	PUTSPLP
                      	
                      	;CRT
  08FE                	CMM0:
  08FE  3AA9FD        		ld	a,(CSRX)
  0901  D60F          		sub	15
  0903  D23927        		jp	nc,PUTNL
  0906                	CMMSP:
  0906  ED44          		neg
                      	;	call	PUTSP
                      	;	ret
                      	
                      	;a>0
  0908                	PUTSP:
  0908  47            		ld	b,a
  0909                	PUTSPLP:
  0909  3E20          		ld	a,' '
  090B  CDC726        		call	PUTDEV
  090E  10F9          		djnz	PUTSPLP
  0910  C9            		ret
                      	
                      	;printer
  0911                	CMM1:
  0911  3A57FA        		ld	a,(PRTPOS)
  0914  0608          		ld	b,8
  0916                	CMM1LP:
  0916  D60E          		sub	14
  0918  38EC          		jr	c,CMMSP
  091A  10FA          		djnz	CMM1LP
  091C  C33927        		jp	PUTNL
                      	
  091F                	PRTSPC:
  091F  23            		inc	hl
  0920  CD670B        		call	FNCNUMR
  0923  E5            		push	hl
  0924  CD3507        		call	FTOI1
  0927  E1            		pop	hl
  0928                	PRTSPC2:
  0928  7B            		ld	a,e
  0929                	PRTSPC3:
  0929  B7            		or	a
  092A  C40809        		call	nz,PUTSP
  092D  18B2          		jr	PRTNEXT2
                      	
  092F                	PRTTAB:
  092F  23            		inc	hl
  0930  CD670B        		call	FNCNUMR
  0933  E5            		push	hl
  0934  CD3507        		call	FTOI1
  0937  E1            		pop	hl
                      	
  0938  3A58FA        		ld	a,(DEVICE)
  093B  B7            		or	a
  093C  2808          		jr	z,PRTTAB0	;0=CRT
  093E  3D            		dec	a
  093F  20E7          		jr	nz,PRTSPC2	;2,80-ff=RS-232C,CMT
                      	
                      	;printer
  0941                	PRTTAB1:
  0941  3A57FA        		ld	a,(PRTPOS)
  0944  1804          		jr	TABCOMMON
                      	
                      	;CRT
  0946                	PRTTAB0:
  0946  3AA9FD        		ld	a,(CSRX)
  0949  3D            		dec	a
  094A                	TABCOMMON:
  094A  93            		sub	e
  094B  3094          		jr	nc,PRTNEXT2
  094D  ED44          		neg
  094F  18D8          		jr	PRTSPC3
                      	
                      	
                      	;print new line in CRT (graphic and text screen)
  0951                	PRTNLXALL:
  0951  CD5709        		call	PRTNLX
                      	
                      	;change to text screen and print new line in CRT
                      	;if (CSRX)>1 then print new line
  0954                	PRTNLXTXT:
  0954  CD7B13        		call	CHGTXT
  0957                	PRTNLX:
  0957  AF            		xor	a
  0958  3258FA        		ld	(DEVICE),a
  095B  3AA9FD        		ld	a,(CSRX)
  095E  3D            		dec	a
  095F  C8            		ret	z
  0960  C33927        		jp	PUTNL
                      	
                      	
                      	;INPUT command
  0963                	C_INPT:
  0963  7C            		ld	a,h
  0964  FEFA          		cp	0fah
  0966  D2FA03        		jp	nc,IDERR
  0969  2B            		dec	hl
  096A  2254FF        		ld	(STOPAD),hl
  096D  23            		inc	hl
                      	
  096E  CD7327        		call	DEVNUM
  0971  321AFA        		ld	(INPDEV),a
  0974  47            		ld	b,a		;
  0975  B7            		or	a
  0976  CC7B13        		call	z,CHGTXT
  0979  E5            		push	hl		;program address
  097A  7E            		ld	a,(hl)
  097B  FE22          		cp	22h		;double quotation mark
  097D  2022          		jr	nz,INPTMAIN
                      	
  097F  78            		ld	a,b		;
  0980  B7            		or	a
  0981  C2DC03        		jp	nz,SNERR
  0984  F1            		pop	af		;cancel program address
  0985                	PROMPT:
  0985  23            		inc	hl
  0986  7E            		ld	a,(hl)
  0987  B7            		or	a
  0988  CADC03        		jp	z,SNERR
  098B  FE22          		cp	22h		;double quotation mark
  098D  2805          		jr	z,PROMPTEND
  098F  CD7510        		call	PUTC
  0992  18F1          		jr	PROMPT
  0994                	PROMPTEND:
  0994  CD593F        		call	SKIPSPINC
  0997  FE3B          		cp	';'
  0999  C2DC03        		jp	nz,SNERR
  099C  23            		inc	hl
  099D  224EFF        		ld	(PROGAD),hl
  09A0  E5            		push	hl		;program address
                      	
  09A1                	INPTMAIN:
  09A1  3A1AFA        		ld	a,(INPDEV)
  09A4  B7            		or	a
  09A5  C2FD23        		jp	nz,INPTEXT
                      	
  09A8  CD6215        		call	CUTLINE
                      	
  09AB  211601        		ld	hl,QMARK
  09AE  CDCF30        		call	PUTS
  09B1  CDF928        		call	INPT1
  09B4  D1            		pop	de		;program address
  09B5  C1            		pop	bc		;return address
  09B6  DA3E35        		jp	c,STOP3
  09B9  C5            		push	bc		;return address
  09BA  D5            		push	de		;program address
                      	
  09BB  3EFF          		ld	a,0ffh
  09BD  3255FF        		ld	(STOPAD+1),a
                      	
  09C0  23            		inc	hl		;INPBUF
  09C1  3AA6FE        		ld	a,(INPTX)
  09C4  47            		ld	b,a
  09C5  B7            		or	a
  09C6  2809          		jr	z,INPTLP2
  09C8  3E14          		ld	a,14h
  09CA                	INPTLP1:
  09CA  BE            		cp	(hl)
  09CB  2001          		jr	nz,INPTNZ
  09CD  23            		inc	hl
  09CE                	INPTNZ:
  09CE  23            		inc	hl
  09CF  10F9          		djnz	INPTLP1
                      	
  09D1                	INPTLP2:
  09D1  70            		ld	(hl),b		;b=0
  09D2  2B            		dec	hl
  09D3  7E            		ld	a,(hl)
  09D4  FE20          		cp	' '
  09D6  28F9          		jr	z,INPTLP2
                      	
                      	;analyze input buffer
  09D8                	INPTANA:
  09D8  11DAFE        		ld	de,INPBUF
  09DB                	INPTLP3:
  09DB  2A4EFF        		ld	hl,(PROGAD)
  09DE  CD8433        		call	CHKVAR
  09E1  D5            		push	de		;input buffer
  09E2  CD9832        		call	GETVAR
  09E5  E1            		pop	hl		;input buffer
                      	
  09E6  CB79          		bit	7,c
  09E8  2066          		jr	nz,INPTSTR
                      	
  09EA                	INPTNUM:
  09EA  D5            		push	de		;variable address
  09EB  3EFF          		ld	a,255
  09ED  CD9839        		call	ATOF
  09F0  D1            		pop	de		;variable address
  09F1  3ADAFE        		ld	a,(INPBUF)
  09F4  B7            		or	a
  09F5  2824          		jr	z,INPTNEXT
  09F7  E5            		push	hl		;input buffer
  09F8  2166FF        		ld	hl,FAC1
  09FB  CD0D0C        		call	SETF
  09FE  E1            		pop	hl		;input buffer
  09FF  7E            		ld	a,(hl)
  0A00  B7            		or	a
  0A01  2818          		jr	z,INPTNEXT
  0A03  FE2C          		cp	','
  0A05  2814          		jr	z,INPTNEXT
  0A07  3A1AFA        		ld	a,(INPDEV)
  0A0A  B7            		or	a
  0A0B  C21504        		jp	nz,FDERR
  0A0E  214B24        		ld	hl,REDO
  0A11  CDCF30        		call	PUTS
  0A14  E1            		pop	hl		;program address
  0A15  224EFF        		ld	(PROGAD),hl
  0A18  E5            		push	hl		;program address
  0A19  1886          		jr	INPTMAIN
                      	
  0A1B                	INPTNEXT:
  0A1B  EB            		ex	de,hl
  0A1C  2A4EFF        		ld	hl,(PROGAD)
  0A1F  2B            		dec	hl
  0A20  D7            		rst	ANADAT
  0A21  FE2C          		cp	','
  0A23  201F          		jr	nz,INPTEND
  0A25  23            		inc	hl
  0A26  224EFF        		ld	(PROGAD),hl
                      	
  0A29  3ADAFE        		ld	a,(INPBUF)
  0A2C  B7            		or	a
  0A2D  28AC          		jr	z,INPTLP3
  0A2F  1A            		ld	a,(de)
  0A30  13            		inc	de
  0A31  FE2C          		cp	','
  0A33  28A6          		jr	z,INPTLP3
  0A35  3A1AFA        		ld	a,(INPDEV)
  0A38  B7            		or	a
  0A39  C2E203        		jp	nz,ODERR
  0A3C  3E3F          		ld	a,'?'
  0A3E  CD7510        		call	PUTC
  0A41  C3A109        		jp	INPTMAIN
                      	
  0A44                	INPTEND:
  0A44  F1            		pop	af		;cancel program address
  0A45  1A            		ld	a,(de)
  0A46  FE2C          		cp	','
  0A48  C0            		ret	nz
  0A49  213A24        		ld	hl,EXTRA
  0A4C  C3CF30        		jp	PUTS
                      	
                      	
  0A4F                	INPTSLP1:
  0A4F  23            		inc	hl
  0A50                	INPTSTR:
  0A50  7E            		ld	a,(hl)
  0A51  FE20          		cp	' '
  0A53  28FA          		jr	z,INPTSLP1
  0A55  0E00          		ld	c,0		;double quotation mark count
  0A57  FE22          		cp	22h		;double quotation mark
  0A59  2002          		jr	nz,INPTSNZ
  0A5B  23            		inc	hl
  0A5C  0C            		inc	c
  0A5D                	INPTSNZ:
  0A5D  E5            		push	hl
  0A5E  0600          		ld	b,00h
                      	
  0A60                	INPTSLP2:
  0A60  79            		ld	a,c
  0A61  B7            		or	a
  0A62  7E            		ld	a,(hl)
  0A63  200B          		jr	nz,INPTCHKDQ
  0A65  FE2C          		cp	','
  0A67  280F          		jr	z,INPTSZ
  0A69                	INPTCHKZ:
  0A69  B7            		or	a
  0A6A  280C          		jr	z,INPTSZ
  0A6C  23            		inc	hl
  0A6D  04            		inc	b
  0A6E  18F0          		jr	INPTSLP2
                      	
  0A70                	INPTCHKDQ:
  0A70  FE22          		cp	22h		;double quotation mark
  0A72  20F5          		jr	nz,INPTCHKZ
  0A74  0D            		dec	c
  0A75  23            		inc	hl
  0A76  18E8          		jr	INPTSLP2
                      	
  0A78                	INPTSZ:
  0A78  E3            		ex	(sp),hl		;push input buffer
  0A79  78            		ld	a,b
  0A7A  D5            		push	de		;variable address
  0A7B  CD2226        		call	MAKESTR
  0A7E  D1            		pop	de		;variable address
  0A7F  212DFF        		ld	hl,STRDSC1
  0A82  010400        		ld	bc,0004h
  0A85  EDB0          		ldir
  0A87  E1            		pop	hl		;input buffer
  0A88  1891          		jr	INPTNEXT
                      	
                      	
                      	;READ command
  0A8A                	C_READ:
  0A8A  CD8433        		call	CHKVAR
  0A8D  CD9832        		call	GETVAR
  0A90  C5            		push	bc		;variable name
  0A91  D5            		push	de		;variable address
                      	
  0A92  2A5CFF        		ld	hl,(DATAAD)
  0A95  ED5B45FF      		ld	de,(DATALN)
  0A99  7E            		ld	a,(hl)
  0A9A  FE2C          		cp	','
  0A9C  2847          		jr	z,READDATA
  0A9E  FE3A          		cp	':'
  0AA0  2810          		jr	z,READLP3
  0AA2  B7            		or	a
  0AA3  C2E203        		jp	nz,ODERR
                      	
  0AA6                	READLP1:
  0AA6  23            		inc	hl
  0AA7                	READLP2:
  0AA7  4F            		ld	c,a		;always a=0, double quation mark counter
  0AA8  7E            		ld	a,(hl)
  0AA9  23            		inc	hl
  0AAA  B6            		or	(hl)
  0AAB  CAE203        		jp	z,ODERR
  0AAE  23            		inc	hl
  0AAF  5E            		ld	e,(hl)
  0AB0  23            		inc	hl
  0AB1  56            		ld	d,(hl)
                      	
  0AB2                	READLP3:
  0AB2  23            		inc	hl
  0AB3  7E            		ld	a,(hl)
  0AB4  B7            		or	a
  0AB5  28EF          		jr	z,READLP1
  0AB7  FE83          		cp	DATA
  0AB9  282A          		jr	z,READDATA
  0ABB  FE22          		cp	22h		;double quotation mark
  0ABD  281D          		jr	z,READDQ
  0ABF  FE3A          		cp	':'
  0AC1  28EF          		jr	z,READLP3
  0AC3  FE20          		cp	' '
  0AC5  28EB          		jr	z,READLP3
  0AC7  D68E          		sub	REM
  0AC9  2814          		jr	z,READREM
                      	
  0ACB                	READLP4:
  0ACB  23            		inc	hl
  0ACC  7E            		ld	a,(hl)
  0ACD  B7            		or	a
  0ACE  28D6          		jr	z,READLP1
  0AD0  CB41          		bit	0,c
  0AD2  2004          		jr	nz,SKIPCLN
  0AD4  FE3A          		cp	':'
  0AD6  28DA          		jr	z,READLP3
  0AD8                	SKIPCLN:
  0AD8  FE22          		cp	22h		;double quotation mark
  0ADA  20EF          		jr	nz,READLP4
  0ADC                	READDQ:
  0ADC  0C            		inc	c
  0ADD  18EC          		jr	READLP4
                      	
                      	;a=0
  0ADF                	READREM:
                      	;	xor	a
  0ADF  47            		ld	b,a
  0AE0  4F            		ld	c,a
  0AE1  EDB1          		cpir
  0AE3  18C2          		jr	READLP2
                      	
  0AE5                	READDATA:
  0AE5  ED5345FF      		ld	(DATALN),de
  0AE9  CD593F        		call	SKIPSPINC
                      	
  0AEC  D1            		pop	de		;variable address
  0AED  C1            		pop	bc		;variable name
  0AEE  CB79          		bit	7,c
  0AF0  2022          		jr	nz,READSTR
                      	
  0AF2  B7            		or	a
  0AF3  280E          		jr	z,READNUM
  0AF5  FE26          		cp	'&'
  0AF7  280A          		jr	z,READNUM
  0AF9  FE2F          		cp	'/'
  0AFB  283F          		jr	z,READERR
  0AFD  D62B          		sub	'+'
  0AFF  FE0F          		cp	'9'-'+'+1	;+,-.0123456789
  0B01  3039          		jr	nc,READERR
  0B03                	READNUM:
  0B03  D5            		push	de		;variable address
  0B04  3EFF          		ld	a,255
  0B06  CD9839        		call	ATOF
  0B09  E3            		ex	(sp),hl		;push data address, pop variable address
  0B0A  EB            		ex	de,hl
  0B0B  2166FF        		ld	hl,FAC1
  0B0E  CD0D0C        		call	SETF
  0B11  E1            		pop	hl		;data address
  0B12  1842          		jr	READEND
                      	
  0B14                	READSTR:
  0B14  010000        		ld	bc,0000h	;b=double quotation mark?, c=length
  0B17  FE22          		cp	22h		;double quotation mark
  0B19  2002          		jr	nz,RDSNDQ
  0B1B  04            		inc	b
  0B1C  23            		inc	hl
  0B1D                	RDSNDQ:
  0B1D  13            		inc	de
  0B1E  13            		inc	de
  0B1F  7D            		ld	a,l
  0B20  12            		ld	(de),a
  0B21  13            		inc	de
  0B22  7C            		ld	a,h
  0B23  12            		ld	(de),a
  0B24  1B            		dec	de
  0B25  1B            		dec	de
  0B26  1B            		dec	de
                      	
  0B27                	RDSLP2:
  0B27  7E            		ld	a,(hl)
  0B28  B7            		or	a
  0B29  2829          		jr	z,RDSEND
  0B2B  CB40          		bit	0,b
  0B2D  2816          		jr	z,RDSCHK
  0B2F  FE22          		cp	22h		;double quotation mark
  0B31  201A          		jr	nz,RDSNEXT
  0B33  CD603F        		call	CHKCLNINC
  0B36  281C          		jr	z,RDSEND
  0B38  FE2C          		cp	','
  0B3A  2818          		jr	z,RDSEND
                      	
  0B3C                	READERR:
  0B3C  2A45FF        		ld	hl,(DATALN)
  0B3F  225DFA        		ld	(LINENUM),hl
  0B42  C3DC03        		jp	SNERR
                      	
  0B45                	RDSCHK:
  0B45  FE2C          		cp	','
  0B47  280B          		jr	z,RDSEND
  0B49  FE3A          		cp	':'
  0B4B  2807          		jr	z,RDSEND
                      	
  0B4D                	RDSNEXT:
  0B4D  23            		inc	hl
  0B4E  0C            		inc	c
  0B4F  20D6          		jr	nz,RDSLP2
  0B51  C30304        		jp	LSERR
                      	
  0B54                	RDSEND:
  0B54  79            		ld	a,c
  0B55  12            		ld	(de),a
                      	
  0B56                	READEND:
  0B56  225CFF        		ld	(DATAAD),hl
  0B59  2A4EFF        		ld	hl,(PROGAD)
  0B5C  7E            		ld	a,(hl)
  0B5D  FE2C          		cp	','
  0B5F  C0            		ret	nz
  0B60  23            		inc	hl
  0B61  C38A0A        		jp	C_READ
                      	
                      	
                      	;get a numerical argument for function
                      	;input: hl=program address
                      	;output: FAC1
                      	;destroy: FAC2,af,bc,de,hl
  0B64                	FNCNUM:
  0B64  CD920B        		call	CHKLPAR
  0B67                	FNCNUMR:
  0B67  CD3D17        		call	ARG
  0B6A  CDA10B        		call	CHKRPAR
  0B6D  1809          		jr	CHKNUM
                      	
                      	
                      	;get a numerical argument and check result (?MO Error)
                      	;input: hl=program address
                      	;output: FAC1, hl=next address
                      	;destroy: af,bc,de,FAC2
  0B6F                	NUMARGMO:
  0B6F  CD613F        		call	CHKCLN
  0B72  CA1204        		jp	z,MOERR
                      	;	call	NUMARG
                      	;	ret
                      	
                      	
                      	;get a numerical argument and check result
                      	;input: hl=program address
                      	;output: FAC1, hl=next address
                      	;destroy: af,bc,de,FAC2
  0B75                	NUMARG:
  0B75  CD3D17        		call	ARG
                      	;	call	CHKNUM
                      	;	ret
                      	
                      	
                      	;check numeric or not
                      	;output: z-flag (1=ok)
                      	;destroy: af
  0B78                	CHKNUM:
  0B78  3A25FF        		ld	a,(ARGTYP)
  0B7B  B7            		or	a
  0B7C  C8            		ret	z
  0B7D  3D            		dec	a
  0B7E                	CHKNERR:
  0B7E  CAFD03        		jp	z,TMERR
  0B81  C3DC03        		jp	SNERR
                      	
                      	
                      	;check string argument or not
                      	;output: a=length, hl=string descriptor address, z-flag(1=ok)
                      	;destroy: f
  0B84                	CHKSTR:
  0B84  3A25FF        		ld	a,(ARGTYP)
  0B87  3D            		dec	a
  0B88  2005          		jr	nz,CHKSERR
  0B8A  2A67FF        		ld	hl,(FAC1+1)
  0B8D  7E            		ld	a,(hl)
  0B8E  C9            		ret
                      	
  0B8F                	CHKSERR:
  0B8F  3C            		inc	a
  0B90  18EC          		jr	CHKNERR
                      	
                      	
                      	;check (
                      	;input: hl=program address
                      	;output: hl=next address
                      	;destroy: af
  0B92                	CHKLPAR:
  0B92  CD5A3F        		call	SKIPSP
  0B95  FE28          		cp	'('
  0B97  C2DC03        		jp	nz,SNERR
  0B9A  CD603F        		call	CHKCLNINC
  0B9D  C0            		ret	nz
  0B9E  C31204        		jp	MOERR
                      	
                      	
                      	;check )
                      	;input: hl=program address
                      	;output: hl=next address
                      	;destroy: af
  0BA1                	CHKRPAR:
  0BA1  7E            		ld	a,(hl)
  0BA2  FE29          		cp	')'
  0BA4  C2DC03        		jp	nz,SNERR
  0BA7  23            		inc	hl
  0BA8                	SETPRGAD:
  0BA8  224EFF        		ld	(PROGAD),hl
  0BAB  C9            		ret
                      	
                      	
                      	;convert lowercase letter to uppercase letter
                      	;input: a
                      	;output: a
                      	;destroy: f
  0BAC                	TOUPPER:
  0BAC  FE7B          		cp	'z'+1
  0BAE  D0            		ret	nc
  0BAF                	TOUPPER2:
  0BAF  FE61          		cp	'a'
  0BB1  D8            		ret	c
  0BB2  D620          		sub	'a'-'A'
  0BB4  C9            		ret
                      	
                      	
                      	;alphabet, numeral, or katakana? (case ignored)
  0BB5                	ALPNUM2:
  0BB5  FEE0          		cp	0e0h
  0BB7  3F            		ccf
  0BB8  D8            		ret	c
  0BB9  FEA1          		cp	0a1h
  0BBB  D0            		ret	nc
  0BBC  CDAC0B        		call	TOUPPER
                      	;	call	ALPNUM
                      	;	ret
                      	
                      	
                      	;alphabet (capital) or numeral?
                      	;input: a
                      	;output: c-flag(1=yes,0=no)
                      	;destroy: f
  0BBF                	ALPNUM:
  0BBF  FE5B          		cp	'Z'+1
  0BC1  D0            		ret	nc
  0BC2  FE41          		cp	'A'
  0BC4  3F            		ccf
  0BC5  D8            		ret	c
                      	;	jp	CHKFIG
                      	
                      	
                      	;analyze for 0010h
                      	;input: a
                      	;output: z-flag(1=00h or 3ah), c-flag(1=30h-39h)
                      	;destroy: f
  0BC6                	CHKFIG:
  0BC6  B7            		or	a
  0BC7  C8            		ret	z
  0BC8  FE30          		cp	'0'
  0BCA  3F            		ccf
  0BCB  D0            		ret	nc
  0BCC  FE3A          		cp	':'
                      	;	ret	z
                      	;	cp	'9'+1
  0BCE  C9            		ret
                      	
                      	
                      	;OR operator
  0BCF                	O_OR:
  0BCF  CD4C07        		call	F12TOI2
  0BD2  7C            		ld	a,h
  0BD3  B2            		or	d
  0BD4  67            		ld	h,a
  0BD5  7D            		ld	a,l
  0BD6  B3            		or	e
  0BD7  6F            		ld	l,a
  0BD8  C3180D        		jp	S2TOF
                      	
                      	
                      	;AND operator
  0BDB                	O_AND:
  0BDB  CD4C07        		call	F12TOI2
  0BDE  7C            		ld	a,h
  0BDF  A2            		and	d
  0BE0  67            		ld	h,a
  0BE1  7D            		ld	a,l
  0BE2  A3            		and	e
  0BE3  6F            		ld	l,a
  0BE4  C3180D        		jp	S2TOF
                      	
                      	
                      	;>,=,< operator
                      	;bit0: >
                      	;bit1: =
                      	;bit2: <
  0BE7                	O_GTEQLT:
  0BE7  3A25FF        		ld	a,(ARGTYP)
  0BEA  B7            		or	a
  0BEB  280D          		jr	z,GTEQLTZ
  0BED  D603          		sub	3		;string and string
  0BEF  C2FD03        		jp	nz,TMERR
  0BF2  3225FF        		ld	(ARGTYP),a	;a=0
  0BF5  CD220C        		call	CMPSTR
  0BF8  1803          		jr	GTEQLTEND
  0BFA                	GTEQLTZ:
  0BFA  CD1D3F        		call	CMPF
  0BFD                	GTEQLTEND:
  0BFD  79            		ld	a,c		;operator
  0BFE  2803          		jr	z,EQ
  0C00  3002          		jr	nc,GT
  0C02                	LT:
  0C02  0F            		rrca
  0C03                	EQ:
  0C03  0F            		rrca
  0C04                	GT:
  0C04  0F            		rrca
  0C05  3816          		jr	c,SETTRUE
                      	;	jr	SETFALSE
                      	
  0C07                	SETFALSE:
  0C07                	SETZERO:
  0C07  21AB0E        		ld	hl,ZERO
  0C0A                	SETF1:
  0C0A  1166FF        		ld	de,FAC1
  0C0D                	SETF:
  0C0D  EDA0          		ldi
  0C0F  EDA0          		ldi
  0C11  EDA0          		ldi
  0C13  EDA0          		ldi
  0C15  EDA0          		ldi
  0C17  C9            		ret
                      	
  0C18                	SETF2:
  0C18  116DFF        		ld	de,FAC2
  0C1B  18F0          		jr	SETF
                      	
  0C1D                	SETTRUE:
  0C1D                	SETMNS1:
  0C1D  21A60E        		ld	hl,MNSONE
  0C20  18E8          		jr	SETF1
                      	
                      	
  0C22                	CMPSTR:
  0C22  2139FF        		ld	hl,STRDSC4
  0C25  46            		ld	b,(hl)
  0C26  3600          		ld	(hl),00h
  0C28  3A2DFF        		ld	a,(STRDSC1)
  0C2B  B8            		cp	b
  0C2C  F5            		push	af		;flag
  0C2D  3801          		jr	c,CMPSNC
  0C2F  78            		ld	a,b
  0C30                	CMPSNC:
  0C30  B7            		or	a
  0C31  2810          		jr	z,CMPSZ
                      	
  0C33  ED5B2FFF      		ld	de,(STRDSC1+2)
  0C37  2A3BFF        		ld	hl,(STRDSC4+2)
  0C3A  47            		ld	b,a
  0C3B                	CMPSLP:
  0C3B  1A            		ld	a,(de)
  0C3C  BE            		cp	(hl)
  0C3D  2006          		jr	nz,CMPSNZ
  0C3F  13            		inc	de
  0C40  23            		inc	hl
  0C41  10F8          		djnz	CMPSLP
  0C43                	CMPSZ:
  0C43  F1            		pop	af		;flag
  0C44  C9            		ret
                      	
  0C45                	CMPSNZ:
  0C45  E1            		pop	hl		;cancel stack
  0C46  C9            		ret
                      	
                      	
                      	;NOT operator
  0C47                	O_NOT:
  0C47  CD780B        		call	CHKNUM
  0C4A  CD6E39        		call	EXFAC
  0C4D  CD4107        		call	FTOI2
  0C50  7A            		ld	a,d
  0C51  2F            		cpl
  0C52  67            		ld	h,a
  0C53  7B            		ld	a,e
  0C54  2F            		cpl
  0C55  6F            		ld	l,a
  0C56  C3180D        		jp	S2TOF
                      	
                      	
                      	;input: a=integer (unsigned)
  0C59                	I1TOFA:
  0C59  6F            		ld	l,a
                      	
                      	;convert 1- or 2-byte integer to float
                      	;input: hl=integer (unsigned)
                      	;output: FAC1
                      	;destroy: af,b,hl
  0C5A                	I1TOF:
  0C5A  2600          		ld	h,00h
  0C5C                	I2TOF:
  0C5C  D5            		push	de
  0C5D  110000        		ld	de,0000h
  0C60  7C            		ld	a,h
  0C61  B5            		or	l
  0C62  280F          		jr	z,I2TOFZERO
  0C64  0610          		ld	b,10h
  0C66                	I2TOFLP:
  0C66  29            		add	hl,hl
  0C67  3802          		jr	c,I2TOFEND
  0C69  10FB          		djnz	I2TOFLP
                      	
  0C6B                	I2TOFEND:
  0C6B  CB3C          		srl	h
  0C6D  CB1D          		rr	l
  0C6F  EB            		ex	de,hl
  0C70                	I2TOFEND2:
  0C70  78            		ld	a,b
  0C71  C680          		add	a,80h
  0C73                	I2TOFZERO:
                      	;	ld	(FAC1),hl
                      	;	ld	(FAC1+2),de
  0C73  326AFF        		ld	(FAC1+4),a
  0C76  CD8837        		call	SETI4
  0C79  D1            		pop	de
  0C7A  C9            		ret
                      	
                      	
                      	;convert float to 4-byte integer (>=0)
                      	;(round toward zero)
                      	;input: FAC1
                      	;output: FAC1 (integer)
                      	;destroy: af,b,de,hl
  0C7B                	FTOI4:
  0C7B  3EA0          		ld	a,81h+1fh
  0C7D  216AFF        		ld	hl,FAC1+4
  0C80  96            		sub	(hl)		;
  0C81  47            		ld	b,a
  0C82  2A66FF        		ld	hl,(FAC1)
  0C85  ED5B68FF      		ld	de,(FAC1+2)
  0C89  CBFA          		set	7,d
  0C8B  280A          		jr	z,FTOI4END	;
  0C8D                	FTOI4LP:
  0C8D  CB3A          		srl	d
  0C8F  CB1B          		rr	e
  0C91  CB1C          		rr	h
  0C93  CB1D          		rr	l
  0C95  10F6          		djnz	FTOI4LP
  0C97                	FTOI4END:
                      	;	ld	(FAC1),hl
                      	;	ld	(FAC1+2),de
                      	;	ret
  0C97  C38837        		jp	SETI4
                      	
                      	
                      	;convert 4-byte integer to float (unsigned)
                      	;input: de-hl
                      	;output: FAC1
                      	;destroy: af,b,hl
  0C9A                	I4TOF:
  0C9A  D5            		push	de
  0C9B  7A            		ld	a,d
  0C9C  B3            		or	e
  0C9D  B4            		or	h
  0C9E  B5            		or	l
  0C9F  28D2          		jr	z,I2TOFZERO
                      	
  0CA1  7A            		ld	a,d
  0CA2  0620          		ld	b,20h
  0CA4                	I4TOFLP:
  0CA4  C680          		add	a,80h
  0CA6  3806          		jr	c,I4TOFEND
  0CA8  29            		add	hl,hl
  0CA9  CB13          		rl	e
  0CAB  17            		rla
  0CAC  10F6          		djnz	I4TOFLP
                      	
  0CAE                	I4TOFEND:
  0CAE  57            		ld	d,a
  0CAF  18BF          		jr	I2TOFEND2
                      	
                      	
                      	;convert float to 2-byte integer (-65535~65535)
                      	;(round toward minus infinity)
                      	;input: FAC1
                      	;output: de
                      	;destroy: af,bc,hl
  0CB1                	FTOI:
  0CB1  110000        		ld	de,0000h
  0CB4  3A6AFF        		ld	a,(FAC1+4)
  0CB7  B7            		or	a
  0CB8  C8            		ret	z
  0CB9  D691          		sub	91h
  0CBB  D2E503        		jp	nc,FCERR
  0CBE  ED44          		neg
  0CC0  47            		ld	b,a
                      	
  0CC1  2A66FF        		ld	hl,(FAC1)
  0CC4  7C            		ld	a,h
  0CC5  B5            		or	l		;fraction
                      	
  0CC6  2A68FF        		ld	hl,(FAC1+2)
  0CC9  4C            		ld	c,h		;sign
  0CCA  CBFC          		set	7,h
  0CCC  05            		dec	b
  0CCD  2809          		jr	z,FTOIZ
  0CCF                	FTOILP:
  0CCF  CB3C          		srl	h
  0CD1  CB1D          		rr	l
  0CD3  3001          		jr	nc,FTOINC
  0CD5  07            		rlca			;a>0
  0CD6                	FTOINC:
  0CD6  10F7          		djnz	FTOILP
                      	
  0CD8                	FTOIZ:
  0CD8  EB            		ex	de,hl
  0CD9  CB79          		bit	7,c		;sign
  0CDB  C8            		ret	z
                      	
  0CDC  ED44          		neg			;set c-flag if a>0
  0CDE  ED52          		sbc	hl,de
  0CE0  EB            		ex	de,hl
  0CE1  C9            		ret
                      	
                      	
                      	;get integer part from float
                      	;(round toward zero)
                      	;input: FAC1
                      	;output: FAC1
                      	;destroy: af,b,hl
  0CE2                	GETINT:
  0CE2  3A6AFF        		ld	a,(FAC1+4)
  0CE5  FE81          		cp	81h
  0CE7  DA070C        		jp	c,SETZERO
  0CEA  D6A0          		sub	0a0h
  0CEC  D0            		ret	nc
  0CED  2166FF        		ld	hl,FAC1
  0CF0                	GETILP1:
  0CF0  C608          		add	a,08h		;
  0CF2  3805          		jr	c,GETIC
  0CF4  3600          		ld	(hl),0
  0CF6  23            		inc	hl
  0CF7  18F7          		jr	GETILP1
  0CF9                	GETIC:
  0CF9  47            		ld	b,a
  0CFA  04            		inc	b
  0CFB  AF            		xor	a
  0CFC                	GETILP2:
  0CFC  1F            		rra
  0CFD  37            		scf
  0CFE  10FC          		djnz	GETILP2
  0D00  A6            		and	(hl)
  0D01  77            		ld	(hl),a
  0D02  C9            		ret
                      	
                      	
                      	;convert 1-byte signed integer to float
                      	;input: b=integer (signed)
                      	;output: FAC1
                      	;destroy: af,bc,hl
  0D03                	_S1TOF:	ds	ABTOF-5-_S1TOF
  0D11                		org	ABTOF-5
  0D11                	S1TOF:
  0D11  78            		ld	a,b
  0D12  07            		rlca
  0D13  9F            		sbc	a,a		;a=0(b<80h) or ffh(b>=80h)
  0D14  1800          		jr	ABTOF
                      	
                      	
                      	;convert 2-byte integer to float for USR()
                      	;input: ab
                      	;output: FAC1
                      	;destroy: af,bc,hl
  0D16                	_ABTOF:	ds	ABTOF-_ABTOF
  0D16                		org	ABTOF
                      	
  0D16  67            		ld	h,a
  0D17  68            		ld	l,b
                      	;	jr	S2TOF
                      	
                      	
                      	;convert 2-byte signed integer to float
                      	;input: hl=integer (signed)
                      	;output: FAC1
                      	;destroy: af,bc,hl
  0D18                	S2TOF:
  0D18  CB7C          		bit	7,h
  0D1A  CA5C0C        		jp	z,I2TOF
  0D1D  AF            		xor	a
  0D1E  95            		sub	l
  0D1F  6F            		ld	l,a
  0D20  9C            		sbc	a,h
  0D21  95            		sub	l
  0D22  67            		ld	h,a
  0D23  CD5C0C        		call	I2TOF
                      	
                      	;FAC1=-abs(FAC1)
                      	;destroy: f,hl
  0D26                	NEGABS:
  0D26  2169FF        		ld	hl,FAC1+3
  0D29  CBFE          		set	7,(hl)
  0D2B  C9            		ret
                      	
                      	
                      	;NEGABS with checking zero
                      	;destroy: af,hl
  0D2C                	NEGABS2:
  0D2C  3A6AFF        		ld	a,(FAC1+4)
  0D2F  B7            		or	a
  0D30  C8            		ret	z
  0D31  18F3          		jr	NEGABS
                      	
                      	
                      	;LPOS() function
  0D33                	F_LPOS:
  0D33  3A25FF        		ld	a,(ARGTYP)
  0D36  FE02          		cp	2
  0D38  D2DC03        		jp	nc,SNERR
  0D3B  2A57FA        		ld	hl,(PRTPOS)
  0D3E  C3A431        		jp	SETI1
                      	
                      	
                      	;POS() function
  0D41                	F_POS:
  0D41  3A25FF        		ld	a,(ARGTYP)
  0D44  FE02          		cp	2
  0D46  D2DC03        		jp	nc,SNERR
  0D49  2AA9FD        		ld	hl,(CSRX)
  0D4C  2D            		dec	l
  0D4D  C3A431        		jp	SETI1
                      	
                      	
                      	;CSRLINE function
  0D50                	F_CSRL:
  0D50  2AA8FD        		ld	hl,(CSRY)
  0D53  2D            		dec	l
  0D54  C35A0C        		jp	I1TOF
                      	
                      	
                      	;DEF command
  0D57                	C_DEF:
  0D57  ED5B5DFA      		ld	de,(LINENUM)
  0D5B  7A            		ld	a,d
  0D5C  A3            		and	e
  0D5D  3C            		inc	a
  0D5E  CAFA03        		jp	z,IDERR
  0D61  CD5A3F        		call	SKIPSP
  0D64  FEC4          		cp	FN
  0D66  C2DC03        		jp	nz,SNERR
  0D69  23            		inc	hl
  0D6A  CD8433        		call	CHKVAR
  0D6D  CB79          		bit	7,c
  0D6F  C2FD03        		jp	nz,TMERR
  0D72  CBF8          		set	7,b
  0D74  E5            		push	hl		;program address
  0D75  CDB633        		call	SRCHVAR
  0D78  DCE033        		call	c,MAKEVAR
  0D7B  E1            		pop	hl		;program address
  0D7C  CD920B        		call	CHKLPAR
  0D7F  CD8433        		call	CHKVAR
  0D82  CB79          		bit	7,c
  0D84  C2FD03        		jp	nz,TMERR
  0D87  CDA10B        		call	CHKRPAR
  0D8A  CD5A3F        		call	SKIPSP
  0D8D  FED2          		cp	EQ_
  0D8F  C2DC03        		jp	nz,SNERR
  0D92  CD593F        		call	SKIPSPINC
                      	
  0D95  EB            		ex	de,hl
  0D96  73            		ld	(hl),e
  0D97  23            		inc	hl
  0D98  72            		ld	(hl),d
  0D99  23            		inc	hl
  0D9A  70            		ld	(hl),b
  0D9B  23            		inc	hl
  0D9C  71            		ld	(hl),c
                      	;	inc	hl
                      	;	ld	(hl),0
  0D9D  EB            		ex	de,hl
                      	
  0D9E  2B            		dec	hl
  0D9F                	DEFLP:
  0D9F  CD603F        		call	CHKCLNINC
  0DA2  20FB          		jr	nz,DEFLP
                      	
  0DA4  224EFF        		ld	(PROGAD),hl
  0DA7  C9            		ret
                      	
                      	
                      	;INP() function
  0DA8                	F_INP:
  0DA8  CD780B        		call	CHKNUM
  0DAB  CD3507        		call	FTOI1
  0DAE  42            		ld	b,d		;d=0
  0DAF  4B            		ld	c,e
  0DB0  ED68          		in	l,(c)
  0DB2  62            		ld	h,d		;d=0
  0DB3  C35C0C        		jp	I2TOF
                      	
                      	
                      	;OUT command
  0DB6                	C_OUT:
  0DB6  CDE40D        		call	INT1ARG
  0DB9  7E            		ld	a,(hl)
  0DBA  FE2C          		cp	','
  0DBC  C2DC03        		jp	nz,SNERR
  0DBF  D5            		push	de		;
  0DC0  CDE30D        		call	INT1INC
  0DC3  C1            		pop	bc		;
  0DC4  ED59          		out	(c),e
  0DC6  C9            		ret
                      	
                      	
                      	;increment hl and get a 1-byte integer argument (0~255)
  0DC7                	_INT1INC:ds	INT1INC-_INT1INC
  0DE3                		org	INT1INC
                      	
  0DE3  23            		inc	hl
                      	
                      	;get a 1-byte integer argument (0~255)
                      	;input: hl=program address
                      	;output: FAC1,a,de=integer, hl=next address
                      	;destroy: FAC2, f, bc
  0DE4                	_INT1ARG:ds	INT1ARG-_INT1ARG
  0DE4                		org	INT1ARG
                      	
  0DE4  CD1B0E        		call	INT2ARG
  0DE7  7A            		ld	a,d
  0DE8  B7            		or	a
  0DE9  7B            		ld	a,e
  0DEA  C8            		ret	z
  0DEB  C3E503        		jp	FCERR
                      	
                      	
                      	;PEEK() function
  0DEE                	F_PEEK:
  0DEE  CD780B        		call	CHKNUM
  0DF1  CDB10C        		call	FTOI
  0DF4  1A            		ld	a,(de)
  0DF5  C3590C        		jp	I1TOFA
                      	
                      	
                      	;POKE command
  0DF8                	C_POKE:
  0DF8  CD6F0B        		call	NUMARGMO
  0DFB  7E            		ld	a,(hl)
  0DFC  FE2C          		cp	','
  0DFE  C2DC03        		jp	nz,SNERR
  0E01  E5            		push	hl
  0E02  CDB10C        		call	FTOI
  0E05  E1            		pop	hl
  0E06  D5            		push	de		;
  0E07  23            		inc	hl
  0E08  CD6F0B        		call	NUMARGMO
  0E0B  CD3507        		call	FTOI1
  0E0E  7B            		ld	a,e
  0E0F  D1            		pop	de		;
  0E10  12            		ld	(de),a
  0E11  C9            		ret
                      	
                      	
                      	;get a 2-byte integer argument (-65535~65535)
                      	;input: hl=program address
                      	;output: FAC1,de=integer, hl=next address
                      	;destroy: FAC2,af,bc
  0E12                	INTARG:
  0E12  CD6F0B        		call	NUMARGMO
  0E15  E5            		push	hl
  0E16  CDB10C        		call	FTOI
  0E19  E1            		pop	hl
  0E1A  C9            		ret
                      	
                      	
                      	;get a 2-byte integer argument (-32768~32767)
                      	;input: hl=program address
                      	;output: FAC1,de=integer, hl=next address
                      	;destroy: FAC2,af,bc
  0E1B                	INT2ARG:
  0E1B  CD6F0B        		call	NUMARGMO
  0E1E  E5            		push	hl
  0E1F  CD4107        		call	FTOI2
  0E22  E1            		pop	hl
  0E23  C9            		ret
                      	
                      	
                      	;get two 2-byte integer arguments (-65535~65535)
                      	;input: hl=program address
                      	;output: FAC1, bc=1st, de=2nd, hl=next address
                      	;destroy: af
  0E24                	INTARG2:
  0E24  CD120E        		call	INTARG
  0E27  7E            		ld	a,(hl)
  0E28  FE2C          		cp	','
  0E2A  C2DC03        		jp	nz,SNERR
  0E2D  23            		inc	hl
  0E2E  D5            		push	de		;
  0E2F  CD120E        		call	INTARG
  0E32  C1            		pop	bc		;
  0E33  C9            		ret
                      	
                      	
                      	;get two 2-byte integer arguments (-32768~32767)
                      	;input: hl=program address
                      	;output: FAC1, bc=1st, de=2nd, hl=next address
                      	;destroy: af
  0E34                	INT2ARG2:
  0E34  CD1B0E        		call	INT2ARG
  0E37  7E            		ld	a,(hl)
  0E38  FE2C          		cp	','
  0E3A  C2DC03        		jp	nz,SNERR
  0E3D  23            		inc	hl
  0E3E  D5            		push	de		;
  0E3F  CD1B0E        		call	INT2ARG
  0E42  C1            		pop	bc		;
  0E43  C9            		ret
                      	
                      	
                      	;get data from port 90h
                      	;output: a
                      	;destroy: f
  0E44                	_IN90H:	ds	IN90H-_IN90H
  0E78                		org	IN90H
                      	
  0E78  3E0C          		ld	a,0ch
  0E7A  D393          		out	(93h),a		;disable 8255 INT for writing
  0E7C                	IN90HLP:
  0E7C  DB92          		in	a,(92h)
  0E7E  2F            		cpl
  0E7F  E628          		and	28h
  0E81  20F9          		jr	nz,IN90HLP	;wait for ibf=1,intr=1
  0E83  3E0D          		ld	a,0dh
  0E85  D393          		out	(93h),a		;enable 8255 INT for writing
  0E87  DB90          		in	a,(90h)
  0E89  C9            		ret
                      	
                      	
                      	;output port 90h
                      	;input: a=data
                      	;destroy: none
  0E8A                	_OUT90H:ds	OUT90H-_OUT90H
  0E8F                		org	OUT90H
                      	
  0E8F  F5            		push	af
  0E90  3E08          		ld	a,08h
  0E92  D393          		out	(93h),a		;disable 8255 INT for reading
  0E94                	OUT90HLP:
  0E94  DB92          		in	a,(92h)
  0E96  07            		rlca
  0E97  30FB          		jr	nc,OUT90HLP	;wait for nobf=1
  0E99  3E09          		ld	a,09h
  0E9B  D393          		out	(93h),a		;enable 8255 INT for reading
  0E9D  F1            		pop	af
  0E9E  D390          		out	(90h),a
  0EA0  C9            		ret
                      	
                      	
  0EA1                	PLSONE:
  0EA1  0000000081    		db	00h, 00h, 00h, 00h, 81h
                      	
  0EA6                	MNSONE:
  0EA6  0000008081    		db	00h, 00h, 00h, 80h, 81h
                      	
  0EAB                	ZERO:
  0EAB  0000000000    		db	00h, 00h, 00h, 00h, 00h
                      	
                      	
                      	;interrupt for graphic key
  0EB0                	_INTGRP:ds	INTGRP-_INTGRP
  0EB0                		org	INTGRP
                      	
  0EB0  C5            		push	bc
  0EB1  0601          		ld	b,01h
  0EB3  1803          		jr	KEYCOMMON
                      	
                      	
                      	;interrupt for normal key
  0EB5                	_INTKEY:ds	INTKEY-_INTKEY
  0EB5                		org	INTKEY
                      	
  0EB5  C5            		push	bc
  0EB6  0600          		ld	b,00h
                      	
  0EB8                	KEYCOMMON:
  0EB8  F5            		push	af
  0EB9  CD780E        		call	IN90H
                      	
                      	;0ebch: used by SPACE HARRIER
  0EBC  D5            		push	de
  0EBD  E5            		push	hl
  0EBE  B7            		or	a
  0EBF  2863          		jr	z,RESSTOP
                      	;	dec	b
                      	;	jr	nz,NORMAL
  0EC1  101E          		djnz	NORMAL
                      	
  0EC3                	GRAPH:
  0EC3  FEFC          		cp	0fch		;SHIFT+PAGE, only for emulator
  0EC5  285D          		jr	z,RESSTOP
  0EC7  FEFE          		cp	0feh		;KANA, only for emulator
  0EC9  2859          		jr	z,RESSTOP
                      	
  0ECB  CD6F15        		call	CLICK
  0ECE  FEFA          		cp	0fah		;STOP
  0ED0  2848          		jr	z,STOPKEY
  0ED2  47            		ld	b,a		;;
  0ED3  218FFB        		ld	hl,KYBFIN
  0ED6  4E            		ld	c,(hl)		;
  0ED7  3E14          		ld	a,14h
  0ED9  CD360F        		call	PUTKBF
  0EDC  3846          		jr	c,RESSTOP
  0EDE  78            		ld	a,b		;;
  0EDF  1824          		jr	IKBF2
                      	
                      	
                      	;normal key
  0EE1                	NORMAL:
  0EE1  CD6F15        		call	CLICK
  0EE4  FE03          		cp	03h		;Ctrl-C
  0EE6  2837          		jr	z,STOPKEY2
  0EE8  FE1B          		cp	1bh
  0EEA  2833          		jr	z,STOPKEY2
  0EEC  FE7F          		cp	7fh
  0EEE  2006          		jr	nz,IKBF
  0EF0  3E08          		ld	a,08h		;DEL->ctrl-H, not necessary for emulator?
                      	
  0EF2  C3F60E        		jp	IKBF
                      	
                      	
                      	;0ef6h: used by PORTOPIA
  0EF5                	_IKBF:ds	IKBF-_IKBF
  0EF6                		org	IKBF
                      	
  0EF6  218FFB        		ld	hl,KYBFIN
  0EF9  4E            		ld	c,(hl)		;
  0EFA  CD360F        		call	PUTKBF
  0EFD  3825          		jr	c,RESSTOP
  0EFF  FE14          		cp	14h
  0F01  2021          		jr	nz,RESSTOP
  0F03  3EEF          		ld	a,0efh		;Ctrl-T->14h+0efh
                      	
  0F05                	IKBF2:
  0F05  CD360F        		call	PUTKBF
  0F08  301A          		jr	nc,RESSTOP
                      	
  0F0A  218FFB        		ld	hl,KYBFIN
  0F0D  71            		ld	(hl),c		;
  0F0E  1814          		jr	RESSTOP
                      	
                      	
                      	;interrupt for reply to key query
  0F10                	INTGAM:
  0F10  F5            		push	af
  0F11  CD780E        		call	IN90H
  0F14  32CAFE        		ld	(GMKYBUF),a
  0F17  F1            		pop	af
  0F18  FB            		ei
  0F19  C9            		ret
                      	
                      	
  0F1A                	STOPKEY:
  0F1A  CDD8FF        		call	HOOKSTP
  0F1D  3E03          		ld	a,03h
  0F1F                	STOPKEY2:
  0F1F  CD360F        		call	PUTKBF
  0F22  1801          		jr	SETSTOP
                      	
  0F24                	RESSTOP:
  0F24  AF            		xor	a
  0F25                	SETSTOP:
  0F25  3218FA        		ld	(STOPFLG),a
                      	;	jr	IKPOP
                      	
                      	
                      	;pop register for key interrupt
  0F28                	_IKPOP:	ds	IKPOP-_IKPOP
  0F2B                		org	IKPOP
                      	
  0F2B  E1            		pop	hl
  0F2C  D1            		pop	de
                      	
                      	;0f2dh: used by SPACE HARRIER
  0F2D  F1            		pop	af
  0F2E  C1            		pop	bc
  0F2F  FB            		ei
  0F30  C9            		ret
                      	
                      	
                      	;put into PLAY command buffer
                      	;input: a=data
                      	;destroy: f,hl
  0F31                	PUTPLBF:
  0F31  CD941C        		call	GETPLAD
  0F34  1803          		jr	PUTBF
                      	
                      	
                      	;put into key buffer
                      	;input: a
                      	;output: c-flag (1=buffer full)
                      	;destroy: f,hl
  0F36                	PUTKBF:
  0F36  218FFB        		ld	hl,KYBFIN
                      	;	call	PUTBF
                      	;	ret
                      	
                      	
                      	;put characer into buffer
                      	;input: a=character, hl=buffer control address
                      	;output: c-flag (1=buffer full)
                      	;destroy: f,hl
  0F39                	PUTBF:
  0F39  F5            		push	af
  0F3A  7E            		ld	a,(hl)		;in
  0F3B  3C            		inc	a
  0F3C  2C            		inc	l		;inc hl
  0F3D  2C            		inc	l		;inc hl
  0F3E  2C            		inc	l		;inc hl
  0F3F  A6            		and	(hl)		;size
  0F40  2D            		dec	l		;dec hl
  0F41  2D            		dec	l		;dec hl
  0F42  BE            		cp	(hl)		;out
  0F43  2811          		jr	z,BFFULL
                      	
  0F45  2D            		dec	l		;dec hl
  0F46  77            		ld	(hl),a		;in
  0F47  2C            		inc	l		;inc hl
  0F48  2C            		inc	l		;inc hl
  0F49  2C            		inc	l		;inc hl
  0F4A  2C            		inc	l		;inc hl
  0F4B  86            		add	a,(hl)		;address
  0F4C  2C            		inc	l		;inc hl
  0F4D  66            		ld	h,(hl)
  0F4E  6F            		ld	l,a
  0F4F  3001          		jr	nc,PTBNC
  0F51  24            		inc	h
  0F52                	PTBNC:
  0F52  F1            		pop	af
  0F53  77            		ld	(hl),a
  0F54  B7            		or	a		;reset c-flag
  0F55  C9            		ret
                      	
  0F56                	BFFULL:
  0F56  F1            		pop	af
  0F57  37            		scf
  0F58  C9            		ret
                      	
                      	
                      	;interrupt for RS-232C
  0F59                	INT232:
  0F59  F5            		push	af
  0F5A  E5            		push	hl
  0F5B  3E17          		ld	a,17h		;RTS=0
  0F5D  D381          		out	(81h),a
  0F5F                	INT232LP:
  0F5F  DB81          		in	a,(81h)
  0F61  E602          		and	02h
  0F63  28FA          		jr	z,INT232LP	;wait for RxRDY=1
  0F65  DB80          		in	a,(80h)
                      	
  0F67  2195FB        		ld	hl,RSBFIN
  0F6A  CD390F        		call	PUTBF
                      	
  0F6D  3E37          		ld	a,37h		;RTS=1
  0F6F  D381          		out	(81h),a
  0F71  E1            		pop	hl
  0F72  1832          		jr	POPAF
                      	
                      	
                      	;interrupt for timer
  0F74                	_INTTIM:ds	INTTIM-_INTTIM
  0F74                		org	INTTIM
                      	
  0F74  C5            		push	bc
  0F75  F5            		push	af
  0F76  D5            		push	de
  0F77  E5            		push	hl
                      	
  0F78  CDEC1B        		call	PLAYINT
                      	
  0F7B  2128FA        		ld	hl,TMCNT
  0F7E  34            		inc	(hl)
  0F7F  34            		inc	(hl)
  0F80  20A9          		jr	nz,IKPOP
  0F82  2C            		inc	l		;inc hl
  0F83  34            		inc	(hl)
  0F84  2006          		jr	nz,TIMCSR
  0F86  2C            		inc	l
  0F87  34            		inc	(hl)
  0F88  2002          		jr	nz,TIMCSR
  0F8A  2C            		inc	l
  0F8B  34            		inc	(hl)
                      	
  0F8C                	TIMCSR:
                      	;cursor blink
  0F8C  3A92FD        		ld	a,(SCREEN1)
  0F8F  212EFA        		ld	hl,CSRBLNK
  0F92  2F            		cpl
  0F93  0F            		rrca
  0F94  A6            		and	(hl)
  0F95  C48F11        		call	nz,CSRREV	;(SCREEN1)=0or1, (CSRBLNK)=1
  0F98  1891          		jr	IKPOP
                      	
                      	
                      	;interrupt for CMT load
  0F9A                	INTCMT:
  0F9A  F5            		push	af
  0F9B  CD780E        		call	IN90H
  0F9E  321DFA        		ld	(CMTBUF),a
  0FA1  3E02          		ld	a,02h
  0FA3                	SETCMTST:
  0FA3  3219FA        		ld	(CMTSTAT),a
  0FA6                	POPAF:
  0FA6  F1            		pop	af
  0FA7                	EIRET:
  0FA7  FB            		ei
  0FA8  C9            		ret
                      	
                      	
                      	;interrupt for CMT write stop
  0FA9                	INTWSTP:
                      	;interrupt for CMT read stop
  0FA9                	INTRSTP:
  0FA9  F5            		push	af
  0FAA  3E03          		ld	a,03h
  0FAC  3218FA        		ld	(STOPFLG),a
  0FAF  18F5          		jr	POPAF
                      	
                      	
                      	;interrupt for CMT error
  0FB1                	INTERR:
  0FB1  F5            		push	af
  0FB2  3E10          		ld	a,10h
  0FB4  18ED          		jr	SETCMTST
                      	
                      	
                      	;get input character
                      	;output: a, z-flag(1=no input)
                      	;destroy: f
  0FB6                	_GETCH:	ds	GETCH-_GETCH
  0FBC                		org	GETCH
                      	
  0FBC  E5            		push	hl
  0FBD  CDF10F        		call	GETCH2
  0FC0  E1            		pop	hl
  0FC1  C9            		ret
                      	
                      	
                      	;wait for input and get a character
                      	;output: a
                      	;destroy: f
  0FC2                	_GETC:	ds	GETC-_GETC
  0FC4                		org	GETC
                      	
  0FC4  E5            		push	hl
  0FC5                	GETCLP1:
  0FC5  CD7911        		call	CSRON
  0FC8  2600          		ld	h,0
  0FCA                	GETCLP2:
  0FCA  24            		inc	h
  0FCB  CCB312        		call	z,PRTFKEY2
  0FCE  CDBC0F        		call	GETCH
  0FD1  28F7          		jr	z,GETCLP2
                      	
  0FD3  CD8111        		call	CSROFF
  0FD6  FEFE          		cp	0feh		;page switching key
  0FD8  2807          		jr	z,GETCPAGE
  0FDA  67            		ld	h,a
  0FDB  CD7B13        		call	CHGTXT
  0FDE  7C            		ld	a,h
  0FDF  E1            		pop	hl
  0FE0  C9            		ret
                      	
  0FE1                	GETCPAGE:
  0FE1  3A8FFD        		ld	a,(SCREEN2)
  0FE4  3C            		inc	a
  0FE5  218CFD        		ld	hl,PAGES
  0FE8  BE            		cp	(hl)
  0FE9  3801          		jr	c,GETCC
  0FEB  AF            		xor	a
  0FEC                	GETCC:
  0FEC  CD8813        		call	CHGSCR
  0FEF  18D4          		jr	GETCLP1
                      	
                      	
  0FF1                	GETCH2:
  0FF1  3A32FA        		ld	a,(FKEYCNT)
  0FF4  B7            		or	a
  0FF5  202E          		jr	nz,GETFKEY
  0FF7  2130FA        		ld	hl,GRPWRK
  0FFA  B6            		or	(hl)		;a=0
  0FFB  2808          		jr	z,GETCHZ	;(hl)=0?
  0FFD  3600          		ld	(hl),0
  0FFF  FEEF          		cp	0efh		;Ctrl-T=14h+0efh
  1001  C8            		ret	z
  1002  C630          		add	a,30h
  1004  C9            		ret			;z-flag=0
                      	
  1005                	GETCHZ:
                      	;(GRPWRK)=0
  1005  CD3A10        		call	GETKBF
  1008  C8            		ret	z
  1009  FE14          		cp	14h
  100B  C0            		ret	nz
                      	
                      	;14h+**
  100C  CD3A10        		call	GETKBF
  100F  FEF0          		cp	0f0h
  1011  3006          		jr	nc,CNVFKEY
  1013  3230FA        		ld	(GRPWRK),a
  1016  3E14          		ld	a,14h
  1018  C9            		ret			;z-flag=0
                      	
                      	;a=f0-f9
  1019                	CNVFKEY:
  1019  21BDFB        		ld	hl,FKEYTBL+80h
                      	;	and	0fh
  101C  87            		add	a,a
  101D  87            		add	a,a
  101E  87            		add	a,a
  101F  85            		add	a,l		;no carry
  1020  6F            		ld	l,a
                      	;	jr	nc,CNVFKNC
                      	;	inc	h
                      	;CNVFKNC:
  1021  3E07          		ld	a,7
  1023  1804          		jr	GETFKEY2
                      	
                      	;function key
  1025                	GETFKEY:
  1025  2A8DFB        		ld	hl,(FKEYAD)
  1028  3D            		dec	a
  1029                	GETFKEY2:
  1029  3232FA        		ld	(FKEYCNT),a
  102C  7E            		ld	a,(hl)
  102D  23            		inc	hl
  102E  228DFB        		ld	(FKEYAD),hl
  1031  B7            		or	a
  1032  C9            		ret
                      	
                      	
                      	;get a character from key buffer
                      	;output: a,z-flag(1=no input)
                      	;destroy: f,hl
  1033                	_GETKBF:ds	GETKBF-_GETKBF
  103A                		org	GETKBF
                      	
  103A  218FFB        		ld	hl,KYBFIN
  103D                	CALLGETBF:
  103D  F3            		di
  103E  CD0A26        		call	GETBF
  1041  FB            		ei
  1042  C9            		ret
                      	
                      	
                      	;get a character from RS-232C buffer
                      	;output: a,z-flag(1=no input)
                      	;destroy: f,hl
  1043                	GETRSBF:
  1043  2195FB        		ld	hl,RSBFIN
  1046  18F5          		jr	CALLGETBF
                      	
                      	
                      	;get from PLAY command buffer
                      	;input: b=channel+1 (1,2,3)
                      	;output: a,z
                      	;destroy: f,hl
  1048                	GETPLBF:
  1048  219BFB        		ld	hl,BUFAIN-6
  104B  78            		ld	a,b
  104C  87            		add	a,a		;*2
  104D  80            		add	a,b		;*3
  104E  87            		add	a,a		;*6
  104F  85            		add	a,l		;no carry
  1050  6F            		ld	l,a
  1051  C30A26        		jp	GETBF
                      	
                      	
                      	;clear key buffer pointer
                      	;destroy: a,(f,bc,de,hl)
  1054                	_CLRKBF:ds	CLRKBF-_CLRKBF
  1058                		org	CLRKBF
                      	
  1058  3A8FFB        		ld	a,(KYBFIN)
  105B  3290FB        		ld	(KYBFOUT),a
  105E  C9            		ret
                      	
                      	
                      	;send key-query to sub CPU and get reply
                      	;output: a (space-0-left-right-down-up-stop-shift)
                      	;destroy: f
  105F                	_STICK:	ds	STICK-_STICK
  1061                		org	STICK
                      	
  1061  3EFF          		ld	a,0ffh
  1063  32CAFE        		ld	(GMKYBUF),a
  1066  3E06          		ld	a,06h
  1068  F3            		di
  1069  CD8F0E        		call	OUT90H
  106C  FB            		ei
  106D                	STICKLP:
  106D  3ACAFE        		ld	a,(GMKYBUF)
  1070  FEFF          		cp	0ffh		;bit6=0?
  1072  28F9          		jr	z,STICKLP
  1074  C9            		ret
                      	
                      	
                      	;put a character in CRT
                      	;input: a=character code
                      	;destroy: none
  1075                	_PUTC:	ds	PUTC-_PUTC
  1075                		org	PUTC
                      	
  1075  F5            		push	af
  1076  E5            		push	hl
                      	
  1077  2A31FA        		ld	hl,(GRPFLG)
  107A  2C            		inc	l
  107B  2D            		dec	l
  107C  200D          		jr	nz,PUTGRP
  107E  FE20          		cp	20h
  1080  3010          		jr	nc,PUTCNC
  1082  D5            		push	de
  1083  C5            		push	bc
  1084  CDFA10        		call	PUTCTL
  1087  C1            		pop	bc
  1088  D1            		pop	de
  1089  180A          		jr	PUTCEND
                      	
  108B                	PUTGRP:
  108B  D630          		sub	30h
  108D  2131FA        		ld	hl,GRPFLG
  1090  3600          		ld	(hl),0
  1092                	PUTCNC:
  1092  CDAA10        		call	PUTCHR
                      	
  1095                	PUTCEND:
  1095  E1            		pop	hl
  1096  F1            		pop	af
  1097  C9            		ret
                      	
                      	
                      	;for graphic mode (screen3,4)
                      	;a=character
  1098                	PUTCHRG:
  1098  2AA8FD        		ld	hl,(CSRY)
  109B  CDD514        		call	PUTG
  109E                	CTLRHT:
  109E  2AAAFD        		ld	hl,(CSRAD)
  10A1  23            		inc	hl
  10A2  1813          		jr	CHKNL
                      	
                      	;put a character in CRT (no control code)
                      	;input: a=character code
                      	;destroy: af,hl
  10A4                	_PUTCHR:ds	PUTCHR-_PUTCHR
  10AA                		org	PUTCHR
                      	
  10AA  2A92FD        		ld	hl,(SCREEN1)
  10AD  CB4D          		bit	1,l
  10AF  20E7          		jr	nz,PUTCHRG	;screen mode 3,4
                      	
  10B1  2AAAFD        		ld	hl,(CSRAD)
  10B4  CDCA14        		call	PUT12
                      	
                      	;next line?
  10B7                	CHKNL:
  10B7  22AAFD        		ld	(CSRAD),hl
  10BA  21A9FD        		ld	hl,CSRX
  10BD  34            		inc	(hl)
  10BE  3AACFD        		ld	a,(WIDTH)
  10C1  BE            		cp	(hl)
  10C2  D0            		ret	nc
  10C3                	CHKNL2:
  10C3  3601          		ld	(hl),1
                      	
  10C5  3AA5FD        		ld	a,(LASTLIN)
  10C8  2AA2FD        		ld	hl,(CONSOL1)	;l=(CONSOL1)
  10CB  95            		sub	l
  10CC  2802          		jr	z,CTLLF
  10CE  3EFF          		ld	a,0ffh
                      	
  10D0                	CTLLF:
  10D0  3C            		inc	a		;0 or 1
  10D1  2AA8FD        		ld	hl,(CSRY)	;l=y+1,h=x+1
                      	
  10D4  E5            		push	hl
  10D5  D5            		push	de
  10D6  CD6715        		call	SETLINE
  10D9  D1            		pop	de
  10DA  E1            		pop	hl
                      	
  10DB  2C            		inc	l
  10DC  3AA5FD        		ld	a,(LASTLIN)
  10DF  BD            		cp	l
  10E0  D26D11        		jp	nc,SETCSR
                      	
                      	;scroll
  10E3  D5            		push	de
  10E4  54            		ld	d,h		;x+1
  10E5  2AA1FD        		ld	hl,(CONSOL1-1)	;h=(CONSOL1)
  10E8  1801          		jr	SKPPATCH1
                      	
                      	
                      	;10eah: to be patched by iP6plus
  10EA                	_PATCH1:ds	PATCH1-_PATCH1
  10EA                		org	PATCH1
  10EA  00            		db	00h
                      	
  10EB                	SKPPATCH1:
  10EB  6F            		ld	l,a
  10EC  9C            		sbc	a,h		;c-flag=1, (LASTLIN)-(CONSOL1)-1
  10ED  D46012        		call	nc,SCRLUP
                      	
  10F0  62            		ld	h,d		;x+1
  10F1  CDB811        		call	Y2AD
  10F4  CDDA11        		call	DELLIN
  10F7  D1            		pop	de
  10F8  1873          		jr	SETCSR
                      	
                      	
  10FA                	PUTCTL:
  10FA  FE14          		cp	14h
  10FC  2847          		jr	z,CTLGRP
  10FE  FE07          		cp	07h
  1100  CACD1B        		jp	z,BELL
  1103  D60A          		sub	0ah
  1105  28C9          		jr	z,CTLLF
  1107  3D            		dec	a
  1108  283F          		jr	z,CTLHOM	;0bh
  110A  3D            		dec	a
  110B  CAFB1D        		jp	z,CLS		;0ch
  110E  2AA8FD        		ld	hl,(CSRY)	;l=y+1,h=x+1
  1111  3D            		dec	a
  1112  2838          		jr	z,CTLCR		;0dh
  1114  D60F          		sub	1ch-0dh
  1116  2886          		jr	z,CTLRHT	;1ch
  1118  3D            		dec	a
  1119  2808          		jr	z,CTLLFT	;1dh
  111B  3D            		dec	a
  111C  2814          		jr	z,CTLUP		;1eh
  111E  3D            		dec	a
  111F  C0            		ret	nz
                      	;	jr	z,CTLDWN	;1fh
                      	
  1120                	CTLDWN:
  1120  2C            		inc	l
  1121  1819          		jr	CTLUPNZ
                      	
  1123                	CTLLFT:
  1123  25            		dec	h
  1124  2047          		jr	nz,SETCSR
  1126  3AA2FD        		ld	a,(CONSOL1)
  1129  BD            		cp	l
  112A  D0            		ret	nc
  112B  2D            		dec	l
  112C  3AACFD        		ld	a,(WIDTH)
  112F  67            		ld	h,a
  1130  183B          		jr	SETCSR
                      	
  1132                	CTLUP:
  1132  3AA2FD        		ld	a,(CONSOL1)
  1135  BD            		cp	l
  1136  C8            		ret	z
  1137  2D            		dec	l
  1138  2002          		jr	nz,CTLUPNZ
  113A  2E01          		ld	l,1
  113C                	CTLUPNZ:
  113C  3AA5FD        		ld	a,(LASTLIN)
  113F  BD            		cp	l
  1140  302B          		jr	nc,SETCSR
  1142  6F            		ld	l,a
  1143  1828          		jr	SETCSR
                      	
  1145                	CTLGRP:
  1145  3231FA        		ld	(GRPFLG),a	;a=14h
  1148  C9            		ret
                      	
  1149                	CTLHOM:
  1149  2AA2FD        		ld	hl,(CONSOL1)	;l=(CONSOL1)
                      	
  114C                	CTLCR:
  114C  2601          		ld	h,1
  114E  181D          		jr	SETCSR
                      	
                      	
                      	;set cursor position
                      	;input: h=x+1, l=y+1
                      	;output: (fda8h)=y+1,(fda9h)=x+1,(fdaa-fdab)=VRAM address
                      	;destroy: none
  1150                	_SETCSR:ds	SETCSR-_SETCSR
  116D                		org	SETCSR
  116D  E5            		push	hl
  116E  22A8FD        		ld	(CSRY),hl
  1171  CDCD11        		call	XY2AD
  1174  22AAFD        		ld	(CSRAD),hl
  1177  E1            		pop	hl
  1178  C9            		ret
                      	
                      	
                      	;cursor blink on
                      	;destroy: none
  1179                	_CSRON:
  1179                		ds	CSRON-_CSRON
  1179                		org	CSRON
                      	
  1179  F5            		push	af
  117A  3E01          		ld	a,1
  117C  322EFA        		ld	(CSRBLNK),a
  117F  F1            		pop	af
  1180  C9            		ret
                      	
                      	
                      	;cursor blink off
                      	;destroy: hl
  1181                	_CSROFF:
  1181                		ds	CSROFF-_CSROFF
  1181                		org	CSROFF
                      	
  1181  F5            		push	af
  1182  AF            		xor	a
  1183  322EFA        		ld	(CSRBLNK),a
  1186  3A2FFA        		ld	a,(CSRSTAT)
  1189  B7            		or	a
  118A  C48F11        		call	nz,CSRREV
  118D  F1            		pop	af
  118E  C9            		ret
                      	
                      	
                      	;reverse cursor
                      	;destroy: af,hl
  118F                	CSRREV:
  118F  212FFA        		ld	hl,CSRSTAT
  1192  7E            		ld	a,(hl)
  1193  2F            		cpl
  1194  77            		ld	(hl),a
  1195  2AAAFD        		ld	hl,(CSRAD)
  1198  25            		dec	h
  1199  25            		dec	h
  119A  7E            		ld	a,(hl)
  119B  CB77          		bit	6,a		;semi-graphic mode?
  119D  2004          		jr	nz,CSRSEMI
  119F  EE01          		xor	01h
  11A1  77            		ld	(hl),a
  11A2  C9            		ret
                      	
  11A3                	CSRSEMI:
  11A3  24            		inc	h
  11A4  24            		inc	h
  11A5  7E            		ld	a,(hl)
  11A6  2F            		cpl
  11A7  77            		ld	(hl),a
  11A8  C9            		ret
                      	
                      	
                      	;get left edge address
                      	;input: l=y+1
                      	;output: de=VRAM address
                      	;destroy: none
  11A9                	_Y2AD:ds	Y2AD-_Y2AD
  11B8                		org	Y2AD
                      	
  11B8  F5            		push	af
  11B9  7D            		ld	a,l
  11BA  3D            		dec	a
  11BB  87            		add	a,a		;*2
  11BC  87            		add	a,a		;*4
  11BD  87            		add	a,a		;*8
  11BE  87            		add	a,a		;*16
  11BF  87            		add	a,a		;*32
  11C0  5F            		ld	e,a
  11C1  3A91FD        		ld	a,(VRAM)
  11C4  CE02          		adc	a,2
  11C6  57            		ld	d,a
  11C7  F1            		pop	af
  11C8  C9            		ret
                      	
                      	
                      	;get VRAM character address (screen mode 1,2)
                      	;input: h=x+1, l=y+1
                      	;output: hl=VRAM address
                      	;destroy: none
  11C9                	_XY2AD:	ds	XY2AD-_XY2AD
  11CD                		org	XY2AD
                      	
  11CD  F5            		push	af
  11CE  D5            		push	de
  11CF  CDB811        		call	Y2AD
  11D2  25            		dec	h
  11D3  6C            		ld	l,h
  11D4  2600          		ld	h,0
  11D6  19            		add	hl,de
  11D7  D1            		pop	de
  11D8  F1            		pop	af
  11D9  C9            		ret
                      	
                      	
                      	;delete line
                      	;input: de=left edge address (for screen mode 1,2)
                      	;destroy: none
  11DA                	_DELLIN:ds	DELLIN-_DELLIN
  11DA                		org	DELLIN
                      	
  11DA  F5            		push	af
  11DB  E5            		push	hl
  11DC  D5            		push	de
  11DD  C5            		push	bc
                      	
  11DE  3A92FD        		ld	a,(SCREEN1)
  11E1  FE02          		cp	2
  11E3  3020          		jr	nc,DELG
                      	
  11E5  D5            		push	de		;
  11E6  15            		dec	d
  11E7  15            		dec	d
  11E8  62            		ld	h,d
  11E9  6B            		ld	l,e
  11EA  13            		inc	de
  11EB  CD2215        		call	GETSPA
  11EE  77            		ld	(hl),a
  11EF  011F00        		ld	bc,COLUMNS-1
  11F2  EDB0          		ldir
                      	
  11F4  E1            		pop	hl		;
  11F5  0E1F          		ld	c,COLUMNS-1
                      	
  11F7                	DELLEND:
  11F7  54            		ld	d,h
  11F8  5D            		ld	e,l
  11F9  13            		inc	de
  11FA  CD0D16        		call	GETSP
  11FD  77            		ld	(hl),a
  11FE  EDB0          		ldir
                      	
  1200  C1            		pop	bc
  1201  D1            		pop	de
  1202  E1            		pop	hl
  1203  F1            		pop	af
  1204  C9            		ret
                      	
                      	
                      	;for graphic mode (screen3,4)
  1205                	DELG:
  1205  EB            		ex	de,hl
  1206  CD7814        		call	AD2GAD
  1209  017F01        		ld	bc,0180h-1
  120C  18E9          		jr	DELLEND
                      	
                      	
                      	;for graphic mode (screen mode 3,4)
  120E                	SCRLG:
                      	;bc=a*32*12=a*(256+128)
  120E  48            		ld	c,b		;b=0
  120F  47            		ld	b,a
  1210  1F            		rra			;c-flag=0
  1211  CB19          		rr	c
  1213  80            		add	a,b
  1214  47            		ld	b,a
                      	
  1215  2601          		ld	h,1
  1217  CD7D14        		call	XY2GAD
  121A  EB            		ex	de,hl
  121B  218001        		ld	hl,COLUMNS*12
  121E  19            		add	hl,de
  121F  F1            		pop	af		;up/down
  1220  2003          		jr	nz,SCRLATT
  1222  EB            		ex	de,hl
  1223  1B            		dec	de
  1224  2B            		dec	hl
                      	
  1225                	SCRLATT:
  1225  CDAC3F        		call	LDIDR
  1228  C1            		pop	bc
  1229  D1            		pop	de
  122A  E1            		pop	hl
                      	
                      	;scroll INPUT prompt position
                      	;z=0: up,h=first,l=last
                      	;z=1: down,h=last,l=first
  122B  E5            		push	hl
  122C  D5            		push	de
                      	
  122D  1EFF          		ld	e,0-1
  122F  2005          		jr	nz,SCRLIUP
  1231  1E01          		ld	e,1
  1233  7C            		ld	a,h
  1234  65            		ld	h,l
  1235  6F            		ld	l,a
  1236                	SCRLIUP:
  1236  3AABFD        		ld	a,(CSRAD+1)
  1239  57            		ld	d,a
  123A  3AA7FE        		ld	a,(INPTPAG)
  123D  AA            		xor	d
  123E  E6F0          		and	0f0h
  1240  200E          		jr	nz,SCRLIEND
                      	
  1242  3AA4FE        		ld	a,(INPTXY)
  1245  BC            		cp	h
  1246  3808          		jr	c,SCRLIEND
  1248  2C            		inc	l
  1249  BD            		cp	l
  124A  3004          		jr	nc,SCRLIEND
  124C  83            		add	a,e
  124D  32A4FE        		ld	(INPTXY),a
  1250                	SCRLIEND:
  1250  D1            		pop	de
  1251  E1            		pop	hl
  1252  C9            		ret
                      	
                      	
                      	;put a character in CRT (no control code, no move in cursor)
                      	;input: a=character code, h=x+1, l=y+1
                      	;destroy: none
  1253                	_PUTCH:	ds	PUTCH-_PUTCH
  1257                		org	PUTCH
                      	
  1257  E5            		push	hl
  1258  CDCD11        		call	XY2AD
  125B  CDAF14        		call	PUTCH2
  125E  E1            		pop	hl
  125F  C9            		ret
                      	
                      	
                      	;scroll up
                      	;input: h=first line+1, l=last line+1
                      	;destroy: af
  1260                	_SCRLUP:ds	SCRLUP-_SCRLUP
  1260                		org	SCRLUP
                      	
  1260  7D            		ld	a,l
  1261  94            		sub	h		;a=(LASTLIN)-(CONSOL1) < 16
                      	;	ret	z
                      	;	ret	c
  1262  E5            		push	hl
                      	
                      	;z=0:scroll up, z=1:scroll down
  1263                	SCRLUD:
  1263  D5            		push	de
  1264  C5            		push	bc
  1265  F5            		push	af		;up/down
                      	
                      	;line connection status
  1266  6C            		ld	l,h
  1267  E5            		push	hl
  1268  CD6715        		call	SETLINE		;get work area address, no change in z-flag
  126B  54            		ld	d,h
  126C  5D            		ld	e,l
  126D  0600          		ld	b,0
  126F  4F            		ld	c,a
                      	
  1270  2008          		jr	nz,SCRLNZ1
  1272  12            		ld	(de),a		;>0
  1273  1D            		dec	e
  1274  2D            		dec	l		;dec hl
  1275  2D            		dec	l
  1276  EDB8          		lddr
                      	
  1278  1803          		jr	SCRLSKP1
  127A                	SCRLNZ1:
  127A  2C            		inc	l		;inc hl
  127B  EDB0          		ldir
  127D                	SCRLSKP1:
                      	
  127D  12            		ld	(de),a		;>0
  127E  2A92FD        		ld	hl,(SCREEN1)
  1281  2D            		dec	l
  1282  2D            		dec	l
  1283  E1            		pop	hl
  1284  F20E12        		jp	p,SCRLG		;screen mode 3,4
                      	
  1287  CDA13F        		call	MUL32
  128A  CDB811        		call	Y2AD
  128D  212000        		ld	hl,COLUMNS
  1290  19            		add	hl,de
  1291  F1            		pop	af		;up/down
  1292  F5            		push	af		;up/down
  1293  2003          		jr	nz,SCRLNZ2
  1295  EB            		ex	de,hl
  1296  1B            		dec	de
  1297  2B            		dec	hl
                      	
  1298                	SCRLNZ2:
  1298  E5            		push	hl
  1299  D5            		push	de
  129A  C5            		push	bc
  129B  CDAC3F        		call	LDIDR
  129E  C1            		pop	bc
  129F  D1            		pop	de
  12A0  E1            		pop	hl
                      	
                      	;attribute
  12A1  25            		dec	h
  12A2  25            		dec	h
  12A3  15            		dec	d
  12A4  15            		dec	d
  12A5  F1            		pop	af		;up/down
  12A6  C32512        		jp	SCRLATT
                      	
                      	
                      	;scroll down
                      	;input: h=last line+1, l=first line+1
                      	;destroy: af
  12A9                	_SCRLDW:ds	SCRLDW-_SCRLDW
  12A9                		org	SCRLDW
                      	
  12A9  7C            		ld	a,h
  12AA  95            		sub	l
                      	;	ret	z
                      	;	ret	c
  12AB  E5            		push	hl
  12AC  BF            		cp	a		;set z-flag
  12AD  18B4          		jr	SCRLUD
                      	
                      	
                      	;print function key
                      	;input: none
                      	;output: none
                      	;destroy: af
  12AF                	PRTFKEY:
  12AF  AF            		xor	a
  12B0  32A7FD        		ld	(FKEYSFT),a
                      	
  12B3                	PRTFKEY2:
  12B3  3A92FD        		ld	a,(SCREEN1)
  12B6  FE02          		cp	2
  12B8  D0            		ret	nc		;screen mode 3 or 4
                      	
  12B9  E5            		push	hl
  12BA  D5            		push	de
  12BB  C5            		push	bc
                      	
  12BC  21A7FD        		ld	hl,FKEYSFT
  12BF  3AA6FD        		ld	a,(CONSOL3)
  12C2  B7            		or	a
  12C3  285F          		jr	z,DELFK
                      	
  12C5  113DFB        		ld	de,FKEYTBL
  12C8  CD6110        		call	STICK
  12CB  E601          		and	01h
  12CD  2802          		jr	z,FKEYZ
  12CF  1E65          		ld	e,FKEYTBL+8*5-(FKEYTBL+8*5)/256*256	;de=FKEYTBL+8*5
  12D1                	FKEYZ:
  12D1  87            		add	a,a
  12D2  3C            		inc	a
  12D3  BE            		cp	(hl)
  12D4  284A          		jr	z,PFKEND
  12D6  77            		ld	(hl),a
                      	
  12D7  D5            		push	de
  12D8  2A20FA        		ld	hl,(HEIGHT)
  12DB  CDB811        		call	Y2AD
  12DE  EB            		ex	de,hl
  12DF  D1            		pop	de
                      	
  12E0  CD6A13        		call	CHRREV
  12E3  3A8FFD        		ld	a,(SCREEN2)
  12E6  C631          		add	a,'1'
  12E8  CDCA14        		call	PUT12
                      	
  12EB  CD6A13        		call	CHRREV
  12EE  3E20          		ld	a,' '
  12F0  CDCA14        		call	PUT12
                      	
  12F3  0E05          		ld	c,5
  12F5                	FKEYLP1:
  12F5  CD6A13        		call	CHRREV
  12F8  0605          		ld	b,05h
  12FA                	FKEYLP2:
  12FA  1A            		ld	a,(de)
  12FB  B7            		or	a
  12FC  280C          		jr	z,FKEYNEXT
  12FE  FE20          		cp	20h
  1300  3002          		jr	nc,FKEYNC
  1302  3E20          		ld	a,' '
  1304                	FKEYNC:
  1304  CDCA14        		call	PUT12
  1307  1C            		inc	e		;inc de
  1308  10F0          		djnz	FKEYLP2
                      	
  130A                	FKEYNEXT:
  130A  04            		inc	b
  130B                	FKEYLP3:
  130B  78            		ld	a,b
  130C  3D            		dec	a
  130D  CC6A13        		call	z,CHRREV
  1310  3E20          		ld	a,' '
  1312  CDCA14        		call	PUT12
  1315  1C            		inc	e		;inc de
  1316  10F3          		djnz	FKEYLP3
                      	
  1318  1C            		inc	e		;inc de
  1319  1C            		inc	e		;inc de
  131A  0D            		dec	c
  131B  20D8          		jr	nz,FKEYLP1
                      	
  131D                	PFKEND2:
  131D  CD5D1D        		call	CNSLEND2
  1320                	PFKEND:
  1320  C1            		pop	bc
  1321  D1            		pop	de
  1322  E1            		pop	hl
  1323  C9            		ret
                      	
  1324                	DELFK:
  1324  BE            		cp	(hl)		;hl=FKEYSFT
  1325  28F9          		jr	z,PFKEND
  1327  77            		ld	(hl),a
  1328  2A20FA        		ld	hl,(HEIGHT)
  132B  CDB811        		call	Y2AD
  132E  CDDA11        		call	DELLIN
  1331  18EA          		jr	PFKEND2
                      	
                      	
                      	;convert VRAM address to text screen (x,y)
                      	;input: hl=address
                      	;output: h=x+1, l=y+1(0=error)
                      	;destroy: af
  1333                	AD2XY:
  1333  CB4C          		bit	1,h
  1335  280F          		jr	z,AD2XYZ
                      	
  1337  7C            		ld	a,h
  1338  E601          		and	01h
  133A  67            		ld	h,a
  133B  7D            		ld	a,l
  133C  E61F          		and	1fh
  133E  29            		add	hl,hl
  133F  29            		add	hl,hl
  1340  29            		add	hl,hl
  1341  6C            		ld	l,h
  1342  67            		ld	h,a
  1343  24            		inc	h
  1344  2C            		inc	l
  1345  C9            		ret
                      	
  1346                	AD2XYZ:
  1346  2E00          		ld	l,0
  1348  C9            		ret
                      	
                      	
                      	;get corrected color parameter
                      	;output: a
                      	;destroy: f
  1349                	CORRC:
  1349  3A92FD        		ld	a,(SCREEN1)
  134C  FE03          		cp	3		;
  134E  0F            		rrca			;;
  134F  3A93FD        		ld	a,(COLOR1)
  1352  3008          		jr	nc,CORRC13	;;
  1354  280F          		jr	z,CORRC4	;
                      	
                      	;screen mode 2: 0~8
  1356                	CORRC2:
  1356  FE08          		cp	8
  1358  D8            		ret	c
  1359  3E08          		ld	a,8
  135B  C9            		ret
                      	
                      	;screen mode 1,3: 1~4
  135C                	CORRC13:
  135C  B7            		or	a
  135D  2808          		jr	z,CORRCZ
  135F  FE04          		cp	4
  1361  D8            		ret	c
  1362  3E04          		ld	a,4
  1364  C9            		ret
                      	
                      	;screen mode 4: 0~1
  1365                	CORRC4:
  1365  B7            		or	a
  1366  C8            		ret	z
  1367                	CORRCZ:
  1367  3E01          		ld	a,1
  1369  C9            		ret
                      	
                      	
                      	;reverse character attribute
                      	;destroy: af
  136A                	CHRREV:
  136A  CD4913        		call	CORRC
  136D  EE07          		xor	07h
  136F  FE05          		cp	5
  1371  3802          		jr	c,REVEND
  1373  E603          		and	03h
  1375                	REVEND:
  1375  3293FD        		ld	(COLOR1),a
  1378  C3C015        		jp	SETATT
                      	
                      	
                      	;change to text screen
                      	;input: none
                      	;output: none
                      	;destroy: af
  137B                	CHGTXT:
  137B  3A90FD        		ld	a,(SCREEN3)
  137E  CD0C14        		call	CHGACT
  1381  3A92FD        		ld	a,(SCREEN1)
  1384  FE02          		cp	2
  1386  D8            		ret	c
  1387  AF            		xor	a
  1388                	CHGSCR:
  1388  CD0C14        		call	CHGACT
  138B  C3ED13        		jp	CHGDSP
                      	
                      	
                      	;change screen mode
                      	;input: a=mode-1
                      	;destroy: af,de
  138E                	_CHGMOD:ds	CHGMOD-_CHGMOD
  1390                		org	CHGMOD
                      	
  1390  FE04          		cp	4
  1392  D2E503        		jp	nc,FCERR
  1395  E5            		push	hl
  1396  2192FD        		ld	hl,SCREEN1
  1399  5E            		ld	e,(hl)		;
  139A  BB            		cp	e
  139B  2847          		jr	z,CMODEND
  139D  77            		ld	(hl),a
                      	
  139E  C5            		push	bc
  139F  F5            		push	af		;;
                      	
  13A0  FE02          		cp	2
  13A2  3E20          		ld	a,COLUMNS	;screen mode 1,2,4:width=32
  13A4  2001          		jr	nz,SETWID
  13A6  1F            		rra			;screen mode 3:width=16
  13A7                	SETWID:
  13A7  32ACFD        		ld	(WIDTH),a
                      	
  13AA  2196FD        		ld	hl,M1COLOR
  13AD  010300        		ld	bc,3
  13B0  50            		ld	d,b		;b=0
  13B1  19            		add	hl,de		;
  13B2  19            		add	hl,de
  13B3  19            		add	hl,de
  13B4  EB            		ex	de,hl
  13B5  2193FD        		ld	hl,COLOR1
  13B8  EDB0          		ldir
                      	
  13BA  F1            		pop	af		;;
  13BB  2196FD        		ld	hl,M1COLOR
  13BE  50            		ld	d,b		;b=0
  13BF  5F            		ld	e,a
  13C0  19            		add	hl,de
  13C1  19            		add	hl,de
  13C2  19            		add	hl,de
  13C3  1193FD        		ld	de,COLOR1
  13C6  0E03          		ld	c,3		;b=0
  13C8  EDB0          		ldir
                      	
  13CA  CD2215        		call	GETSPA
  13CD  2A90FD        		ld	hl,(VRAM-1)	;h=(VRAM)
  13D0  68            		ld	l,b		;b=0
  13D1  77            		ld	(hl),a
  13D2  04            		inc	b
  13D3  54            		ld	d,h
  13D4  58            		ld	e,b		;de=hl+1
  13D5  0D            		dec	c		;bc=1ffh
  13D6  EDB0          		ldir
                      	
  13D8  CD5D1D        		call	CNSLEND2
  13DB  2E01          		ld	l,1
  13DD  3A20FA        		ld	a,(HEIGHT)
  13E0  CD3916        		call	CLSMAIN
                      	
  13E3  C1            		pop	bc
  13E4                	CMODEND:
  13E4  E1            		pop	hl
  13E5  C9            		ret
                      	
                      	
                      	;change display page
                      	;page1=8000h or c000h	out (0b0h),4 or 0
                      	;page2=e000h		out (0b0h),2
                      	;page3=c000h		out (0b0h),0
                      	;page4=a000h		out (0b0h),6
                      	;input: a=page-1
                      	;destroy: af
  13E6                	_CHGDSP:ds	CHGDSP-_CHGDSP
  13ED                		org	CHGDSP
                      	
  13ED  3290FD        		ld	(SCREEN3),a
  13F0  B7            		or	a
  13F1  2006          		jr	nz,DSPOK
  13F3  3A2AFF        		ld	a,(BASICAD+1)	;84h or c4h
  13F6  07            		rlca
  13F7  07            		rlca
  13F8  87            		add	a,a		;32KB:page1=8000h
                      					;16KB:page1=c000h
  13F9                	DSPOK:
                      	;0,1,2,3->4,2,0,6
  13F9  3C            		inc	a
  13FA  2F            		cpl
  13FB  07            		rlca
                      	;	and	06h
                      	
  13FC  C5            		push	bc
  13FD  0606          		ld	b,00000110b
  13FF  CD541B        		call	OUTB0H
  1402  C1            		pop	bc
                      	
  1403  C3B312        		jp	PRTFKEY2
                      	
                      	
                      	;change active page
                      	;input: a=page-1
                      	;destroy: none
  1406                	_CHGACT:ds	CHGACT-_CHGACT
  140C                		org	CHGACT
                      	
  140C  F5            		push	af
  140D  E5            		push	hl
                      	
  140E  218FFD        		ld	hl,SCREEN2
  1411  BE            		cp	(hl)
  1412  281C          		jr	z,ACTEND
                      	
  1414  D5            		push	de
  1415  C5            		push	bc
                      	
  1416  57            		ld	d,a		;
  1417  7E            		ld	a,(hl)
  1418  72            		ld	(hl),d		;
  1419  CD3314        		call	GETPGAD
  141C  7A            		ld	a,d		;
  141D  EB            		ex	de,hl
  141E  2191FD        		ld	hl,VRAM		;top of active page data
  1421  EDB0          		ldir
                      	
  1423  CD3314        		call	GETPGAD
  1426  1191FD        		ld	de,VRAM
  1429  EDB0          		ldir
                      	
  142B  CDAF12        		call	PRTFKEY
                      	
  142E  C1            		pop	bc
  142F  D1            		pop	de
                      	
  1430                	ACTEND:
  1430  E1            		pop	hl
  1431  F1            		pop	af
  1432  C9            		ret
                      	
                      	
                      	;get page data address
                      	;input: a=page-1
                      	;output: hl=address, bc=size
                      	;destroy: af
  1433                	GETPGAD:
  1433  21C8FD        		ld	hl,PAGE1
  1436  013700        		ld	bc,PAGE2-PAGE1
  1439  B7            		or	a
  143A                	PGADLP:
  143A  C8            		ret	z
  143B  09            		add	hl,bc
  143C  3D            		dec	a
  143D  18FB          		jr	PGADLP
                      	
                      	
                      	;get VRAM dot pattern address (screen mode 3,4)
                      	;hl=(VRAM+0200h)+(X/8)+Y*32
                      	;input: bc=graphic X, de=graphic Y
                      	;output: hl=VRAM address, d=bit
                      	;destroy: af,bc,e
  143F                	GXY2GAD:
  143F  CDD62B        		call	CHKGXY
  1442  EB            		ex	de,hl
  1443  29            		add	hl,hl		;*2
  1444  29            		add	hl,hl		;*4
  1445  29            		add	hl,hl		;*8
  1446  29            		add	hl,hl		;*16
  1447  29            		add	hl,hl		;*32
  1448  3A91FD        		ld	a,(VRAM)
  144B  C602          		add	a,2
  144D  47            		ld	b,a
  144E  79            		ld	a,c
  144F  CB39          		srl	c
  1451  CB39          		srl	c
  1453  CB39          		srl	c
  1455  09            		add	hl,bc
                      	
  1456  E607          		and	07h
  1458  3C            		inc	a
  1459  47            		ld	b,a
                      	
  145A  3A92FD        		ld	a,(SCREEN1)
  145D  0F            		rrca
  145E  3E01          		ld	a,01h
  1460  3806          		jr	c,GXY2GADLP	;screen mode 4
                      	
  1462  05            		dec	b
  1463  CB80          		res	0,b
  1465  04            		inc	b
  1466  3E81          		ld	a,81h
                      	
  1468                	GXY2GADLP:
  1468  0F            		rrca
  1469  10FD          		djnz	GXY2GADLP
  146B  57            		ld	d,a
  146C  C9            		ret
                      	
                      	
                      	;convert character VRAM address to graphic VRAM address
                      	;(screen mode 1,2 -> screen mode 3,4)
                      	;input: hl=character VRAM address
                      	;output: hl=graphic VRAM address
                      	;destroy: none
  146D                	_AD2GAD:ds	AD2GAD-_AD2GAD
  1478                		org	AD2GAD
                      	
  1478  F5            		push	af
  1479  CD3313        		call	AD2XY
  147C  F1            		pop	af
                      	;	jr	XY2GAD
                      	
                      	
                      	;get VRAM address (screen mode 3,4)
                      	;input: h=x+1, l=y+1
                      	;output: hl=graphic VRAM address =(VRAM+200h)+y*0180h+x
                      	;destroy: none
  147D                	XY2GAD:
  147D  F5            		push	af
  147E  25            		dec	h
  147F  2D            		dec	l
  1480  3A92FD        		ld	a,(SCREEN1)
  1483  FE02          		cp	2
  1485  2002          		jr	nz,XY2GADC
  1487  CB24          		sla	h		;screen mode 3
  1489                	XY2GADC:
  1489  CB24          		sla	h
  148B  3A91FD        		ld	a,(VRAM)
  148E  C602          		add	a,2
  1490  85            		add	a,l
  1491  CB3D          		srl	l
  1493  CB1C          		rr	h
  1495  85            		add	a,l
  1496  6C            		ld	l,h
  1497  67            		ld	h,a
  1498  F1            		pop	af
  1499  C9            		ret
                      	
                      	
                      	;get CGROM address (DE=6000h+A*10h)
                      	;input: a=character code
                      	;output: de=address
                      	;destroy: none
  149A                	_CGROM:	ds	CGROM-_CGROM
  14A0                		org	CGROM
                      	
  14A0  F5            		push	af
  14A1  07            		rlca
  14A2  07            		rlca
  14A3  07            		rlca
  14A4  07            		rlca
  14A5  57            		ld	d,a
  14A6  E6F0          		and	0f0h
  14A8  5F            		ld	e,a
  14A9  AA            		xor	d
  14AA  C660          		add	a,60h
  14AC  57            		ld	d,a
  14AD  F1            		pop	af
  14AE  C9            		ret
                      	
                      	;	push	af		;push flag
                      	;	ex	de,hl
                      	;	ld	h,06h
                      	;	ld	l,a
                      	;	add	hl,hl
                      	;	add	hl,hl
                      	;	add	hl,hl
                      	;	add	hl,hl
                      	;	ex	de,hl
                      	;	pop	af		;pop flag
                      	;	ret
                      	
                      	
                      	;put a character in CRT (no control code, no move in cursor)
                      	;input: a=character code, hl=VRAM address
                      	;destroy: none
  14AF                	_PUTCH2:ds	PUTCH2-_PUTCH2
  14AF                		org	PUTCH2
                      	
  14AF  E5            		push	hl
  14B0  F5            		push	af
  14B1  3A92FD        		ld	a,(SCREEN1)
  14B4  FE02          		cp	2
  14B6  380A          		jr	c,PUTCH12
                      	
                      	;screen mode 3,4
  14B8  CD3313        		call	AD2XY
  14BB  F1            		pop	af
  14BC  F5            		push	af
  14BD  CDD514        		call	PUTG
  14C0  1805          		jr	PUTCH2END
                      	
  14C2                	PUTCH12:
  14C2  F1            		pop	af
  14C3  F5            		push	af
  14C4  CDCA14        		call	PUT12
                      	
  14C7                	PUTCH2END:
  14C7  F1            		pop	af
  14C8  E1            		pop	hl
  14C9  C9            		ret
                      	
                      	
                      	;put character in screen mode 1,2
                      	;input: a=character code, hl=VRAM address
                      	;output: hl=hl+1
                      	;destroy: af
  14CA                	PUT12:
  14CA  77            		ld	(hl),a
  14CB  CDF515        		call	CNVATT1
  14CE  25            		dec	h
  14CF  25            		dec	h
  14D0  77            		ld	(hl),a
  14D1  24            		inc	h
  14D2  24            		inc	h
  14D3  23            		inc	hl
  14D4  C9            		ret
                      	
                      	
                      	;put character in graphic mode (screen mode 3,4)
                      	;input: a=character code, h=x+1, l=y+1
                      	;destroy af,hl
  14D5                	PUTG:
  14D5  D5            		push	de
  14D6  C5            		push	bc
                      	
  14D7  CDA014        		call	CGROM
  14DA  CD7D14        		call	XY2GAD
                      	
  14DD  3E04          		ld	a,04h
  14DF  D393          		out	(93h),a		;CGROM ON
  14E1  3A93FD        		ld	a,(COLOR1)
  14E4  CDC015        		call	SETATT
                      	
  14E7  060C          		ld	b,0ch
  14E9                	PUTGLP:
  14E9  D5            		push	de
  14EA  3A92FD        		ld	a,(SCREEN1)
  14ED  0F            		rrca			;
  14EE  1A            		ld	a,(de)
  14EF  3005          		jr	nc,CALL3	;
  14F1  CD1915        		call	PUT4
  14F4  1804          		jr	CALL34END
  14F6                	CALL3:
  14F6  CD0915        		call	PUT3
  14F9  2B            		dec	hl
                      	
  14FA                	CALL34END:
  14FA  112000        		ld	de,COLUMNS
  14FD  19            		add	hl,de
  14FE  D1            		pop	de
  14FF  1C            		inc	e		;inc de
  1500  10E7          		djnz	PUTGLP
                      	
  1502  3E05          		ld	a,05h
  1504  D393          		out	(93h),a		;CGROM OFF
                      	
  1506  C1            		pop	bc
  1507  D1            		pop	de
  1508  C9            		ret
                      	
  1509                	PUT3:
  1509  5F            		ld	e,a
  150A  CD0E15        		call	PUTHALF
  150D  23            		inc	hl
  150E                	PUTHALF:
  150E  1604          		ld	d,04h
  1510                	PUT3LP:
  1510  CB03          		rlc	e
  1512  17            		rla
  1513  0F            		rrca
  1514  07            		rlca
  1515  17            		rla
  1516  15            		dec	d
  1517  20F7          		jr	nz,PUT3LP
                      	
  1519                	PUT4:
  1519  4F            		ld	c,a
  151A  3AACFE        		ld	a,(ATTDAT)
  151D  AE            		xor	(hl)
  151E  A1            		and	c
  151F  AE            		xor	(hl)
  1520  77            		ld	(hl),a
  1521  C9            		ret
                      	
                      	
                      	;get space attribute data for scroll
                      	;output: a
                      	;destroy: f
  1522                	GETSPA:
  1522  3A92FD        		ld	a,(SCREEN1)
  1525  3D            		dec	a
  1526  FAF515        		jp	m,CNVATT1
  1529  280B          		jr	z,GETSPA2
                      	
  152B                	GETSPAG:
  152B  3D            		dec	a
  152C  3A95FD        		ld	a,(COLOR3)
  152F  2802          		jr	z,GETSPA3
  1531  C650          		add	a,50h
  1533                	GETSPA3:
  1533  C68C          		add	a,8ch		;screen mode 3=8ch, screen mode 4=dch
  1535  C9            		ret
                      	
  1536                	GETSPA2:
  1536  3A94FD        		ld	a,(COLOR2)
  1539  B7            		or	a
  153A  2003          		jr	nz,GETSPA2NZ
  153C  3A93FD        		ld	a,(COLOR1)
                      	
  153F                	GETSPA2NZ:
  153F  FE05          		cp	5
  1541  3A95FD        		ld	a,(COLOR3)
  1544  3802          		jr	c,GETSPAC
  1546  EE02          		xor	02h
  1548                	GETSPAC:
  1548  C660          		add	a,60h
  154A  C9            		ret
                      	
                      	
                      	;check connection to previous character
                      	;input: hl=VRAM address
                      	;output: z-flag(1:connect)
                      	;destroy: af
  154B                	CHKLINE:
  154B  7D            		ld	a,l
  154C  E61F          		and	1fh
  154E  2010          		jr	nz,CHKLINENZ
  1550  E5            		push	hl
  1551  29            		add	hl,hl
  1552  29            		add	hl,hl
  1553  29            		add	hl,hl
  1554  7C            		ld	a,h
  1555  E60F          		and	0fh
  1557  21B6FD        		ld	hl,LINEST-1
  155A  85            		add	a,l		;no carry
  155B  6F            		ld	l,a
  155C  7E            		ld	a,(hl)
  155D  E1            		pop	hl
  155E  B7            		or	a
  155F  C9            		ret
                      	
  1560                	CHKLINENZ:
  1560  AF            		xor	a
  1561  C9            		ret
                      	
                      	
                      	;cut connection before cursor line
                      	;output: hl=line status address
                      	;destroy: af,de
  1562                	CUTLINE:
  1562  3AA8FD        		ld	a,(CSRY)	;a>0
                      	
                      	;input: a=y+1
                      	;output: hl=line status address
                      	;destroy: f,de
  1565                	CUTLINE2:
  1565  6F            		ld	l,a
  1566  2D            		dec	l
                      	;	jp	SETLINE
                      	
                      	;set line connection status (connection to next line)
                      	;input: l=y+1, a=data (0=connect or not)
                      	;output: hl=line status address
                      	;destroy: f,de
  1567                	SETLINE:
  1567  2600          		ld	h,0
  1569  11B6FD        		ld	de,LINEST-1
  156C  19            		add	hl,de
  156D  77            		ld	(hl),a
  156E  C9            		ret
                      	
                      	
                      	;click sound
                      	;destroy: de
  156F                	CLICK:
  156F  F5            		push	af
  1570  3A2DFA        		ld	a,(CONSOL4)
  1573  B7            		or	a
  1574  2823          		jr	z,SKPCLK
                      	
  1576  C5            		push	bc
                      	
  1577  3E08          		ld	a,08h		;register8=ch.A volume
  1579  1E0F          		ld	e,0fh
  157B  CDBE1B        		call	SOUND2
  157E  D5            		push	de		;
                      	
  157F  3E01          		ld	a,01h		;register1=ch.A coarse tune
  1581  1E00          		ld	e,00h
  1583  43            		ld	b,e
  1584  4F            		ld	c,a
  1585  CDBE1B        		call	SOUND2		;;
                      	
  1588  CDE825        		call	WAITLP		;bc=0001h
  158B  3E01          		ld	a,01h		;register1=ch.A coarse tune
  158D  5A            		ld	e,d		;;
  158E  CDC51B        		call	SOUND
                      	
  1591  3E08          		ld	a,08h		;register8=ch.A volume
  1593  D1            		pop	de		;
  1594  5A            		ld	e,d
  1595  CDC51B        		call	SOUND
                      	
  1598  C1            		pop	bc
                      	
  1599                	SKPCLK:
  1599  F1            		pop	af
  159A  C9            		ret
                      	
                      	
                      	;set attribute data
                      	;input: a=color code
                      	;output: a,(ATTDAT)=attribute
                      	;destroy: f
  159B                	_SETATT:ds	SETATT-_SETATT
  15C0                		org	SETATT
                      	
  15C0  CDC715        		call	CNVATT
  15C3  32ACFE        		ld	(ATTDAT),a
  15C6  C9            		ret
                      	
                      	
                      	;convert to attribute data (screen mode 1)
                      	; or color code (screen moode 2)
                      	; or bit pattern (screen mode 3,4)
                      	;input: a=color code
                      	;output: a=attribute
                      	;destroy: f
  15C7                	CNVATT:
  15C7  F5            		push	af		;color
  15C8  3A92FD        		ld	a,(SCREEN1)
  15CB  3D            		dec	a
  15CC  2820          		jr	z,ATT2
  15CE  FAF915        		jp	m,ATT1
  15D1  3D            		dec	a
  15D2  2806          		jr	z,ATT3
                      	
  15D4                	ATT4:
  15D4  F1            		pop	af
  15D5  B7            		or	a
  15D6  C8            		ret	z
  15D7  3EFF          		ld	a,0ffh
  15D9  C9            		ret
                      	
  15DA                	ATT3:
  15DA  F1            		pop	af
  15DB  B7            		or	a
  15DC  C8            		ret	z
                      	
  15DD  C5            		push	bc
  15DE  0604          		ld	b,04h
  15E0  B8            		cp	b
  15E1  3801          		jr	c,ATT3C
  15E3  78            		ld	a,b
  15E4                	ATT3C:
  15E4  3D            		dec	a
  15E5  4F            		ld	c,a
  15E6  05            		dec	b		;=3
  15E7                	ATT3LP:
  15E7  0F            		rrca
  15E8  0F            		rrca
  15E9  B1            		or	c
  15EA  10FB          		djnz	ATT3LP
  15EC  C1            		pop	bc
  15ED  C9            		ret
                      	
  15EE                	ATT2:
  15EE  F1            		pop	af
  15EF  FE09          		cp	9
  15F1  D8            		ret	c
  15F2  3E08          		ld	a,8
  15F4  C9            		ret
                      	
                      	
                      	;get attribue data for screen mode 1
                      	;output: a=attirbute value
                      	;destroy: f
  15F5                	CNVATT1:
  15F5  3A93FD        		ld	a,(COLOR1)
  15F8  F5            		push	af
  15F9                	ATT1:
  15F9  F1            		pop	af
  15FA  B7            		or	a
  15FB  2807          		jr	z,ATT1OK
  15FD  3D            		dec	a
  15FE  FE04          		cp	4
  1600  3802          		jr	c,ATT1OK
  1602  3E03          		ld	a,3
  1604                	ATT1OK:
  1604  C620          		add	a,20h
  1606  E5            		push	hl
  1607  2195FD        		ld	hl,COLOR3
  160A  AE            		xor	(hl)
  160B  E1            		pop	hl
  160C  C9            		ret
                      	
                      	
                      	;get space character data for scroll
                      	;output: a
                      	;destroy: f
  160D                	GETSP:
  160D  3A92FD        		ld	a,(SCREEN1)
  1610  3D            		dec	a
  1611  3E20          		ld	a,' '
  1613  F8            		ret	m		;screen mode 1
  1614  3A94FD        		ld	a,(COLOR2)
  1617  20AE          		jr	nz,CNVATT	;screen mode 3,4
                      	
                      	;screen mode 2
  1619                	GETSP2:
  1619  B7            		or	a
  161A  2806          		jr	z,GETSP2Z	;color,0
  161C  3D            		dec	a
  161D  0F            		rrca
  161E  0F            		rrca
  161F  F63F          		or	3fh
  1621  C9            		ret
                      	
  1622                	GETSP2Z:
  1622  3A93FD        		ld	a,(COLOR1)
  1625  B7            		or	a
  1626  C8            		ret	z
  1627  3D            		dec	a
  1628  FE04          		cp	4
  162A  3802          		jr	c,GETSP2ZC
  162C  D604          		sub	4
  162E                	GETSP2ZC:
  162E  0F            		rrca
  162F  0F            		rrca
  1630  C9            		ret
                      	
                      	
                      	;clear screen using console parameter
                      	;destroy: af,bc,de,hl
  1631                	CLSMAIN2:
  1631  2AA2FD        		ld	hl,(CONSOL1)	;l=(CONSOL1)
  1634  3AA5FD        		ld	a,(LASTLIN)
  1637  95            		sub	l
  1638  3C            		inc	a
                      	
                      	;clear from first line to last line
                      	;input: l=first line+1, a=last line-first line+1
                      	;destroy: af,bc,de,hl
  1639                	CLSMAIN:
  1639  4D            		ld	c,l		;
  163A  2600          		ld	h,0
  163C  11B6FD        		ld	de,LINEST-1
  163F  19            		add	hl,de
  1640  47            		ld	b,a
  1641  04            		inc	b
  1642                	CLSLP1:
  1642  70            		ld	(hl),b		;b>0
  1643  23            		inc	hl
  1644  10FC          		djnz	CLSLP1
                      	
  1646  69            		ld	l,c		;
  1647  47            		ld	b,a
  1648  CDB811        		call	Y2AD
  164B                	CLSLP2:
  164B  CDDA11        		call	DELLIN
  164E  212000        		ld	hl,COLUMNS
  1651  19            		add	hl,de
  1652  EB            		ex	de,hl
  1653  10F6          		djnz	CLSLP2
                      	
  1655  CD4911        		call	CTLHOM		;h<-1
  1658  25            		dec	h
  1659  6C            		ld	l,h		;hl=0000h
  165A  22AEFD        		ld	(GRPX1),hl
  165D  22B0FD        		ld	(GRPY1),hl
                      	
  1660  C3AF12        		jp	PRTFKEY
                      	
                      	
                      	;cold start (initialize hardware)
  1663                	COLD:
                      	
                      	;8255 (port 93h)
  1663  019306        		ld	bc,0693h
  1666  21CE00        		ld	hl,IOTBL93
  1669  EDB3          		otir
                      	
                      	;8251 (port 81h)
  166B  018105        		ld	bc,0581h
                      	;	ld	hl,IOTBL81
  166E  EDB3          		otir
                      	
                      	;for mkII
                      	;port f0h-f8h and port c1h
  1670  01EF09        		ld	bc,09efh
                      	;	ld	hl,IOTBLF0
  1673                	F0LP:
  1673  0C            		inc	c
  1674  EDA3          		outi
  1676  20FB          		jr	nz,F0LP
  1678  3E06          		ld	a,06h
  167A  D3C1          		out	(0c1h),a	;32x16 text mode
                      	
                      	;interrupt
                      	;	ld	hl,INTTBL
  167C  1102FA        		ld	de,0fa02h
  167F  0E16          		ld	c,11*2		;b=0
  1681  EDB0          		ldir
  1683  7A            		ld	a,d
  1684  ED47          		ld	i,a
  1686  ED5E          		im	2
                      	
                      	;clear work area
  1688  AF            		xor	a
  1689  62            		ld	h,d
  168A  6B            		ld	l,e
  168B  77            		ld	(hl),a
  168C  13            		inc	de
  168D  01E705        		ld	bc,0ffffh-0fa18h
  1690  EDB0          		ldir
                      	
                      	;stack pointer
  1692  21CDF9        		ld	hl,0f9ffh-50
  1695  F9            		ld	sp,hl		;temporary
                      	
                      	;relay,VRAM,timer
                      	;	xor	a
  1696  D3B0          		out	(0b0h),a	;bit3=CMT relay, bit21=VRAM address=c000, bit0=timer on
                      	
  1698  3D            		dec	a
  1699  321FFA        		ld	(BAUD),a	;a=ffh:1200 baud
                      	
  169C  3E01          		ld	a,1
  169E  322DFA        		ld	(CONSOL4),a
                      	
                      	;hook
  16A1  218AFF        		ld	hl,HOOK
  16A4  061E          		ld	b,1eh
  16A6  1E03          		ld	e,03h		;d=0
  16A8                	COLDLP1:
  16A8  36C9          		ld	(hl),0c9h
  16AA  19            		add	hl,de
  16AB  10FB          		djnz	COLDLP1
                      	
                      	
                      	;buffer
  16AD  21B9FB        		ld	hl,KEYBUF
  16B0  1E40          		ld	e,40h		;d=0
  16B2  2293FB        		ld	(KYBFAD),hl
  16B5  19            		add	hl,de		;hl=RSBUF
  16B6  2299FB        		ld	(RSBFAD),hl
  16B9  19            		add	hl,de		;hl=BUFA
  16BA  22A5FB        		ld	(BUFAAD),hl
  16BD  19            		add	hl,de		;hl=BUFB
  16BE  22ABFB        		ld	(BUFAAD+6),hl
  16C1  19            		add	hl,de		;hl=BUFC
  16C2  22B1FB        		ld	(BUFAAD+12),hl
                      	
  16C5  2192FB        		ld	hl,KYBFSZ
  16C8  1E06          		ld	e,06h		;d=0
  16CA  43            		ld	b,e		;e=6
  16CB                	COLDLP2:
  16CB  363F          		ld	(hl),3fh	;KYBFSZ,RSBFSZ,,BUFASZ,BUFBSZ,BUFCSZ
  16CD  19            		add	hl,de
  16CE  10FB          		djnz	COLDLP2
                      	
  16D0  3E20          		ld	a,' '
  16D2  321EFA        		ld	(ASTSTAT),a
                      	
                      	;command jump table
  16D5  217B01        		ld	hl,CMDLST
  16D8  1161FA        		ld	de,CMDTBL
  16DB  0E56          		ld	c,2*(CMDLAST-80h+1)	;b=0
  16DD  EDB0          		ldir
                      	
                      	;function jump table
                      	;	ld	hl,FNCLST
  16DF  11E5FA        		ld	de,FNCTBL
  16E2  0E3C          		ld	c,2*(FNCLAST-FNC1ST+1)	;b=0
  16E4  EDB0          		ldir
                      	
                      	;screen
  16E6  3E10          		ld	a,ROWS
  16E8  3220FA        		ld	(HEIGHT),a
                      	
  16EB  1191FD        		ld	de,VRAM		;top of active page data
  16EE  3E05          		ld	a,5
  16F0                	COLDLP3:
  16F0  212D01        		ld	hl,PAGEDATA
  16F3  0E37          		ld	c,PAGE1-VRAM	;b=0
  16F5  EDB0          		ldir
  16F7  3D            		dec	a
  16F8  20F6          		jr	nz,COLDLP3
                      	
                      	;	ld	de,PAGE4+(PAGE4-PAGE3)
  16FA  EB            		ex	de,hl
  16FB  11C9FF        		ld	de,0-(PAGE4-PAGE3)
  16FE  3EA0          		ld	a,0a0h
  1700                	COLDLP5:
  1700  19            		add	hl,de
  1701  77            		ld	(hl),a		;(PAGE4)=a0h, (PAGE3)=c0h, (PAGE2)=e0h
  1702  C620          		add	a,20h
  1704  20FA          		jr	nz,COLDLP5
                      	
                      	;RND()
                      	;	call	SETZERO
  1706  CDB53B        		call	RNDMNS
                      	
                      	;16KB or 32KB?
  1709  210080        		ld	hl,8000h
  170C  7E            		ld	a,(hl)
  170D  2F            		cpl
  170E  77            		ld	(hl),a
  170F  BE            		cp	(hl)
  1710  3E04          		ld	a,4
  1712  2804          		jr	z,RAM32K
                      	;16KB
  1714  26C0          		ld	h,0c0h
  1716  3E02          		ld	a,2
  1718                	RAM32K:
  1718  328CFD        		ld	(PAGES),a
  171B  47            		ld	b,a		;
                      	
  171C  7C            		ld	a,h
  171D  3291FD        		ld	(VRAM),a
  1720  CBD4          		set	2,h		;h=h+40h
  1722  2229FF        		ld	(BASICAD),hl	;l=0
  1725  2C            		inc	l		;inc hl
  1726  225FFA        		ld	(STARTAD),hl
                      	
  1729                	COLDLP4:
  1729  78            		ld	a,b		;
  172A  3D            		dec	a
  172B  CD0C14        		call	CHGACT
  172E  CDFB1D        		call	CLS
  1731  10F6          		djnz	COLDLP4
                      	
  1733  AF            		xor	a
  1734  CDED13        		call	CHGDSP
                      	
                      	;PLAY
  1737  CDB31B        		call	PLSTOP		;ei
                      	
  173A  C33B00        		jp	HOT
                      	
                      	
                      	;analyze an argument
                      	;input: hl=program address
                      	;output: hl=next address, FAC1=numerical value or pointer to string descriptor
                      	;	(ARGTYP)=0(numeric), 1(string), other(cannot analyze)
                      	;destroy: FAC2,af,bc,de,hl
  173D                	ARG:
  173D  E5            		push	hl
  173E  CD070C        		call	SETZERO		;for first +-
  1741  E1            		pop	hl
  1742  AF            		xor	a
  1743  5F            		ld	e,a
  1744  D5            		push	de		;e=dummy operator
  1745  3D            		dec	a
  1746  3225FF        		ld	(ARGTYP),a	;ff=unknown
  1749  3265FF        		ld	(OPRTR),a
  174C                	ARGLP:
  174C  E5            		push	hl
  174D  CDEA34        		call	CHKFRE
  1750  E1            		pop	hl
  1751                	ARGLP2:
  1751  7E            		ld	a,(hl)
  1752  47            		ld	b,a		;
  1753  23            		inc	hl
  1754  224EFF        		ld	(PROGAD),hl
                      	;command, function, operator
  1757  B7            		or	a
  1758  FA3D18        		jp	m,ARGCMD
                      	;space
  175B  FE20          		cp	' '
  175D  28F2          		jr	z,ARGLP2
                      	
                      	;previous argument without operator?
  175F  3A65FF        		ld	a,(OPRTR)
  1762  B7            		or	a
  1763  281F          		jr	z,ARGTAIL
                      	;[A-Z]
  1765  78            		ld	a,b		;
  1766  D641          		sub	'A'
  1768  FE1A          		cp	'Z'-'A'+1
  176A  384C          		jr	c,ARGVAR
                      	;[0-9&.]
  176C  D6EF          		sub	'0'-'A'
  176E  FE0A          		cp	'9'-'0'+1
  1770  78            		ld	a,b		;
  1771  382F          		jr	c,ARGNUM
  1773  FE26          		cp	'&'
  1775  282B          		jr	z,ARGNUM
  1777  FE2E          		cp	'.'
  1779  2827          		jr	z,ARGNUM
                      	;others
  177B  FE22          		cp	22h		;double quotation mark
  177D  CA0C18        		jp	z,ARGSTR
  1780  FE28          		cp	'('
  1782  2808          		jr	z,PARL
  1784                	ARGTAIL:
  1784  2B            		dec	hl
  1785  224EFF        		ld	(PROGAD),hl
  1788  AF            		xor	a
  1789  C3B418        		jp	OPR
                      	
  178C                	PARL:
  178C  CD613F        		call	CHKCLN
  178F  CA1204        		jp	z,MOERR
  1792  CD3D17        		call	ARG
  1795  3A25FF        		ld	a,(ARGTYP)
  1798  FE02          		cp	2
  179A  D2DC03        		jp	nc,SNERR
  179D  CDA10B        		call	CHKRPAR
  17A0  18AA          		jr	ARGLP
                      	
  17A2                	ARGNUM:
  17A2  CDB017        		call	ARGNCHK
  17A5  2B            		dec	hl
  17A6  3EFF          		ld	a,255
  17A8  CD9839        		call	ATOF
  17AB  224EFF        		ld	(PROGAD),hl
  17AE  189C          		jr	ARGLP
                      	
                      	;destroy: af,bc
  17B0                	ARGNCHK:
  17B0  AF            		xor	a
  17B1  3265FF        		ld	(OPRTR),a
  17B4  3225FF        		ld	(ARGTYP),a
  17B7  C9            		ret
                      	
  17B8                	ARGVAR:
  17B8  E5            		push	hl		;program address
  17B9  CD9233        		call	GETNAME
  17BC  3A25FF        		ld	a,(ARGTYP)
  17BF  57            		ld	d,a
  17C0  3A65FF        		ld	a,(OPRTR)
  17C3  5F            		ld	e,a
  17C4  D5            		push	de		;;
  17C5  EB            		ex	de,hl
  17C6  CD1F39        		call	PUSHF1
  17C9  EB            		ex	de,hl
                      	
  17CA  C5            		push	bc		;variable name
  17CB  7E            		ld	a,(hl)
  17CC  FE28          		cp	'('
  17CE  280D          		jr	z,ARGVARR
  17D0  224EFF        		ld	(PROGAD),hl
  17D3  CDB633        		call	SRCHVAR
  17D6  3008          		jr	nc,ARGVNC
  17D8  11AB0E        		ld	de,ZERO
  17DB  1803          		jr	ARGVNC
  17DD                	ARGVARR:
  17DD  CDAE32        		call	GETARR
  17E0                	ARGVNC:
  17E0  C1            		pop	bc		;variable name
  17E1  CD3D39        		call	POPF1
  17E4  E1            		pop	hl		;;
  17E5  7C            		ld	a,h
  17E6  3225FF        		ld	(ARGTYP),a
  17E9  7D            		ld	a,l
  17EA  3265FF        		ld	(OPRTR),a
  17ED  E1            		pop	hl		;program address
  17EE  CB79          		bit	7,c
  17F0  2011          		jr	nz,ARGVSTR
  17F2                	ARGVNUM:
  17F2  CDB017        		call	ARGNCHK
  17F5  EB            		ex	de,hl
  17F6  1166FF        		ld	de,FAC1
  17F9  EDA0          		ldi
  17FB                	ARGVLDIR:
  17FB  010400        		ld	bc,4
  17FE  EDB0          		ldir
  1800  C30219        		jp	ARGNEXT2
                      	
                      	
                      	;string variable
  1803                	ARGVSTR:
  1803  CD2D18        		call	ARGSCHK
  1806  EB            		ex	de,hl
  1807  112DFF        		ld	de,STRDSC1
  180A  18EF          		jr	ARGVLDIR
                      	
  180C                	ARGSTR:
  180C  CD2D18        		call	ARGSCHK
  180F  222FFF        		ld	(STRDSC1+2),hl
  1812  1E00          		ld	e,0
  1814                	ARGSLP:
  1814  7E            		ld	a,(hl)
  1815  B7            		or	a
  1816  280B          		jr	z,ARGSOK
  1818  23            		inc	hl
  1819  FE22          		cp	22h		;double quotation mark
  181B  2806          		jr	z,ARGSOK
  181D  1C            		inc	e
  181E  CA0304        		jp	z,LSERR
  1821  18F1          		jr	ARGSLP
  1823                	ARGSOK:
  1823  ED532DFF      		ld	(STRDSC1),de
  1827  224EFF        		ld	(PROGAD),hl
  182A  C34C17        		jp	ARGLP
                      	
                      	;destroy: af,bc
  182D                	ARGSCHK:
  182D  AF            		xor	a
  182E  3265FF        		ld	(OPRTR),a	;a=0
  1831  3C            		inc	a
  1832  3225FF        		ld	(ARGTYP),a	;a=1
  1835  012DFF        		ld	bc,STRDSC1
  1838  ED4367FF      		ld	(FAC1+1),bc
  183C  C9            		ret
                      	
  183D                	ARGCMD:
  183D  FEF2          		cp	FNCLAST+1	;0f2h
  183F  D2DC03        		jp	nc,SNERR
  1842  D6CA          		sub	PLUS		;0cah
  1844  FE0A          		cp	FNC1ST-PLUS
  1846  78            		ld	a,b		;
  1847  386B          		jr	c,OPR		;0cah-0d3h
                      	
  1849  3A65FF        		ld	a,(OPRTR)
  184C  B7            		or	a
  184D  CA8417        		jp	z,ARGTAIL
                      	
  1850  78            		ld	a,b		;
  1851  FEC8          		cp	NOT_		;0c8h
  1853  285F          		jr	z,OPR
  1855  FE9F          		cp	SCREEN		;9fh
  1857  280D          		jr	z,FNC
  1859  FEC4          		cp	FN		;0c4h
  185B  2809          		jr	z,FNC
  185D  FEC6          		cp	INKEY		;0c6h
  185F  2805          		jr	z,FNC
  1861  FECA          		cp	PLUS		;0cah
  1863  DA8417        		jp	c,ARGTAIL
                      	
                      	;	jr	FNC
                      	
                      	;function
  1866                	FNC:
  1866  AF            		xor	a
  1867  3225FF        		ld	(ARGTYP),a
  186A  78            		ld	a,b		;
  186B  FEC6          		cp	INKEY
  186D  CA9E27        		jp	z,F_INKY
  1870  FEC4          		cp	FN
  1872  CAC73E        		jp	z,F_FN
  1875  FE9F          		cp	SCREEN
  1877  CAA63E        		jp	z,F_SCRN
                      	
  187A  CD9018        		call	CALLFNC
  187D                	FNCRTN:
  187D  2A4EFF        		ld	hl,(PROGAD)
  1880                	CLRSTRD:
  1880  3A25FF        		ld	a,(ARGTYP)
  1883  B7            		or	a
  1884  2003          		jr	nz,CLRSTRDNZ
  1886  322DFF        		ld	(STRDSC1),a	;=0
  1889                	CLRSTRDNZ:
  1889  AF            		xor	a
  188A  3265FF        		ld	(OPRTR),a
  188D  C34C17        		jp	ARGLP
                      	
  1890                	CALLFNC:
  1890  FEEA          		cp	LEFT_
  1892  300B          		jr	nc,SKIPARG
                      	
                      	;SGN()...CHR$()
  1894  F5            		push	af
  1895  CD920B        		call	CHKLPAR
  1898  CD3D17        		call	ARG
  189B  CDA10B        		call	CHKRPAR
  189E  F1            		pop	af
                      	
  189F                	SKIPARG:
  189F  113DFA        		ld	de,FNCTBL-(FNC1ST-80h)*2
  18A2  FED7          		cp	USR
  18A4  C24B3F        		jp	nz,JPTBL
                      	
                      	;USR() function
  18A7  E5            		push	hl		;program address
  18A8  CD4B3F        		call	JPTBL
  18AB  CD780B        		call	CHKNUM
  18AE  AF            		xor	a
  18AF  322DFF        		ld	(STRDSC1),a
  18B2  F1            		pop	af		;cancel program address
  18B3  C9            		ret
                      	
                      	
                      	;operator
  18B4                	OPR:
  18B4  FED3          		cp	LT_		;0d3h
  18B6  2001          		jr	nz,OPRNZ
  18B8  3C            		inc	a		;0d3h -> 0d4h
  18B9                	OPRNZ:
  18B9  57            		ld	d,a		;operator
  18BA  3A65FF        		ld	a,(OPRTR)
  18BD  3C            		inc	a
  18BE  FE02          		cp	2
  18C0  D25C19        		jp	nc,OPROPR	;not 00 nor ff
  18C3  3A25FF        		ld	a,(ARGTYP)
  18C6  3C            		inc	a
  18C7  7A            		ld	a,d		;operator
  18C8  2010          		jr	nz,NOTHEAD
                      	;first +, for numeric and string
  18CA  FECA          		cp	PLUS
  18CC  2834          		jr	z,ARGNEXT2
  18CE  FECB          		cp	MINUS
  18D0  2808          		jr	z,NOTHEAD
  18D2  FEC8          		cp	NOT_
  18D4  2804          		jr	z,NOTHEAD
  18D6  B7            		or	a
  18D7  C2DC03        		jp	nz,SNERR
  18DA                	NOTHEAD:
  18DA  CD9419        		call	GETPRIO
  18DD  5F            		ld	e,a
  18DE  C1            		pop	bc		;c=previous operator
  18DF  C5            		push	bc
  18E0  79            		ld	a,c
  18E1  B7            		or	a
  18E2  2870          		jr	z,ARGHEAD
                      	
  18E4  CD9419        		call	GETPRIO
  18E7  BB            		cp	e
  18E8  301E          		jr	nc,CALLOP
  18EA  7A            		ld	a,d		;operator
  18EB                	ARGNEXT:
  18EB  3265FF        		ld	(OPRTR),a
  18EE  3A25FF        		ld	a,(ARGTYP)
  18F1  3D            		dec	a
  18F2  2805          		jr	z,ARGNEXTS
  18F4  CD1F39        		call	PUSHF1
  18F7  1809          		jr	ARGNEXT2
  18F9                	ARGNEXTS:
  18F9  CDB019        		call	COPYSTR
  18FC  2A65FF        		ld	hl,(FAC1-1)	;h=length, l=operator
  18FF  CBB5          		res	6,l
  1901  E5            		push	hl
  1902                	ARGNEXT2:
  1902  2A4EFF        		ld	hl,(PROGAD)
  1905  C34C17        		jp	ARGLP
                      	
                      	
  1908                	CALLOP:
  1908  D5            		push	de		;;d=following operator
  1909  C5            		push	bc		;c=previous operator
  190A  3A25FF        		ld	a,(ARGTYP)
  190D  3D            		dec	a
  190E  2829          		jr	z,CALLOPS
                      	
                      	;numeric
  1910  CD5B39        		call	CPYFAC
  1913  C1            		pop	bc		;
  1914  D1            		pop	de		;;
  1915  CD3D39        		call	POPF1
                      	
  1918                	CALLOPEND:
  1918  CB71          		bit	6,c
  191A  2007          		jr	nz,TYPNUM
  191C  CBF1          		set	6,c
  191E  2125FF        		ld	hl,ARGTYP
  1921  CBCE          		set	1,(hl)
  1923                	TYPNUM:
  1923  D5            		push	de		;;
  1924  79            		ld	a,c
  1925  FED2          		cp	GT_+1
  1927  3802          		jr	c,CALLOPOK
                      	;>,=,<
  1929  3ED1          		ld	a,GT_
                      	
  192B                	CALLOPOK:
  192B  11D700        		ld	de,OPRTBL-(0c8h-80h)*2
  192E  CD4B3F        		call	JPTBL
  1931  AF            		xor	a
  1932  3265FF        		ld	(OPRTR),a
  1935  F1            		pop	af		;;
  1936  C3B418        		jp	OPR
                      	
                      	;string
  1939                	CALLOPS:
  1939  ED4B2DFF      		ld	bc,(STRDSC1)
  193D  ED5B2FFF      		ld	de,(STRDSC1+2)
  1941  CDC419        		call	BACKSTR
  1944  ED4339FF      		ld	(STRDSC4),bc
  1948  ED533BFF      		ld	(STRDSC4+2),de
  194C  C1            		pop	bc
  194D  D1            		pop	de
  194E  E1            		pop	hl
  194F  2265FF        		ld	(FAC1-1),hl
  1952  18C4          		jr	CALLOPEND
                      	
  1954                	ARGHEAD:
  1954  82            		add	a,d		;d=0?
  1955  2094          		jr	nz,ARGNEXT
  1957  E1            		pop	hl		;cancel dummy operator
  1958  2A4EFF        		ld	hl,(PROGAD)
  195B  C9            		ret
                      	
                      	;operator and operator
  195C                	OPROPR:
  195C  7A            		ld	a,d		;operator
  195D  FEC8          		cp	NOT_		;0c8h
  195F  288A          		jr	z,ARGNEXT
  1961  FECA          		cp	PLUS		;0cah
  1963  2824          		jr	z,OPRPLS
  1965  21A60E        		ld	hl,MNSONE
  1968  FECB          		cp	MINUS		;0cbh
  196A  2820          		jr	z,OPRMNS
  196C  FED1          		cp	GT_		;0d1h
  196E  DADC03        		jp	c,SNERR
                      	
                      	;>,=,<
                      	;bit0: >
                      	;bit1: =
                      	;bit2: <
  1971  2165FF        		ld	hl,OPRTR
  1974  7E            		ld	a,(hl)
  1975  FED1          		cp	GT_
  1977  DADC03        		jp	c,SNERR
  197A  B2            		or	d
  197B  BE            		cp	(hl)
  197C  CADC03        		jp	z,SNERR
  197F  77            		ld	(hl),a
                      	
                      	;copy numeric/string bit
  1980  E607          		and	07h		;<=> bits
  1982  C1            		pop	bc		;c=previous operator
  1983  B1            		or	c
  1984  4F            		ld	c,a
  1985  C5            		push	bc
  1986  C30219        		jp	ARGNEXT2
                      	
                      	;+
  1989                	OPRPLS:
  1989  21A10E        		ld	hl,PLSONE
                      	;-
  198C                	OPRMNS:
  198C  CD0A0C        		call	SETF1
  198F  3ECC          		ld	a,ASTRSK	;0cch
  1991  C3EB18        		jp	ARGNEXT
                      	
                      	
                      	;input: a=operator
                      	;output: a=priority
                      	;destroy: f,hl
  1994                	GETPRIO:
  1994  B7            		or	a
  1995  C8            		ret	z
  1996  21AF19        		ld	hl,PRIO+GT_-NOT_
  1999  F640          		or	40h		;numeric/string bit
  199B  D6D1          		sub	GT_		;0d1h
  199D  3005          		jr	nc,PRIONC	;>,=,<
  199F  85            		add	a,l
  19A0  6F            		ld	l,a
  19A1  3801          		jr	c,PRIONC
  19A3  25            		dec	h
  19A4                	PRIONC:
  19A4  7E            		ld	a,(hl)
  19A5  C9            		ret
                      	
  19A6                	PRIO:
                      	;operator priority table
                      	;		not   +  -  *  /  ^ and or >=<
  19A6  03000505060607		db	3, 0, 5, 5, 6, 6, 7, 2, 1, 4
                      	
                      	
                      	;check string descriptor and copy
                      	;destroy: af,bc,de,hl
  19B0                	COPYSTR:
  19B0  2139FF        		ld	hl,STRDSC4
  19B3  7E            		ld	a,(hl)
  19B4  B7            		or	a
  19B5  C20604        		jp	nz,STERR
  19B8  2B            		dec	hl		;STRDSC3+3
  19B9  113CFF        		ld	de,STRDSC4+3
  19BC  010C00        		ld	bc,000ch
  19BF  EDB8          		lddr			;STRDSC3->STRDSC4, STRDSC2->STRDSC3, STRDSC1->STRDSC2
                      	;	xor	a
  19C1  23            		inc	hl
  19C2  77            		ld	(hl),a		;(STRDSC1)=0
  19C3  C9            		ret
                      	
                      	
                      	;copy back string descriptor
                      	;destroy: af,hl
  19C4                	BACKSTR:
  19C4  D5            		push	de
  19C5  C5            		push	bc
  19C6  2131FF        		ld	hl,STRDSC2
  19C9  112DFF        		ld	de,STRDSC1
  19CC  010C00        		ld	bc,000ch
  19CF  EDB0          		ldir			;STRDSC2->STRDSC1, STRDSC3->STRDSC2, STRDSC4->STRDSC3
  19D1  AF            		xor	a
  19D2  12            		ld	(de),a		;(STRDSC4)=0
  19D3  C1            		pop	bc
  19D4  D1            		pop	de
  19D5  C9            		ret
                      	
                      	
                      	;send graphic data to PC-6021
                      	;input: c
                      	;destroy: af,b
  19D6                	SENDGRP:
  19D6  0608          		ld	b,08h
  19D8                	SENDGLP:
  19D8  CB01          		rlc	c
  19DA  1F            		rra
  19DB  10FB          		djnz	SENDGLP
  19DD  1858          		jr	PRINTER
                      	
                      	
                      	;put a character to printer
                      	;input: a
                      	;destroy: none
  19DF                	_PUTPRT:ds	PUTPRT-_PUTPRT
  1A1C                		org	PUTPRT
                      	
  1A1C  F5            		push	af
  1A1D  3A31FA        		ld	a,(GRPFLG)
  1A20  B7            		or	a
  1A21  2806          		jr	z,NOTGRP
  1A23  AF            		xor	a
  1A24                	SETGRP:
  1A24  3231FA        		ld	(GRPFLG),a
  1A27  F1            		pop	af
  1A28  C9            		ret
                      	
  1A29                	NOTGRP:
  1A29  F1            		pop	af
  1A2A  F5            		push	af
  1A2B  FE14          		cp	14h
  1A2D  28F5          		jr	z,SETGRP
  1A2F  CD4F1A        		call	CNVKANA
  1A32  CD371A        		call	PRINTER
  1A35  F1            		pop	af
  1A36  C9            		ret
                      	
                      	
                      	;input: a
                      	;destroy: af
  1A37                	PRINTER:
  1A37  F5            		push	af
  1A38                	PRINTERLP:
  1A38  DBC0          		in	a,(0c0h)
  1A3A  E602          		and	02h
  1A3C  2005          		jr	nz,PRINTERZ	;ready
  1A3E  CD4D27        		call	STOPESC
  1A41  18F5          		jr	PRINTERLP
                      	
  1A43                	PRINTERZ:
  1A43  F1            		pop	af
  1A44  2F            		cpl
  1A45  D391          		out	(91h),a
  1A47  3E01          		ld	a,01h
  1A49  D393          		out	(93h),a		;strobe (>1us)
  1A4B  AF            		xor	a
  1A4C  D393          		out	(93h),a
  1A4E  C9            		ret
                      	
                      	
                      	;convert hiragana -> katakana
                      	;input: a
                      	;output: a
                      	;destroy: f
  1A4F                	_CNVKANA:ds	CNVKANA-_CNVKANA
  1A4F                		org	CNVKANA
                      	
  1A4F  FE86          		cp	86h
  1A51  D8            		ret	c
  1A52  FEA0          		cp	0a0h
  1A54  3803          		jr	c,HIRAGANA
  1A56  FEE0          		cp	0e0h
  1A58  D8            		ret	c
  1A59                	HIRAGANA:
  1A59  EE20          		xor	20h
  1A5B  C9            		ret
                      	
                      	
                      	;CMT open for verify
                      	;destroy: a
  1A5C                	VRFOPN:
  1A5C  3EFF          		ld	a,0ffh
  1A5E  32D8FE        		ld	(VERIFY),a
                      	;	jr	ROPEN
                      	
                      	
                      	;open for tape read
                      	;destroy: none
  1A61                	_ROPEN:ds	ROPEN-_ROPEN
  1A61                		org	ROPEN
                      	
  1A61  F5            		push	af
  1A62  C5            		push	bc
  1A63  061E          		ld	b,1eh
  1A65  CD121B        		call	OPENCMT
  1A68  CD4B1B        		call	RLON
  1A6B  C1            		pop	bc
  1A6C  F1            		pop	af
  1A6D  C9            		ret
                      	
                      	
                      	;get 1 character from CMT
                      	;output: a=data, z(0=error, 1=no error)
                      	;destroy: f
  1A6E                	_GETCMT:ds	GETCMT-_GETCMT
  1A70                		org	GETCMT
                      	
  1A70  3A18FA        		ld	a,(STOPFLG)
  1A73  FE03          		cp	03h
  1A75  2812          		jr	z,CMTSTP
  1A77  3A19FA        		ld	a,(CMTSTAT)
  1A7A  CB67          		bit	4,a
  1A7C  C0            		ret	nz		;read error, z-flag=0
  1A7D  E602          		and	02h
  1A7F  28EF          		jr	z,GETCMT
  1A81  AF            		xor	a		;set z-flag=1
  1A82  3219FA        		ld	(CMTSTAT),a
  1A85  3A1DFA        		ld	a,(CMTBUF)
  1A88  C9            		ret
                      	
  1A89                	CMTSTP:
  1A89  CD991A        		call	CHKVRF
  1A8C  C35127        		jp	STOPSP
                      	
                      	
                      	;call GETCMT, if z=0 then ?TR Error
  1A8F                	GETCMTTR:
  1A8F  CD701A        		call	GETCMT
  1A92  C8            		ret	z
  1A93  CD991A        		call	CHKVRF
  1A96  C30F04        		jp	TRERR
                      	
                      	
                      	;check verify or not
  1A99                	CHKVRF:
  1A99  CDAA1A        		call	RCLOSE
  1A9C                	CHKVRF2:
  1A9C  3AD8FE        		ld	a,(VERIFY)
  1A9F  B7            		or	a
  1AA0  CCDC34        		call	z,NEW
  1AA3  C9            		ret
                      	
                      	
                      	;close for tape read
                      	;destroy: none
  1AA4                	_RCLOSE:ds	RCLOSE-_RCLOSE
  1AAA                		org	RCLOSE
                      	
  1AAA  F5            		push	af
  1AAB  C5            		push	bc
  1AAC  3E1A          		ld	a,1ah
  1AAE                	CLOSEEND:
  1AAE  CD8F0E        		call	OUT90H
  1AB1  CD491B        		call	RLOFF
  1AB4  C1            		pop	bc
  1AB5  F1            		pop	af
  1AB6  C9            		ret
                      	
                      	
                      	;open for tape write
                      	;destroy: none
  1AB7                	_WOPEN:	ds	WOPEN-_WOPEN
  1AB8                		org	WOPEN
                      	
  1AB8  F5            		push	af
  1AB9  C5            		push	bc
  1ABA  CD4B1B        		call	RLON
  1ABD  CDD91A        		call	BLANK
  1AC0  063E          		ld	b,3eh
  1AC2  CD121B        		call	OPENCMT
  1AC5  CDD91A        		call	BLANK
  1AC8  C1            		pop	bc
  1AC9  F1            		pop	af
  1ACA  C9            		ret
                      	
                      	
                      	;put 1 character to CMT
                      	;input: a=data
                      	;destroy: none
  1ACB                	_PUTCMT:ds	PUTCMT-_PUTCMT
  1ACC                		org	PUTCMT
                      	
  1ACC  F5            		push	af
  1ACD                	PUTCMT2:
  1ACD  CDDC1A        		call	CHKWSTP
  1AD0  3E38          		ld	a,38h
  1AD2  CD8F0E        		call	OUT90H
  1AD5  F1            		pop	af
  1AD6  C38F0E        		jp	OUT90H
                      	
                      	
                      	;wait and check stop for tape write
                      	;destroy: af,bc
  1AD9                	BLANK:
  1AD9  CDE525        		call	WAIT
                      	;	jr	CHKWSTP
                      	
                      	;check stop for tape write
                      	;destroy: af (when not stop)
  1ADC                	CHKWSTP:
  1ADC  3A18FA        		ld	a,(STOPFLG)
  1ADF  FE03          		cp	03h
  1AE1  C0            		ret	nz
  1AE2  CD491B        		call	RLOFF
  1AE5  C35127        		jp	STOPSP
                      	
                      	
                      	;check 8255 status (ready for output to port 90h)
                      	;output: z(0=ready)
                      	;destroy: af,(b)
  1AE8                	_CHK90H:ds	CHK90H-_CHK90H
  1AED                		org	CHK90H
                      	
  1AED  3E08          		ld	a,08h
  1AEF  D393          		out	(93h),a		;disable 8255 INT for reading
  1AF1  DB92          		in	a,(92h)
  1AF3  E688          		and	88h		;nobf=1,intr=1?
  1AF5  EAF91A        		jp	pe,CHK90PE
  1AF8  AF            		xor	a		;set z-flag
  1AF9                	CHK90PE:
  1AF9  3E09          		ld	a,09h
  1AFB  D393          		out	(93h),a		;enable 8255 INT for reading
  1AFD  C9            		ret
                      	
                      	
                      	;close for tape write
                      	;destroy: none
  1AFE                	_WCLOSE:ds	WCLOSE-_WCLOSE
  1B06                		org	WCLOSE
                      	
  1B06  F5            		push	af
  1B07  C5            		push	bc
  1B08  01B003        		ld	bc,03b0h
  1B0B  CDE825        		call	WAITLP
  1B0E  3E3A          		ld	a,3ah
  1B10  189C          		jr	CLOSEEND
                      	
                      	
                      	;open CMT subroutine
                      	;input: b (1eh=read, 3eh=write)
                      	;destroy: af,b
  1B12                	OPENCMT:
  1B12  3A1FFA        		ld	a,(BAUD)	;00=600baud, others=1200baud
  1B15  FE01          		cp	01h
  1B17  9F            		sbc	a,a		;ff=600baud, 00=1200baud
  1B18  80            		add	a,b
  1B19  CD8F0E        		call	OUT90H		;read=1dh(600baud), 1eh(1200baud)
                      					;write=3dh(600baud), 3eh(1200baud)
  1B1C  E6F8          		and	0f8h
  1B1E  3C            		inc	a		;read=19h, write=39h
  1B1F  F3            		di
  1B20  CD8F0E        		call	OUT90H
  1B23  FB            		ei
  1B24  AF            		xor	a
  1B25  3219FA        		ld	(CMTSTAT),a
                      	;	ld	(STOPFLG),a
  1B28  C9            		ret
                      	
                      	
                      	;blink asterisk
                      	;destroy: af
  1B29                	_BLNKAST:ds	BLNKAST-_BLNKAST
  1B2A                		org	BLNKAST
                      	
  1B2A  E5            		push	hl
  1B2B  211EFA        		ld	hl,ASTSTAT
  1B2E  7E            		ld	a,(hl)
  1B2F  EE0A          		xor	'*'-' '
  1B31  77            		ld	(hl),a
                      	
  1B32  2AABFD        		ld	hl,(WIDTH-1)	;h=(WIDTH)
  1B35  25            		dec	h
  1B36  2E01          		ld	l,1
  1B38  CDCD11        		call	XY2AD
  1B3B  77            		ld	(hl),a
                      	
  1B3C  E1            		pop	hl
  1B3D  C9            		ret
                      	
                      	
                      	;CMT relay on/off
                      	;destroy: af,b
  1B3E                	_RLOFF:	ds	RLOFF-_RLOFF
  1B49                		org	RLOFF
                      	
  1B49  1801          		jr	RLOFF2
                      	
  1B4B                	_RLON:	ds	RLON-_RLON
  1B4B                		org	RLON
                      	
  1B4B  3E            		db	3eh		;ld a,
  1B4C                	RLOFF2:
  1B4C  AF            		xor	a		;afh
                      	
  1B4D  0608          		ld	b,00001000b	;bit3=CMT relay
  1B4F  C3541B        		jp	OUTB0H
                      	
                      	
                      	;output port b0h
                      	;input: a=new data, b=change bit
                      	;destroy: af
  1B52                	_OUTB0H:ds	OUTB0H-_OUTB0H
  1B54                		org	OUTB0H
                      	
  1B54  E5            		push	hl
  1B55  2127FA        		ld	hl,PORTB0H
  1B58  AE            		xor	(hl)
  1B59  A0            		and	b
  1B5A  AE            		xor	(hl)
  1B5B  D3B0          		out	(0b0h),a
  1B5D  77            		ld	(hl),a
  1B5E  E1            		pop	hl
  1B5F  C9            		ret
                      	
                      	
                      	;PLAY stop sub
                      	;destroy: none
  1B60                	_PLSTPS:ds	PLSTPS-_PLSTPS
  1B60                		org	PLSTPS
                      	
  1B60  F5            		push	af
  1B61  E5            		push	hl
  1B62  D5            		push	de
  1B63  C5            		push	bc
                      	
  1B64  3E07          		ld	a,07h		;ch.ABC=tone,portAB=in
  1B66  1E38          		ld	e,38h
  1B68  CDC51B        		call	SOUND
  1B6B  3C            		inc	a		;register8=ch.A volume
  1B6C  1E00          		ld	e,0
  1B6E  CDC51B        		call	SOUND
  1B71  3C            		inc	a		;register9=ch.B volume
  1B72  CDC51B        		call	SOUND
  1B75  3C            		inc	a		;register10=ch.C volume
  1B76  CDC51B        		call	SOUND
                      	
  1B79  AF            		xor	a
  1B7A  321BFD        		ld	(PLAYST),a
  1B7D  3214FD        		ld	(CHANNEL),a
                      	
  1B80  67            		ld	h,a
  1B81  6F            		ld	l,a
  1B82  22A1FB        		ld	(BUFAIN),hl	;clear BFIN and BFOUT for ch.A
  1B85  22A7FB        		ld	(BUFBIN),hl	;clear BFIN and BFOUT for ch.B
  1B88  22ADFB        		ld	(BUFCIN),hl	;clear BFIN and BFOUT for ch.C
                      	
  1B8B  211DFD        		ld	hl,PLWKA
  1B8E  77            		ld	(hl),a
  1B8F  54            		ld	d,h
  1B90  5D            		ld	e,l
  1B91  13            		inc	de
  1B92  012400        		ld	bc,PLWKB-PLWKA-1
  1B95  EDB0          		ldir
                      	
  1B97  21B91B        		ld	hl,PLWKTBL
  1B9A  112CFD        		ld	de,PLWKA+OCTAVE
  1B9D  0E05          		ld	c,5		;b=0
  1B9F  EDB0          		ldir
                      	
  1BA1  211DFD        		ld	hl,PLWKA
  1BA4  1142FD        		ld	de,PLWKB
  1BA7  0E4A          		ld	c,PLWKC-PLWKA	;b=0
  1BA9  EDB0          		ldir
                      	
  1BAB  C1            		pop	bc
  1BAC  D1            		pop	de
  1BAD  E1            		pop	hl
  1BAE  F1            		pop	af
  1BAF  C9            		ret
                      	
                      	
                      	;stop and initialize for PLAY command
                      	;destroy: none
  1BB0                	_PLSTOP:ds	PLSTOP-_PLSTOP
  1BB3                		org	PLSTOP
  1BB3  F3            		di
  1BB4  CD601B        		call	PLSTPS
  1BB7  FB            		ei
  1BB8  C9            		ret
                      	
                      	
  1BB9                	PLWKTBL:
  1BB9  04            		db	4		;O-value
  1BBA  04            		db	4		;L-value
  1BBB  78            		db	120		;T-value
  1BBC  08            		db	8		;V-value
  1BBD  FF            		db	255		;M-value(low)
                      	
                      	
                      	;get PSG resister value and set new value
                      	;input: a=register, e=value
                      	;output: d=old value
                      	;destroy: none
  1BBE                	_SOUND2:ds	SOUND2-_SOUND2
  1BBE                		org	SOUND2
                      	
  1BBE  F5            		push	af
  1BBF  D3A0          		out	(0a0h),a
  1BC1  DBA2          		in	a,(0a2h)
  1BC3  57            		ld	d,a
  1BC4  F1            		pop	af
                      	;	jp	SOUND
                      	
                      	
                      	;set PSG register
                      	;input: a=register, e=value
                      	;destroy: none
  1BC5                	_SOUND:	ds	SOUND-_SOUND
  1BC5                		org	SOUND
                      	
  1BC5  F5            		push	af
  1BC6  D3A0          		out	(0a0h),a
  1BC8  7B            		ld	a,e
  1BC9  D3A1          		out	(0a1h),a
  1BCB  F1            		pop	af
  1BCC  C9            		ret
                      	
                      	
                      	;bell
                      	;destroy: af,bc,e
  1BCD                	_BELL:	ds	BELL-_BELL
  1BCD                		org	BELL
                      	
  1BCD  CDB31B        		call	PLSTOP
                      	;tune
  1BD0  AF            		xor	a		;register0=ch.A 8bit fine tune
  1BD1  1E55          		ld	e,55h
  1BD3  CDC51B        		call	SOUND
  1BD6  5F            		ld	e,a		;a=0
  1BD7  3C            		inc	a		;register1=ch.A 4bit coarse tune
  1BD8  CDC51B        		call	SOUND
                      	;volume
  1BDB  1E07          		ld	e,07h
                      	;	ld	a,08h		;register8=ch.A volume
  1BDD  83            		add	a,e		;register8=ch.A volume
  1BDE  CDC51B        		call	SOUND
  1BE1  010004        		ld	bc,0400h
  1BE4  59            		ld	e,c		;c=0
  1BE5  CDE825        		call	WAITLP
                      	;volume
  1BE8  3E08          		ld	a,08h		;register8=ch.A volume
  1BEA  18D9          		jr	SOUND
                      	
                      	
                      	;play subroutine called by time interrupt
                      	;destroy: af,bc,de,hl
  1BEC                	PLAYINT:
  1BEC  3A14FD        		ld	a,(CHANNEL)
  1BEF  3C            		inc	a
  1BF0  3A1BFD        		ld	a,(PLAYST)
  1BF3  2802          		jr	z,PLIZ
  1BF5  B7            		or	a
  1BF6  C8            		ret	z
  1BF7                	PLIZ:
  1BF7  0F            		rrca
  1BF8  0F            		rrca
  1BF9  0F            		rrca
  1BFA  4F            		ld	c,a
  1BFB  2167FD        		ld	hl,PLWKC
  1BFE  0603          		ld	b,03h
  1C00                	PLILP:
  1C00  E5            		push	hl
  1C01  CB01          		rlc	c
  1C03  300D          		jr	nc,PLINC
                      	
  1C05  56            		ld	d,(hl)
  1C06  2C            		inc	l		;inc	hl
  1C07  5E            		ld	e,(hl)
  1C08  1B            		dec	de
  1C09  73            		ld	(hl),e
  1C0A  2D            		dec	l		;dec	hl
  1C0B  72            		ld	(hl),d
  1C0C  7A            		ld	a,d
  1C0D  B3            		or	e
  1C0E  2061          		jr	nz,PLINEXT
  1C10  180A          		jr	PLIGET
                      	
  1C12                	PLINC:
  1C12  211BFD        		ld	hl,PLAYST
  1C15  3A14FD        		ld	a,(CHANNEL)
  1C18  3C            		inc	a
  1C19  B6            		or	(hl)
  1C1A  2055          		jr	nz,PLINEXT	;if (PLAYST)<>0 or (CHANNEL)<>ff
                      	
  1C1C                	PLIGET:
                      	;length
  1C1C  CD4810        		call	GETPLBF
  1C1F  2850          		jr	z,PLINEXT
  1C21  FEFF          		cp	0ffh
  1C23  2863          		jr	z,PLIRES
  1C25  D1            		pop	de
  1C26  D5            		push	de
  1C27  12            		ld	(de),a
  1C28  CD4810        		call	GETPLBF		;no change in de
  1C2B  1C            		inc	e		;inc de
  1C2C  12            		ld	(de),a
                      	
                      	;tune
  1C2D  CD4810        		call	GETPLBF
  1C30  5F            		ld	e,a
  1C31  78            		ld	a,b
  1C32  87            		add	a,a
  1C33  3D            		dec	a		;register1,3,5=4bit coarse tune
  1C34  CDC51B        		call	SOUND
  1C37  CD4810        		call	GETPLBF
  1C3A  5F            		ld	e,a
  1C3B  78            		ld	a,b
  1C3C  3D            		dec	a
  1C3D  87            		add	a,a		;register0,2,4=8bit fine tune
  1C3E  CDC51B        		call	SOUND
                      	
                      	;volume or envelope
  1C41  CD4810        		call	GETPLBF
  1C44  57            		ld	d,a		;
  1C45  FE10          		cp	10h
  1C47  3802          		jr	c,PLIVOL
  1C49  3E10          		ld	a,10h		;envelope
  1C4B                	PLIVOL:
  1C4B  5F            		ld	e,a
  1C4C  78            		ld	a,b
  1C4D  C607          		add	a,7		;register8,9,10=volume
  1C4F  CDC51B        		call	SOUND
  1C52  7A            		ld	a,d		;
  1C53  D610          		sub	10h
  1C55  3818          		jr	c,PLISET
                      	
                      	;period
  1C57  57            		ld	d,a		;
  1C58  CD4810        		call	GETPLBF
  1C5B  5F            		ld	e,a
  1C5C  3E0B          		ld	a,0bh
  1C5E  CDC51B        		call	SOUND
  1C61  CD4810        		call	GETPLBF
  1C64  5F            		ld	e,a
  1C65  3E0C          		ld	a,0ch
  1C67  CDC51B        		call	SOUND
                      	
                      	;envelope pattern
  1C6A  5A            		ld	e,d		;
  1C6B  3C            		inc	a		;register13=envelope pattern
  1C6C  CDC51B        		call	SOUND
                      	
                      	;status
  1C6F                	PLISET:
  1C6F  CBC1          		set	0,c
                      	
  1C71                	PLINEXT:
  1C71  E1            		pop	hl
  1C72  7D            		ld	a,l
  1C73  C6DB          		add	a,PLWKA-PLWKB	;no carry
  1C75  6F            		ld	l,a
  1C76  1088          		djnz	PLILP
                      	
  1C78  211BFD        		ld	hl,PLAYST
  1C7B  7E            		ld	a,(hl)
  1C7C  71            		ld	(hl),c
  1C7D  0C            		inc	c
  1C7E  0D            		dec	c
  1C7F  C0            		ret	nz		;new (PLAYST)<>0
  1C80  B7            		or	a		;old (PLAYST)
  1C81  C2EC1B        		jp	nz,PLAYINT
  1C84  3214FD        		ld	(CHANNEL),a	;=0
  1C87  C9            		ret
                      	
                      	;reset
  1C88                	PLIRES:
  1C88  CB81          		res	0,c
  1C8A  78            		ld	a,b
  1C8B  C607          		add	a,7		;register8,9,10=volume
  1C8D  1E00          		ld	e,0
  1C8F  CDC51B        		call	SOUND
  1C92  18DD          		jr	PLINEXT
                      	
                      	
                      	;get play buffer address
                      	;output: hl
                      	;destroy: f
  1C94                	GETPLAD:
  1C94  67            		ld	h,a
  1C95  3A14FD        		ld	a,(CHANNEL)
  1C98  6F            		ld	l,a
  1C99  87            		add	a,a		;a*2
  1C9A  85            		add	a,l		;a*3
  1C9B  87            		add	a,a		;a*6
  1C9C  C6A1          		add	a,BUFAIN-BUFAIN/256*256		;no carry
  1C9E  6F            		ld	l,a
  1C9F  7C            		ld	a,h
  1CA0  26FB          		ld	h,BUFAIN/256	;higher byte
  1CA2  C9            		ret
                      	
                      	
                      	;joystick
                      	;input: a=1or2
                      	;output: a (0-0-trigger2-trigger1-right-left-down-up)
                      	;destroy: f
  1CA3                	_JOYSTK:ds	JOYSTK-_JOYSTK
  1CA6                		org	JOYSTK
                      	
  1CA6  D5            		push	de
  1CA7  0F            		rrca
  1CA8  37            		scf
  1CA9  1F            		rra
  1CAA  5F            		ld	e,a		;c0h or 80h
                      	
  1CAB  3E07          		ld	a,07h		;register7=portABin-out,noise,tone
  1CAD  F3            		di
  1CAE  D3A0          		out	(0a0h),a
  1CB0  DBA2          		in	a,(0a2h)
  1CB2  1802          		jr	SKPPATCH2
                      	
                      	
                      	;1cb4h-1cb5h: to be patched by PC6001V/VX/VW
  1CB4                	_PATCH2:ds	PATCH2-_PATCH2
  1CB4                		org	PATCH2
  1CB4  0000          		db	00h, 00h
                      	
                      	
  1CB6                	SKPPATCH2:
  1CB6  57            		ld	d,a		;
                      	
  1CB7  E6BF          		and	10111111b	;parallel port A=in
  1CB9  F680          		or	10000000b	;parallel port B=out
  1CBB  D3A1          		out	(0a1h),a
                      	
  1CBD  3E0F          		ld	a,0fh		;register15=parallel port B
  1CBF  CDC51B        		call	SOUND		;c0h or 80h
                      	
  1CC2  3D            		dec	a		;register14=parallel port A
  1CC3  D3A0          		out	(0a0h),a
  1CC5  DBA2          		in	a,(0a2h)
  1CC7  2F            		cpl
  1CC8  5A            		ld	e,d		;
  1CC9  57            		ld	d,a		;;
                      	
  1CCA  3E07          		ld	a,07h
  1CCC  CDC51B        		call	SOUND
                      	
  1CCF  FB            		ei
                      	
  1CD0  7A            		ld	a,d		;;
  1CD1  D1            		pop	de
  1CD2  C9            		ret
                      	
                      	
                      	;LOCATE command
  1CD3                	C_LOCA:
  1CD3  CDE40D        		call	INT1ARG
  1CD6  ED5BACFD      		ld	de,(WIDTH)
  1CDA  BB            		cp	e
  1CDB  D2E503        		jp	nc,FCERR
  1CDE  3C            		inc	a
  1CDF  F5            		push	af		;
  1CE0  7E            		ld	a,(hl)
  1CE1  FE2C          		cp	','
  1CE3  C2DC03        		jp	nz,SNERR
  1CE6  CDE30D        		call	INT1INC
                      	
  1CE9  2A20FA        		ld	hl,(HEIGHT)	;l=(HEIGHT)
  1CEC  BD            		cp	l
  1CED  D2E503        		jp	nc,FCERR
  1CF0  3C            		inc	a
                      	
  1CF1  E1            		pop	hl		;
  1CF2  6F            		ld	l,a
  1CF3  C36D11        		jp	SETCSR
                      	
                      	
                      	;CONSOLE command
  1CF6                	C_CNSL:
  1CF6  ED4BA2FD      		ld	bc,(CONSOL1)	;c=(CONSOL1),b=(CONSOL2)
  1CFA  C5            		push	bc
                      	
  1CFB  CD6C3F        		call	CHKCMM
  1CFE  2814          		jr	z,CNSLPAR2
                      	
  1D00  CDE40D        		call	INT1ARG
  1D03  3A20FA        		ld	a,(HEIGHT)
  1D06  3D            		dec	a
  1D07  BB            		cp	e
  1D08  3801          		jr	c,CNSLC1
  1D0A  7B            		ld	a,e
  1D0B                	CNSLC1:
  1D0B  3C            		inc	a
  1D0C  C1            		pop	bc
  1D0D  4F            		ld	c,a
  1D0E  C5            		push	bc
                      	
  1D0F  CD7C3F        		call	CHKCLCM
  1D12  2840          		jr	z,CNSLEND
                      	
  1D14                	CNSLPAR2:
  1D14  CD6C3F        		call	CHKCMM
  1D17  2818          		jr	z,CNSLPAR3
                      	
  1D19  CDE40D        		call	INT1ARG
                      	
  1D1C  ED5B20FA      		ld	de,(HEIGHT)
  1D20  C1            		pop	bc
  1D21  81            		add	a,c
  1D22  DAE503        		jp	c,FCERR
  1D25  3D            		dec	a
  1D26  BB            		cp	e
  1D27  3801          		jr	c,CNSLC2
  1D29  7B            		ld	a,e
  1D2A                	CNSLC2:
  1D2A  47            		ld	b,a
  1D2B  C5            		push	bc
                      	
  1D2C  CD7C3F        		call	CHKCLCM
  1D2F  2823          		jr	z,CNSLEND
                      	
  1D31                	CNSLPAR3:
  1D31  CD6C3F        		call	CHKCMM
  1D34  2813          		jr	z,CNSLPAR4
                      	
  1D36  CDE40D        		call	INT1ARG
  1D39  FE02          		cp	02h
  1D3B  D2E503        		jp	nc,FCERR
  1D3E  32A6FD        		ld	(CONSOL3),a
                      	
  1D41  CDB312        		call	PRTFKEY2
  1D44  CD7C3F        		call	CHKCLCM
  1D47  280B          		jr	z,CNSLEND
                      	
  1D49                	CNSLPAR4:
  1D49  CDE40D        		call	INT1ARG
  1D4C  FE02          		cp	02h
  1D4E  D2E503        		jp	nc,FCERR
  1D51  322DFA        		ld	(CONSOL4),a
                      	
  1D54                	CNSLEND:
  1D54  E1            		pop	hl
  1D55  7C            		ld	a,h
  1D56  BD            		cp	l
  1D57  DAE503        		jp	c,FCERR
  1D5A  22A2FD        		ld	(CONSOL1),hl
                      	
  1D5D                	CNSLEND2:
  1D5D  3A20FA        		ld	a,(HEIGHT)
  1D60  21A6FD        		ld	hl,CONSOL3
  1D63  96            		sub	(hl)
  1D64  47            		ld	b,a		;
                      	
  1D65  21A2FD        		ld	hl,CONSOL1
  1D68  BE            		cp	(hl)
  1D69  3001          		jr	nc,CNSLNC
  1D6B  77            		ld	(hl),a
  1D6C                	CNSLNC:
  1D6C  7E            		ld	a,(hl)
  1D6D  CD6515        		call	CUTLINE2	;a=(CONSOL1)
                      	
  1D70  21A5FD        		ld	hl,LASTLIN
  1D73  3AA3FD        		ld	a,(CONSOL2)
  1D76  77            		ld	(hl),a
  1D77  B8            		cp	b		;
  1D78  3808          		jr	c,CNSLC3
  1D7A  3A92FD        		ld	a,(SCREEN1)
  1D7D  FE02          		cp	02h
  1D7F  3001          		jr	nc,CNSLC3	;screen mode 3,4
  1D81  70            		ld	(hl),b
                      	
  1D82                	CNSLC3:
  1D82  3AA8FD        		ld	a,(CSRY)
  1D85  3D            		dec	a
  1D86  BE            		cp	(hl)
  1D87  D8            		ret	c
                      	
  1D88  6E            		ld	l,(hl)
  1D89  C34C11        		jp	CTLCR
                      	
                      	
                      	;COLOR command
  1D8C                	_C_COLR:ds	C_COLR-_C_COLR
  1D9B                		org	C_COLR
                      	
  1D9B  1193FD        		ld	de,COLOR1
  1D9E  0602          		ld	b,02h
  1DA0                	COLRLP:
  1DA0  CD6C3F        		call	CHKCMM
  1DA3  2810          		jr	z,COLRZ
  1DA5  C5            		push	bc
  1DA6  D5            		push	de
  1DA7  CDE40D        		call	INT1ARG
  1DAA  D1            		pop	de
  1DAB  C1            		pop	bc
  1DAC  12            		ld	(de),a
  1DAD  CD613F        		call	CHKCLN		;a=(hl)
  1DB0  C8            		ret	z
  1DB1  FE2C          		cp	','
  1DB3  C0            		ret	nz
  1DB4  23            		inc	hl
  1DB5                	COLRZ:
  1DB5  13            		inc	de
  1DB6  10E8          		djnz	COLRLP
                      	
  1DB8                	COLRPAR3:
  1DB8  CDE40D        		call	INT1ARG
                      	;	jp	SETC3
                      	
                      	
                      	;set color 3rd parameter
                      	;input: a=3rd color parameter (1 or 2)
                      	;destroy: af,bc,de
  1DBB                	_SETC3:	ds	SETC3-_SETC3
  1DBB                		org	SETC3
                      	
  1DBB  EB            		ex	de,hl
  1DBC  3D            		dec	a
  1DBD  FE02          		cp	2
  1DBF  D2E503        		jp	nc,FCERR
  1DC2  87            		add	a,a		;0 or 2
                      	
  1DC3  2195FD        		ld	hl,COLOR3
  1DC6  BE            		cp	(hl)
  1DC7  C8            		ret	z
  1DC8  77            		ld	(hl),a
                      	
  1DC9  2A90FD        		ld	hl,(VRAM-1)
  1DCC  010200        		ld	bc,0002h	;32*16=256*2
  1DCF  68            		ld	l,b		;b=0
  1DD0                	SETC3LP:
  1DD0  7E            		ld	a,(hl)
  1DD1  EE02          		xor	02h
  1DD3  77            		ld	(hl),a
  1DD4  23            		inc	hl
  1DD5  10F9          		djnz	SETC3LP
  1DD7  0D            		dec	c
  1DD8  20F6          		jr	nz,SETC3LP
  1DDA  EB            		ex	de,hl
  1DDB  C9            		ret
                      	
                      	
                      	;CLS command
                      	;destroy: af,de
  1DDC                	_CLS:	ds	CLS-_CLS
  1DFB                	C_CLS:
  1DFB                		org	CLS
                      	
  1DFB  E5            		push	hl
  1DFC  C5            		push	bc
  1DFD  CD3116        		call	CLSMAIN2
  1E00  C1            		pop	bc
  1E01  E1            		pop	hl
  1E02  C9            		ret
                      	
                      	
                      	;SCREEN command
  1E03                	_C_SCRN:ds	C_SCRN-_C_SCRN
  1E04                		org	C_SCRN
                      	
  1E04  3A92FD        		ld	a,(SCREEN1)
  1E07  5F            		ld	e,a
  1E08  1601          		ld	d,1		;d>0: no 1st parameter
  1E0A  D5            		push	de
  1E0B  ED5B8FFD      		ld	de,(SCREEN2)	;e=(SCREEN2),d=(SCREEN3)
  1E0F  D5            		push	de
                      	
  1E10  CD6C3F        		call	CHKCMM
  1E13  280E          		jr	z,SCRPAR2
  1E15  CDE40D        		call	INT1ARG
  1E18  1D            		dec	e
  1E19  C1            		pop	bc		;c=2nd,b=3rd parameter
  1E1A  EB            		ex	de,hl
  1E1B  E3            		ex	(sp),hl		;cancel 1st parameter, l=1st parameter, h=0
  1E1C  EB            		ex	de,hl
  1E1D  C5            		push	bc		;c=2nd,b=3rd parameter
                      	
  1E1E  CD7C3F        		call	CHKCLCM
  1E21  2818          		jr	z,SCRMAIN
                      	
  1E23                	SCRPAR2:
  1E23  CD6C3F        		call	CHKCMM
  1E26  280C          		jr	z,SCRPAR3
  1E28  CDE40D        		call	INT1ARG
  1E2B  3D            		dec	a
                      	
  1E2C  D1            		pop	de		;e=2nd,d=3rd parameter
  1E2D  5F            		ld	e,a
  1E2E  D5            		push	de
                      	
  1E2F  CD7C3F        		call	CHKCLCM
  1E32  2807          		jr	z,SCRMAIN
                      	
  1E34                	SCRPAR3:
  1E34  CDE40D        		call	INT1ARG
  1E37  3D            		dec	a
                      	
  1E38  D1            		pop	de		;e=2nd,d=3rd parameter
  1E39  57            		ld	d,a
  1E3A  D5            		push	de
                      	
  1E3B                	SCRMAIN:
  1E3B  D1            		pop	de		;e=2nd,d=3rd parameter
  1E3C  C1            		pop	bc		;c=1st parameter
                      	
  1E3D  3A8CFD        		ld	a,(PAGES)
  1E40  3D            		dec	a
  1E41  BA            		cp	d
  1E42  DAE503        		jp	c,FCERR
  1E45  BB            		cp	e
  1E46  DAE503        		jp	c,FCERR
                      	
  1E49  79            		ld	a,c
  1E4A  FE02          		cp	2
  1E4C  380D          		jr	c,SCROK
  1E4E  FE04          		cp	4
  1E50  D2E503        		jp	nc,FCERR
  1E53  7B            		ld	a,e
  1E54  B7            		or	a
  1E55  2004          		jr	nz,SCROK
  1E57  B0            		or	b		;b>0: no 1st parameter
  1E58  CAE503        		jp	z,FCERR		;if 1st>=2 and 2nd=0
  1E5B                	SCROK:
  1E5B  D5            		push	de		;e=2nd,d=3rd parameter
  1E5C  7B            		ld	a,e
  1E5D  CD0C14        		call	CHGACT
                      	
  1E60  F1            		pop	af		;a=3rd parameter
  1E61  2190FD        		ld	hl,SCREEN3
  1E64  BE            		cp	(hl)
  1E65  C4ED13        		call	nz,CHGDSP
                      	
  1E68  78            		ld	a,b
  1E69  B7            		or	a
  1E6A  79            		ld	a,c
  1E6B  CA9013        		jp	z,CHGMOD	;b>0: no 1st parameter
  1E6E  C9            		ret
                      	
                      	
                      	;TIME function
  1E6F                	F_TIME:
  1E6F  2A28FA        		ld	hl,(TMCNT)
  1E72  ED5B2AFA      		ld	de,(TMCNT+2)
  1E76  C39A0C        		jp	I4TOF
                      	
                      	
                      	;SOUND command
  1E79                	C_SOUN:
  1E79  CD613F        		call	CHKCLN
  1E7C  CADC03        		jp	z,SNERR
  1E7F  CDE40D        		call	INT1ARG
  1E82  FE10          		cp	16
  1E84  D2E503        		jp	nc,FCERR
  1E87  F5            		push	af
  1E88  7E            		ld	a,(hl)
  1E89  FE2C          		cp	','
  1E8B  C2DC03        		jp	nz,SNERR
  1E8E  CDE30D        		call	INT1INC
  1E91  F1            		pop	af
                      	
  1E92  F3            		di
  1E93  CDC51B        		call	SOUND
  1E96  FB            		ei
  1E97  C9            		ret
                      	
                      	
                      	;PLAY command
  1E98                	C_PLAY:
  1E98  CDB31E        		call	PLAY
  1E9B  224EFF        		ld	(PROGAD),hl
  1E9E  C9            		ret
                      	
                      	
                      	;play routine
                      	;input: hl=data address, (z=0)
                      	;output: hl=next address
                      	;destroy: af,bc,de
  1E9F                	_PLAY:	ds	PLAY-_PLAY
  1EB3                		org	PLAY
                      	
  1EB3  DDE5          		push	ix
  1EB5  ED5B4EFF      		ld	de,(PROGAD)
  1EB9  D5            		push	de
                      	
  1EBA  AF            		xor	a
  1EBB  3244FD        		ld	(PLWKB+PLLEN),a
  1EBE  3269FD        		ld	(PLWKC+PLLEN),a
                      	
  1EC1  DD211DFD      		ld	ix,PLWKA
  1EC5  0603          		ld	b,3
  1EC7                	PLAYLP1:
  1EC7  C5            		push	bc
  1EC8  CD8926        		call	STRARG
  1ECB  DD7702        		ld	(ix+PLLEN),a
  1ECE  DD7303        		ld	(ix+PLADR),e
  1ED1  DD7204        		ld	(ix+PLADR+1),d
  1ED4  012500        		ld	bc,PLWKB-PLWKA
  1ED7  DD09          		add	ix,bc
  1ED9  C1            		pop	bc
  1EDA  CD7C3F        		call	CHKCLCM
  1EDD  2802          		jr	z,PLSTR0
  1EDF  10E6          		djnz	PLAYLP1
                      	
                      	;check string length=0?
  1EE1                	PLSTR0:
  1EE1  2169FD        		ld	hl,PLWKC+PLLEN
  1EE4  11DBFF        		ld	de,PLWKB-PLWKC
  1EE7  0603          		ld	b,3
  1EE9                	PLAYLP2:
  1EE9  7E            		ld	a,(hl)
  1EEA  B7            		or	a
  1EEB  200C          		jr	nz,PLAYNZ
  1EED  78            		ld	a,b
  1EEE  3D            		dec	a
  1EEF  3214FD        		ld	(CHANNEL),a
  1EF2  3EFF          		ld	a,0ffh
  1EF4  E5            		push	hl
  1EF5  CD310F        		call	PUTPLBF
  1EF8  E1            		pop	hl
  1EF9                	PLAYNZ:
  1EF9  19            		add	hl,de
  1EFA  10ED          		djnz	PLAYLP2
                      	
                      	
  1EFC                	PLAYLP3:
  1EFC  3A18FA        		ld	a,(STOPFLG)
  1EFF  FE03          		cp	03h
  1F01  CCB31B        		call	z,PLSTOP
  1F04  2856          		jr	z,PLAYEND
                      	
  1F06  DD2167FD      		ld	ix,PLWKC
  1F0A  0603          		ld	b,3
  1F0C                	PLAYLP4:
  1F0C  78            		ld	a,b
  1F0D  3D            		dec	a
  1F0E  3214FD        		ld	(CHANNEL),a
  1F11  DD7E02        		ld	a,(ix+PLLEN)
  1F14  B7            		or	a
  1F15  2827          		jr	z,PLAYNEXT
                      	
  1F17  DD6E03        		ld	l,(ix+PLADR)
  1F1A  DD6604        		ld	h,(ix+PLADR+1)
                      	
  1F1D  3217FD        		ld	(PLAYLEN),a
  1F20  2218FD        		ld	(PLAYSTR),hl
  1F23  C5            		push	bc
  1F24  CD671F        		call	CNVPLAY
  1F27  C1            		pop	bc
  1F28  3A17FD        		ld	a,(PLAYLEN)
  1F2B  DD7702        		ld	(ix+PLLEN),a
  1F2E  2A18FD        		ld	hl,(PLAYSTR)
  1F31  DD7503        		ld	(ix+PLADR),l
  1F34  DD7404        		ld	(ix+PLADR+1),h
                      	
  1F37  B7            		or	a
  1F38  2004          		jr	nz,PLAYNEXT
  1F3A  3D            		dec	a
  1F3B  CD310F        		call	PUTPLBF		;a=ffh
                      	
  1F3E                	PLAYNEXT:
  1F3E  11DBFF        		ld	de,PLWKB-PLWKC
  1F41  DD19          		add	ix,de
  1F43  10C7          		djnz	PLAYLP4
                      	
  1F45  3EFF          		ld	a,0ffh
  1F47  3214FD        		ld	(CHANNEL),a
                      	
  1F4A  3A1FFD        		ld	a,(PLWKA+PLLEN)
  1F4D  2144FD        		ld	hl,PLWKB+PLLEN
  1F50  B6            		or	(hl)
  1F51  2169FD        		ld	hl,PLWKC+PLLEN
  1F54  B6            		or	(hl)
  1F55  20A5          		jr	nz,PLAYLP3
                      	
  1F57  F3            		di
  1F58  CDEC1B        		call	PLAYINT
  1F5B  FB            		ei
                      	
  1F5C                	PLAYEND:
  1F5C  D1            		pop	de
  1F5D  2A4EFF        		ld	hl,(PROGAD)
  1F60  ED534EFF      		ld	(PROGAD),de
  1F64  DDE1          		pop	ix
  1F66  C9            		ret
                      	
                      	
                      	;convert play data
                      	;input: a=string length, hl=string address, ix=play work
                      	;destroy: af,bc,de,hl
  1F67                	CNVPLAY:
  1F67  CD941C        		call	GETPLAD
  1F6A  56            		ld	d,(hl)
  1F6B  14            		inc	d		;in+1
  1F6C  23            		inc	hl
  1F6D  7E            		ld	a,(hl)		;out
  1F6E  92            		sub	d
  1F6F  3004          		jr	nc,CNVPLNC
                      	
  1F71  23            		inc	hl
  1F72  23            		inc	hl		;size
  1F73  3C            		inc	a
  1F74  86            		add	a,(hl)
  1F75                	CNVPLNC:
  1F75  FE08          		cp	8
  1F77  D8            		ret	c
                      	
  1F78  CD1B20        		call	PLAYGETC
  1F7B  C8            		ret	z
  1F7C  CD6A20        		call	PLAYINC
  1F7F  CDAC0B        		call	TOUPPER
  1F82  CD871F        		call	PLAYCMD
  1F85  18E0          		jr	CNVPLAY
                      	
                      	
  1F87                	PLAYCMD:
  1F87  D641          		sub	'A'
  1F89  FE07          		cp	'G'-'A'+1
  1F8B  DAC720        		jp	c,TONE
  1F8E  219F1F        		ld	hl,PLAYTBL
  1F91  0608          		ld	b,8
  1F93                	PLCMDLP:
  1F93  BE            		cp	(hl)
  1F94  23            		inc	hl
  1F95  CA523F        		jp	z,JPTBLNC
  1F98  23            		inc	hl
  1F99  23            		inc	hl
  1F9A  10F7          		djnz	PLCMDLP
  1F9C  C3E503        		jp	FCERR
                      	
                      	
  1F9F                	PLAYTBL:
  1F9F  15            		db	'V'-'A'
  1FA0  B71F          		dw	PLAYV
  1FA2  0C            		db	'M'-'A'
  1FA3  C71F          		dw	PLAYM
  1FA5  12            		db	'S'-'A'
  1FA6  DB1F          		dw	PLAYS
  1FA8  0B            		db	'L'-'A'
  1FA9  E71F          		dw	PLAYL
  1FAB  13            		db	'T'-'A'
  1FAC  F91F          		dw	PLAYT
  1FAE  0E            		db	'O'-'A'
  1FAF  0920          		dw	PLAYO
  1FB1  11            		db	'R'-'A'
  1FB2  9520          		dw	PLAYR
  1FB4  0D            		db	'N'-'A'
  1FB5  7620          		dw	PLAYN
                      	
                      	
  1FB7                	PLAYV:
  1FB7  CD5621        		call	GETNUM1
  1FBA  3802          		jr	c,PLAYVNUM
  1FBC  3E08          		ld	a,8
  1FBE                	PLAYVNUM:
  1FBE  FE10          		cp	16
  1FC0  D2E503        		jp	nc,FCERR
  1FC3                	PUTV:
  1FC3  DD7712        		ld	(ix+VOLUME),a
  1FC6  C9            		ret
                      	
  1FC7                	PLAYM:
  1FC7  CD6121        		call	GETNUM2
  1FCA  3803          		jr	c,PLAYMNUM
  1FCC  11FF00        		ld	de,255
  1FCF                	PLAYMNUM:
  1FCF  7A            		ld	a,d
  1FD0  B3            		or	e
  1FD1  CAE503        		jp	z,FCERR
  1FD4  DD7313        		ld	(ix+PERIOD),e
  1FD7  DD7214        		ld	(ix+PERIOD+1),d
  1FDA  C9            		ret
                      	
  1FDB                	PLAYS:
  1FDB  CD5621        		call	GETNUM1
  1FDE  FE10          		cp	10h
  1FE0  D2E503        		jp	nc,FCERR
  1FE3  C610          		add	a,10h
  1FE5  18DC          		jr	PUTV
                      	
  1FE7                	PLAYL:
  1FE7  CD5621        		call	GETNUM1
  1FEA  3802          		jr	c,PLAYLNUM
  1FEC  3E04          		ld	a,4
  1FEE                	PLAYLNUM:
  1FEE  3D            		dec	a
  1FEF  FE40          		cp	64
  1FF1  D2E503        		jp	nc,FCERR
  1FF4  3C            		inc	a
  1FF5  DD7710        		ld	(ix+LENGTH),a
  1FF8  C9            		ret
                      	
  1FF9                	PLAYT:
  1FF9  CD5621        		call	GETNUM1
  1FFC  3802          		jr	c,PLAYTNUM
  1FFE  3E78          		ld	a,120
  2000                	PLAYTNUM:
  2000  FE20          		cp	32
  2002  DAE503        		jp	c,FCERR
  2005  DD7711        		ld	(ix+TEMPO),a
  2008  C9            		ret
                      	
  2009                	PLAYO:
  2009  CD5621        		call	GETNUM1
  200C  3802          		jr	c,PLAYONUM
  200E  3E04          		ld	a,4
  2010                	PLAYONUM:
  2010  3D            		dec	a
  2011  FE08          		cp	8
  2013  D2E503        		jp	nc,FCERR
  2016  3C            		inc	a
  2017  DD770F        		ld	(ix+OCTAVE),a
  201A  C9            		ret
                      	
                      	
                      	;get a character from PLAY string
                      	;output: a,z-flag(1=no character)
                      	;destroy: f,hl
  201B                	PLAYGETC:
  201B  3A17FD        		ld	a,(PLAYLEN)
  201E  B7            		or	a
  201F  C8            		ret	z		;a=0 if no character
  2020  2A18FD        		ld	hl,(PLAYSTR)
  2023  7E            		ld	a,(hl)
  2024  FE20          		cp	' '
  2026  C0            		ret	nz
  2027  CD6A20        		call	PLAYINC
  202A  18EF          		jr	PLAYGETC
                      	
                      	
                      	;scale data
                      	;address probably equals to 6001mkII/6601 ROM (used by BELUGA)
  202C                	_SCALE2:ds	SCALE2-_SCALE2
  2030                		org	SCALE2
                      	
                      	;		c/b+	c+/d-	d	d+/e-	e/f-	f/e+
  2030  E80E120E480D89		dw	0ee8h,	0e12h,	0d48h,	0c89h,	0bd5h,	0b2bh
                      	;		f+/g-	g	g+/a-	a	a+/b-	b/c-
  203C  8A0AF3096409DD		dw	0a8ah,	09f3h,	0964h,	08ddh,	085eh,	07e6h
                      	
                      	
                      	;scale data
  2048                	_SCALE:	ds	SCALE-_SCALE
  204B                		org	SCALE
                      	
                      	;		c/b+	c+/d-	d	d+/e-	e/f-	f/e+
  204B  E80E120E480D89		dw	0ee8h,	0e12h,	0d48h,	0c89h,	0bd5h,	0b2bh
                      	;		f+/g-	g	g+/a-	a	a+/b-	b/c-
  2057  8A0AF3096409DD		dw	0a8ah,	09f3h,	0964h,	08ddh,	085eh,	07e6h
                      	
                      	
  2063                	TONETBL:
                      	;		a   b   c  d  e  f   g
  2063  12160004080A0E		db	18, 22, 0, 4, 8, 10, 14
                      	
                      	
                      	;increment (PLAYSTR) and decrement (PLAYLEN)
                      	;destroy: f,hl
  206A                	PLAYINC:
  206A  2117FD        		ld	hl,PLAYLEN
  206D  35            		dec	(hl)
  206E  2118FD        		ld	hl,PLAYSTR
  2071  34            		inc	(hl)
  2072  C0            		ret	nz
  2073  2C            		inc	l
  2074  34            		inc	(hl)
  2075  C9            		ret
                      	
                      	
  2076                	PLAYN:
  2076  CD5621        		call	GETNUM1
  2079  D2E503        		jp	nc,FCERR
  207C  FE61          		cp	97
  207E  D2E503        		jp	nc,FCERR
  2081  B7            		or	a
  2082  283C          		jr	z,PLAYN0
                      	
  2084  0600          		ld	b,0
  2086                	PLAYNLP:
  2086  04            		inc	b
  2087  D60C          		sub	12
  2089  30FB          		jr	nc,PLAYNLP
  208B  87            		add	a,a
  208C  16FF          		ld	d,0ffh
  208E  5F            		ld	e,a
  208F  216320        		ld	hl,SCALE+24
  2092  19            		add	hl,de
  2093  1859          		jr	GETFREQ
                      	
  2095                	PLAYR:
  2095  AF            		xor	a
  2096  F5            		push	af		;volume
  2097  D5            		push	de		;(tune)
  2098  CD5621        		call	GETNUM1
  209B  3006          		jr	nc,PLAYRNC
  209D  B7            		or	a
  209E  2068          		jr	nz,CHKLEN
  20A0  C3E503        		jp	FCERR
                      	
  20A3                	PLAYRNC:
  20A3  3E04          		ld	a,4
  20A5  1861          		jr	CHKLEN
                      	
                      	;accidental mark
  20A7                	PLAYPLS:
  20A7  CD6A20        		call	PLAYINC
  20AA  1C            		inc	e
  20AB  1C            		inc	e
  20AC  7B            		ld	a,e
  20AD  D618          		sub	24
  20AF  3834          		jr	c,NOACC
  20B1  5F            		ld	e,a		;=0
  20B2  1831          		jr	NOACC
                      	
  20B4                	PLAYMNS:
  20B4  CD6A20        		call	PLAYINC
  20B7  1D            		dec	e
  20B8  1D            		dec	e
  20B9  F2E520        		jp	P,NOACC
  20BC  1E16          		ld	e,22
  20BE  1825          		jr	NOACC
                      	
  20C0                	PLAYN0:
  20C0  AF            		xor	a
  20C1  F5            		push	af		;volume
  20C2  D5            		push	de		;(tune)
                      	
                      	;for compatibility with PC-6001
  20C3  3E50          		ld	a,80
  20C5  1846          		jr	CALCLEN
                      	
                      	
  20C7                	TONE:
  20C7  216320        		ld	hl,TONETBL
  20CA  1600          		ld	d,0
  20CC  5F            		ld	e,a
  20CD  19            		add	hl,de
  20CE  5E            		ld	e,(hl)
  20CF  CD1B20        		call	PLAYGETC
  20D2  2811          		jr	z,NOACC
  20D4  FE2B          		cp	'+'
  20D6  28CF          		jr	z,PLAYPLS
  20D8  FE23          		cp	'#'
  20DA  28CB          		jr	z,PLAYPLS
  20DC  FE2D          		cp	'-'
  20DE  28D4          		jr	z,PLAYMNS
  20E0  FE3D          		cp	'='
  20E2  CAE503        		jp	z,FCERR
                      	
  20E5                	NOACC:
  20E5  DD460F        		ld	b,(ix+OCTAVE)
  20E8  214B20        		ld	hl,SCALE
  20EB  1600          		ld	d,0
  20ED  19            		add	hl,de
  20EE                	GETFREQ:
  20EE  7E            		ld	a,(hl)
  20EF  23            		inc	hl
  20F0  56            		ld	d,(hl)
  20F1  05            		dec	b
  20F2  2805          		jr	z,OCTAVE1
  20F4                	OCTVLP:
  20F4  CB3A          		srl	d
  20F6  1F            		rra
  20F7  10FB          		djnz	OCTVLP
  20F9                	OCTAVE1:
  20F9  5F            		ld	e,a
  20FA  DD7E12        		ld	a,(ix+VOLUME)
                      	
  20FD                	PUSHVOL:
  20FD  F5            		push	af		;volume
  20FE  D5            		push	de		;tune
  20FF  CD5621        		call	GETNUM1
  2102  B7            		or	a
  2103  2003          		jr	nz,CHKLEN
  2105  DD7E10        		ld	a,(ix+LENGTH)
  2108                	CHKLEN:
  2108  FE41          		cp	65
  210A  D2E503        		jp	nc,FCERR
                      	
  210D                	CALCLEN:
                      	;60[s/min]/T[/min]/(L/4)/(8192/3993600[Hz])=117000/T/L
  210D  DD4611        		ld	b,(ix+TEMPO)	;T-value
  2110  CD5E24        		call	MULINT1		;hl=T*L (<=3fc0h)
  2113  1184E4        		ld	de,0e484h	;117000/2
  2116  CD8924        		call	DIVINT2		;bc=(117000/2)/(T*L)*2
  2119  50            		ld	d,b
  211A  59            		ld	e,c
                      	
                      	;dotted note
  211B                	DOTLP:
  211B  CD1B20        		call	PLAYGETC
  211E  FE2E          		cp	'.'
  2120  200C          		jr	nz,NOTDOT
  2122  CD6A20        		call	PLAYINC
  2125  CB38          		srl	b
  2127  CB19          		rr	c
  2129  EB            		ex	de,hl
  212A  09            		add	hl,bc
  212B  EB            		ex	de,hl
  212C  18ED          		jr	DOTLP
  212E                	NOTDOT:
                      	
  212E  F3            		di
  212F  7A            		ld	a,d		;length
  2130  CD310F        		call	PUTPLBF
  2133  7B            		ld	a,e
  2134  CD310F        		call	PUTPLBF
  2137  D1            		pop	de		;tune
  2138  7A            		ld	a,d
  2139  CD310F        		call	PUTPLBF
  213C  7B            		ld	a,e
  213D  CD310F        		call	PUTPLBF
  2140  F1            		pop	af		;volume
  2141  CD310F        		call	PUTPLBF
  2144  FE10          		cp	10h
  2146  380C          		jr	c,PLCMDEND
  2148  DD7E13        		ld	a,(ix+PERIOD)	;period
  214B  CD310F        		call	PUTPLBF
  214E  DD7E14        		ld	a,(ix+PERIOD+1)
  2151  CD310F        		call	PUTPLBF
  2154                	PLCMDEND:
  2154  FB            		ei
  2155  C9            		ret
                      	
                      	
  2156                	GETNUM1:
                      	;output: a,c-flag(1=number)
                      	;destroy: f,bc,de,hl
  2156  CD6121        		call	GETNUM2
  2159  7B            		ld	a,e
  215A  D0            		ret	nc
  215B  14            		inc	d
  215C  15            		dec	d
  215D  C8            		ret	z		;c-flag=1
  215E  C3E503        		jp	FCERR
                      	
                      	
  2161                	GETNUM2:
                      	;output: de,c-flag(1=number)
                      	;destroy: af,bc,de
  2161  CD1B20        		call	PLAYGETC
  2164  110000        		ld	de,0
  2167  C8            		ret	z		;c-flag=0
  2168  FE3D          		cp	'='
  216A  2835          		jr	z,GETNUMEQ
  216C  FE3B          		cp	';'
  216E  282A          		jr	z,GETNUMSEMI
  2170  D630          		sub	'0'
  2172  FE0A          		cp	'9'-'0'+1
  2174  D0            		ret	nc		;c-flag=0
  2175  2A18FD        		ld	hl,(PLAYSTR)
  2178  E5            		push	hl		;
  2179  3A17FD        		ld	a,(PLAYLEN)
  217C  47            		ld	b,a
  217D  CDD127        		call	ATOI2
  2180  2218FD        		ld	(PLAYSTR),hl
  2183  C1            		pop	bc		;
  2184  B7            		or	a
  2185  ED42          		sbc	hl,bc
  2187  3A17FD        		ld	a,(PLAYLEN)
  218A  95            		sub	l
  218B  3217FD        		ld	(PLAYLEN),a
  218E  CD1B20        		call	PLAYGETC
  2191  2805          		jr	z,GETNUMZ
  2193  FE3B          		cp	';'
  2195  CC6A20        		call	z,PLAYINC
  2198                	GETNUMZ:
  2198  37            		scf			;set c-flag
  2199  C9            		ret
                      	
  219A                	GETNUMSEMI:
  219A  CD6A20        		call	PLAYINC
  219D  AF            		xor	a		;reset c-flag
  219E  57            		ld	d,a
  219F  5F            		ld	e,a
  21A0  C9            		ret
                      	
  21A1                	GETNUMEQ:
  21A1  CD6A20        		call	PLAYINC
  21A4  11DAFE        		ld	de,INPBUF
  21A7                	GETNUMEQLP:
  21A7  CD1B20        		call	PLAYGETC
  21AA  CAE503        		jp	z,FCERR
  21AD  CD6A20        		call	PLAYINC
  21B0  CDAF0B        		call	TOUPPER2
  21B3  12            		ld	(de),a
  21B4  13            		inc	de
  21B5  FE3B          		cp	';'
  21B7  20EE          		jr	nz,GETNUMEQLP
                      	
  21B9  21DAFE        		ld	hl,INPBUF
  21BC  46            		ld	b,(hl)
  21BD  78            		ld	a,b
  21BE  D641          		sub	'A'
  21C0  FE1A          		cp	'Z'-'A'+1
  21C2  D2E503        		jp	nc,FCERR
  21C5  23            		inc	hl
  21C6  CD9233        		call	GETNAME
                      	
  21C9  FE24          		cp	'$'
  21CB  CAFD03        		jp	z,TMERR
                      	
  21CE  FE28          		cp	'('
  21D0  2811          		jr	z,GETNUMARR
                      	
  21D2  CDB633        		call	SRCHVAR
  21D5  EB            		ex	de,hl
  21D6  3003          		jr	nc,GETNUMEQNC
  21D8  21AB0E        		ld	hl,ZERO
  21DB                	GETNUMEQNC:
  21DB  CD0A0C        		call	SETF1
  21DE  CDB10C        		call	FTOI
  21E1  37            		scf
  21E2  C9            		ret
                      	
                      	
  21E3                	GETNUMARR:
  21E3  ED5B4EFF      		ld	de,(PROGAD)
  21E7  D5            		push	de
  21E8  CDAE32        		call	GETARR
  21EB  E1            		pop	hl
  21EC  224EFF        		ld	(PROGAD),hl
  21EF  EB            		ex	de,hl
  21F0  18E9          		jr	GETNUMEQNC
                      	
                      	
                      	;STICK() function
  21F2                	F_STCK:
  21F2  CD3207        		call	FNCI1		;a=0
  21F5  83            		add	a,e
  21F6  2813          		jr	z,STCK0		;e=0?
  21F8  FE03          		cp	3
  21FA  D2E503        		jp	nc,FCERR
  21FD  CDA61C        		call	JOYSTK
                      	;exchange bit2 and bit3
  2200  47            		ld	b,a
  2201  E60C          		and	0ch
  2203  78            		ld	a,b
  2204  EA1022        		jp	pe,CNVSTCK
  2207  EE0C          		xor	0ch
  2209  1805          		jr	CNVSTCK
                      	
  220B                	STCK0:
  220B  CD6110        		call	STICK
  220E  0F            		rrca
  220F  0F            		rrca
  2210                	CNVSTCK:
  2210  E60F          		and	0fh
  2212  211E22        		ld	hl,STCKTBL
  2215  85            		add	a,l
  2216  6F            		ld	l,a
  2217  3001          		jr	nc,STCKNC
  2219  24            		inc	h
  221A                	STCKNC:
  221A  6E            		ld	l,(hl)
  221B  C35A0C        		jp	I1TOF
                      	
  221E                	STCKTBL:
                      	;		    u   d   ud  r   ur  dr  udr
  221E  00010500030204		db	0,  1,  5,  0,  3,  2,  4,  3
                      	;		l   ul  dl  udl rl url drl udrl
  2226  07080607000105		db	7,  8,  6,  7,  0,  1,  5,  0
                      	
                      	
                      	;STRIG() function
  222E                	F_STRG:
  222E  CD3207        		call	FNCI1		;a=0
  2231  83            		add	a,e
  2232  2813          		jr	z,STRG0		;e=0?
  2234  FE03          		cp	3
  2236  D2E503        		jp	nc,FCERR
  2239  CDA61C        		call	JOYSTK
  223C  E610          		and	10h
  223E                	STRGEND:
  223E  CA070C        		jp	z,SETZERO
                      	;	jp	SETPLS1
                      	
  2241                	SETPLS1:
  2241  21A10E        		ld	hl,PLSONE
  2244  C30A0C        		jp	SETF1
                      	
  2247                	STRG0:
  2247  CD6110        		call	STICK
  224A  E680          		and	80h
  224C  18F0          		jr	STRGEND
                      	
                      	
                      	;LCOPY command
  224E                	C_LCPY:
  224E  218422        		ld	hl,LCPYHD
  2251  0605          		ld	b,5
  2253                	LCPYLP1:
  2253  7E            		ld	a,(hl)
  2254  CD371A        		call	PRINTER
  2257  23            		inc	hl
  2258  10F9          		djnz	LCPYLP1
                      	
  225A  2A90FD        		ld	hl,(VRAM-1)	;h=(VRAM)
  225D  24            		inc	h
  225E  24            		inc	h
  225F  68            		ld	l,b		;b=0
  2260  3A92FD        		ld	a,(SCREEN1)
  2263  FE02          		cp	2
  2265  3822          		jr	c,LCPYTXT
                      	
  2267                	LCPYGRP:
  2267  110018        		ld	de,1800h
  226A                	LCPYLP2:
  226A  4E            		ld	c,(hl)
  226B  CDD619        		call	SENDGRP
  226E  23            		inc	hl
  226F  1B            		dec	de
  2270  7A            		ld	a,d
  2271  B3            		or	e
  2272  20F6          		jr	nz,LCPYLP2
                      	
  2274                	LCPYEND:
  2274  010020        		ld	bc,2000h
  2277  CD7D22        		call	LCPYLP3
                      	
  227A  010A06        		ld	bc,060ah
  227D                	LCPYLP3:
  227D  79            		ld	a,c
  227E  CD371A        		call	PRINTER
  2281  10FA          		djnz	LCPYLP3
  2283  C9            		ret
                      	
                      	;header for lcopy
  2284                	LCPYHD:
  2284  20200A1DC1    		db	20h, 20h, 0ah, 1dh, 0c1h
                      	
                      	;lcopy text screen
  2289                	LCPYTXT:
  2289  3E04          		ld	a,04h
  228B  D393          		out	(93h),a		;CGROM ON
  228D  3A20FA        		ld	a,(HEIGHT)
  2290  47            		ld	b,a
  2291                	LCPYTLP1:
  2291  C5            		push	bc
  2292  0E0C          		ld	c,0ch
  2294                	LCPYTLP2:
  2294  0620          		ld	b,COLUMNS
  2296                	LCPYTLP3:
  2296  C5            		push	bc
  2297  7E            		ld	a,(hl)
  2298  CDA014        		call	CGROM
  229B  7B            		ld	a,e
  229C  C60C          		add	a,0ch
  229E  91            		sub	c
  229F  5F            		ld	e,a
  22A0  1A            		ld	a,(de)
                      	
  22A1  57            		ld	d,a		;
  22A2  25            		dec	h
  22A3  25            		dec	h
  22A4  7E            		ld	a,(hl)		;attribute
  22A5  24            		inc	h
  22A6  24            		inc	h
  22A7  CB77          		bit	6,a
  22A9  201F          		jr	nz,LCPYSEMI
  22AB  0F            		rrca
  22AC  7A            		ld	a,d		;
  22AD  3001          		jr	nc,NOTREV
  22AF  2F            		cpl
  22B0                	NOTREV:
  22B0  4F            		ld	c,a
  22B1  CDD619        		call	SENDGRP
  22B4  23            		inc	hl
  22B5  C1            		pop	bc
  22B6  10DE          		djnz	LCPYTLP3
                      	
  22B8  0D            		dec	c
  22B9  2806          		jr	z,LCPYTZ
  22BB  11E0FF        		ld	de,0-COLUMNS
  22BE  19            		add	hl,de
  22BF  18D3          		jr	LCPYTLP2
                      	
  22C1                	LCPYTZ:
  22C1  C1            		pop	bc
  22C2  10CD          		djnz	LCPYTLP1
                      	
  22C4  3E05          		ld	a,05h
  22C6  D393          		out	(93h),a		;CGROM OFF
  22C8  18AA          		jr	LCPYEND
                      	
  22CA                	LCPYSEMI:
                      	;c=	9-12	xx**....
                      	;	5-8	xx..**..
                      	;	1-4	xx....**
                      	
  22CA  7E            		ld	a,(hl)
  22CB  0D            		dec	c
  22CC  CB51          		bit	2,c
  22CE  2006          		jr	nz,SEMI58	;c=5-8
  22D0  CB59          		bit	3,c
  22D2  2804          		jr	z,SEMI14	;c=1-4
                      	
  22D4  0F            		rrca
  22D5  0F            		rrca
  22D6                	SEMI58:
  22D6  0F            		rrca
  22D7  0F            		rrca
  22D8                	SEMI14:
  22D8  E603          		and	03h
                      	
                      	;00h->00h, 01h->0fh, 02h->f0h, 03h->ffh
  22DA  1F            		rra			;c-flag=0
  22DB  3002          		jr	nc,SEMINC
  22DD  C61E          		add	a,0fh*2
  22DF                	SEMINC:
  22DF  1F            		rra			;c-flag=0
  22E0  30CE          		jr	nc,NOTREV
  22E2  C6F0          		add	a,0f0h
  22E4  18CA          		jr	NOTREV
                      	
                      	
                      	;KEY command
  22E6                	C_KEY:
  22E6  CDE40D        		call	INT1ARG
  22E9  3D            		dec	a
  22EA  FE0A          		cp	10
  22EC  D2E503        		jp	nc,FCERR
  22EF  113DFB        		ld	de,FKEYTBL
  22F2  87            		add	a,a		;*2
  22F3  87            		add	a,a		;*4
  22F4  87            		add	a,a		;*8
  22F5  83            		add	a,e		;no carry
  22F6  5F            		ld	e,a
  22F7  7E            		ld	a,(hl)
  22F8  FE2C          		cp	','
  22FA  C2DC03        		jp	nz,SNERR
  22FD  D5            		push	de		;
  22FE  23            		inc	hl
  22FF  CD8926        		call	STRARG
  2302  EB            		ex	de,hl
  2303  D1            		pop	de		;
                      	
  2304  01FF08        		ld	bc,08ffh
  2307  3C            		inc	a
  2308                	KEYLP1:
  2308  3D            		dec	a
  2309  2806          		jr	z,KEYLP2
  230B  EDA0          		ldi
  230D  10F9          		djnz	KEYLP1
  230F  1804          		jr	KEYEND
                      	
  2311                	KEYLP2:
  2311  12            		ld	(de),a		;a=0
  2312  13            		inc	de
  2313  10FC          		djnz	KEYLP2
  2315                	KEYEND:
  2315  C3AF12        		jp	PRTFKEY
                      	
                      	
                      	;CSAVE command
  2318                	C_CSV:
  2318  CD8926        		call	STRARG
  231B  B7            		or	a
  231C  CAE503        		jp	z,FCERR
  231F  4F            		ld	c,a
                      	
                      	;write header (d3h*10)
  2320  CDB81A        		call	WOPEN
  2323  3ED3          		ld	a,0d3h
  2325  060A          		ld	b,10
  2327                	CSVLP1:
  2327  CDCC1A        		call	PUTCMT
  232A  10FB          		djnz	CSVLP1
                      	
                      	;file name
  232C  0606          		ld	b,6
                      	
  232E  0C            		inc	c
  232F                	CSVLP2:
  232F  1A            		ld	a,(de)
  2330  0D            		dec	c
  2331  2002          		jr	nz,CSVNZ
  2333  AF            		xor	a
  2334  0C            		inc	c
  2335                	CSVNZ:
  2335  CDCC1A        		call	PUTCMT
  2338  13            		inc	de
  2339  10F4          		djnz	CSVLP2
                      	
                      	;data
  233B                	CSVDATA:
  233B  01B024        		ld	bc,24b0h
  233E  CDE825        		call	WAITLP
                      	
  2341  2A5FFA        		ld	hl,(STARTAD)
  2344  ED5B56FF      		ld	de,(VARAD)
  2348                	CSVLP3:
  2348  7E            		ld	a,(hl)
  2349  CDCC1A        		call	PUTCMT
  234C  23            		inc	hl
  234D  E7            		rst	CPHLDE
  234E  20F8          		jr	nz,CSVLP3
                      	
                      	;footer (00h*9)
  2350  0609          		ld	b,9
  2352                	CSVLP4:
  2352  CDCC1A        		call	PUTCMT		;a=0
  2355  10FB          		djnz	CSVLP4
                      	
  2357  C3061B        		jp	WCLOSE
                      	
                      	
                      	;CLOAD command
  235A                	C_CLD:
  235A  F1            		pop	af		;cancel return address
  235B  AF            		xor	a
  235C  3258FA        		ld	(DEVICE),a
                      	
  235F  4F            		ld	c,a		;file name length
  2360  CD5A3F        		call	SKIPSP
  2363  FE95          		cp	PRINT
  2365  79            		ld	a,c		;=0
  2366  2002          		jr	nz,CLDNZ1
  2368  23            		inc	hl
  2369  2F            		cpl
  236A                	CLDNZ1:
  236A  32D8FE        		ld	(VERIFY),a
  236D  F5            		push	af		;verify?
  236E  CD613F        		call	CHKCLN
  2371  2808          		jr	z,NOTARGET
  2373  CD8926        		call	STRARG
  2376  B7            		or	a
  2377  CAE503        		jp	z,FCERR
  237A  4F            		ld	c,a
  237B                	NOTARGET:
  237B  CD611A        		call	ROPEN
                      	
  237E                	CLDLP1:
  237E  EB            		ex	de,hl
  237F  CD3925        		call	GETFN
  2382  EB            		ex	de,hl
                      	
                      	;compare file name
  2383  79            		ld	a,c
  2384  B7            		or	a
  2385  2815          		jr	z,CLDFND
                      	
  2387  D5            		push	de		;target
                      	
  2388  21D1FE        		ld	hl,FNAME
  238B  0C            		inc	c
  238C  0606          		ld	b,6
  238E                	CLDLP2:
  238E  1A            		ld	a,(de)
  238F  0D            		dec	c
  2390  2002          		jr	nz,CLDNZ2
  2392  AF            		xor	a
  2393  0C            		inc	c
  2394                	CLDNZ2:
  2394  BE            		cp	(hl)
  2395  2041          		jr	nz,CLDSKIP
  2397  23            		inc	hl
  2398  13            		inc	de
  2399  10F3          		djnz	CLDLP2
  239B  D1            		pop	de		;target
                      	
  239C                	CLDFND:
  239C  217625        		ld	hl,FOUND
  239F  CD8325        		call	PRTFN
  23A2  CD9C1A        		call	CHKVRF2
                      	
  23A5  F1            		pop	af		;verify?
  23A6  4F            		ld	c,a		;c=0: not verify
                      	
  23A7  2A5FFA        		ld	hl,(STARTAD)
  23AA                	CLDLP3:
  23AA  060A          		ld	b,10
  23AC                	CLDLP4:
  23AC  EB            		ex	de,hl
  23AD  21FEFF        		ld	hl,0-0002h
  23B0  39            		add	hl,sp
  23B1  E7            		rst	CPHLDE
  23B2  2833          		jr	z,CLDOM		;over memory error
  23B4  EB            		ex	de,hl
  23B5  CD8F1A        		call	GETCMTTR
  23B8  0C            		inc	c
  23B9  0D            		dec	c
  23BA  2803          		jr	z,CLDZ2		;c=0: not verify
  23BC  BE            		cp	(hl)
  23BD  2031          		jr	nz,CLDBAD
  23BF                	CLDZ2:
  23BF  77            		ld	(hl),a
  23C0  23            		inc	hl
  23C1  B7            		or	a
  23C2  20E6          		jr	nz,CLDLP3
  23C4  CD2A1B        		call	BLNKAST
  23C7  10E3          		djnz	CLDLP4
  23C9  CDAA1A        		call	RCLOSE
                      	
  23CC  2256FF        		ld	(VARAD),hl
                      	;	inc	c
                      	;	dec	c
                      	;	call	z,RESSTK	;c=0: not verify
  23CF  CDF934        		call	RESSTK
                      	
  23D2  CDD604        		call	CHGLKP
  23D5  C34504        		jp	EDIT2
                      	
  23D8                	CLDSKIP:
  23D8  217D25        		ld	hl,SKIP
  23DB  CD8325        		call	PRTFN
                      	
                      	;check footer (00h*10)
  23DE  11000A        		ld	de,0a00h
  23E1  CD4E25        		call	CMTSKP
  23E4  D1            		pop	de		;target
  23E5  1897          		jr	CLDLP1
                      	
  23E7                	CLDOM:
  23E7  CDAA1A        		call	RCLOSE
  23EA  CDDC34        		call	NEW
  23ED  C3EB03        		jp	OMERR
                      	
  23F0                	CLDBAD:
  23F0  CDAA1A        		call	RCLOSE
  23F3  21F923        		ld	hl,BAD
  23F6  C3C800        		jp	PUTSEDIT
                      	
  23F9                	BAD:
  23F9  42616400      		db	"Bad", 00h
                      	
                      	
                      	;input by external device
                      	;input: a=(INPDEV), hl=INPBUF-1
                      	;destroy: af,bc,de,hl
  23FD                	INPTEXT:
  23FD  FE02          		cp	2
  23FF  F5            		push	af
  2400  2807          		jr	z,INPT232
  2402  07            		rlca
  2403  D2E503        		jp	nc,FCERR
  2406  CD9A25        		call	INPOPN
  2409                	INPT232:
  2409  21DAFE        		ld	hl,INPBUF
  240C  0647          		ld	b,71
  240E                	INPTEXTLP:
  240E  F1            		pop	af
  240F  F5            		push	af
  2410  2023          		jr	nz,INPTCMT
                      	
  2412  E5            		push	hl
  2413                	INPT232LP:
  2413  3A18FA        		ld	a,(STOPFLG)
  2416  FE03          		cp	03h
  2418  CA5127        		jp	z,STOPSP
  241B  CD4310        		call	GETRSBF
  241E  28F3          		jr	z,INPT232LP
  2420  E1            		pop	hl
  2421                	INPTCHKRET:
  2421  FE0D          		cp	0dh
  2423  2804          		jr	z,INPTEXTEND
  2425  77            		ld	(hl),a
  2426  23            		inc	hl
  2427  10E5          		djnz	INPTEXTLP
                      	
  2429                	INPTEXTEND:
  2429  F1            		pop	af
  242A  C4AA1A        		call	nz,RCLOSE
  242D  3600          		ld	(hl),0
  242F  21D9FE        		ld	hl,INPBUF-1
  2432  C3D809        		jp	INPTANA
                      	
  2435                	INPTCMT:
  2435  CD8F1A        		call	GETCMTTR
  2438  18E7          		jr	INPTCHKRET
                      	
  243A                	EXTRA:
  243A  3F457874726120		db	"?Extra ignored", 0dh, 0ah, 00h
                      	
  244B                	REDO:
  244B  3F5265646F2066		db	"?Redo from start", 0dh, 0ah, 00h
                      	
                      	
                      	;hl=a*b
                      	;input: a,b
                      	;output: hl
                      	;destroy: af,c
  245E                	MULINT1:
  245E  210000        		ld	hl,0000h
  2461  4D            		ld	c,l		;=0
  2462  1801          		jr	MULI1NZ
  2464                	MULI1C:
  2464  09            		add	hl,bc
  2465                	MULI1NZ:
  2465  CB38          		srl	b
  2467  CB19          		rr	c
  2469  87            		add	a,a
  246A  38F8          		jr	c,MULI1C
  246C  20F7          		jr	nz,MULI1NZ
  246E  C9            		ret
                      	
                      	
                      	;dehl=de*hl
                      	;input: de,hl
                      	;output: dehl
                      	;destroy: af,bc
  246F                	MULINT2:
  246F  7C            		ld	a,h
  2470  4D            		ld	c,l
  2471  210000        		ld	hl,0000h
  2474  0610          		ld	b,10h
  2476                	MULI2LP:
  2476  1F            		rra
  2477  CB19          		rr	c
  2479  3001          		jr	nc,MULI2NC
  247B  19            		add	hl,de
  247C                	MULI2NC:
  247C  CB1C          		rr	h
  247E  CB1D          		rr	l
  2480  10F4          		djnz	MULI2LP
  2482  1F            		rra
  2483  CB19          		rr	c
  2485  59            		ld	e,c
  2486  57            		ld	d,a
  2487  EB            		ex	de,hl
  2488  C9            		ret
                      	
                      	
                      	;bc=de/hl*2
                      	;input: de,hl(<8000h)
                      	;output: bc
                      	;destroy: af,de,hl
  2489                	DIVINT2:
  2489  AF            		xor	a
  248A  010002        		ld	bc,0200h	;*2^(b-1)
  248D                	DIVILP1:
  248D  04            		inc	b
  248E  ED6A          		adc	hl,hl		;c-flag=0
  2490  F28D24        		jp	p,DIVILP1
  2493  EB            		ex	de,hl
  2494                	DIVILP2:
  2494  B7            		or	a
  2495  ED52          		sbc	hl,de
  2497  3001          		jr	nc,DIVNC
  2499  19            		add	hl,de
  249A                	DIVNC:
  249A  3F            		ccf
  249B  CB11          		rl	c
  249D  17            		rla
  249E  CB3A          		srl	d
  24A0  CB1B          		rr	e
  24A2  10F0          		djnz	DIVILP2
                      	
  24A4  47            		ld	b,a
  24A5  C9            		ret
                      	
                      	
                      	;add 4-byte integer and 4byte integer
                      	;input: FAC1(integer),FAC2(integer)
                      	;output: FAC1(integer),f
                      	;destroy: de,hl
  24A6                	ADDINT4:
  24A6  2A66FF        		ld	hl,(FAC1)
  24A9  ED5B6DFF      		ld	de,(FAC2)
  24AD  19            		add	hl,de
  24AE  2266FF        		ld	(FAC1),hl
  24B1  2A68FF        		ld	hl,(FAC1+2)
  24B4  ED5B6FFF      		ld	de,(FAC2+2)
  24B8  ED5A          		adc	hl,de
  24BA  2268FF        		ld	(FAC1+2),hl
  24BD  C9            		ret
                      	
                      	
                      	;subtract 4-byte integer from 4byte integer
                      	;input: FAC1(integer),FAC2(integer)
                      	;output: FAC1(integer),f
                      	;destroy: de,hl
  24BE                	SUBINT4:
  24BE  2A66FF        		ld	hl,(FAC1)
  24C1  ED5B6DFF      		ld	de,(FAC2)
  24C5  B7            		or	a
  24C6  ED52          		sbc	hl,de
  24C8  2266FF        		ld	(FAC1),hl
  24CB  2A68FF        		ld	hl,(FAC1+2)
  24CE  ED5B6FFF      		ld	de,(FAC2+2)
  24D2  ED52          		sbc	hl,de
  24D4  2268FF        		ld	(FAC1+2),hl
  24D7  C9            		ret
                      	
                      	
                      	;a=FAC1(int4)/(hl)<=9, FAC1%=(hl), hl+=4
                      	;input: FAC1(integer), hl=division factor (4byte int) address
                      	;output: a=FAC1/(hl4), FAC1=FAC1%(hl4), hl=hl+4, a=[0,9]
                      	;destroy: f,FAC2
  24D8                	DIVINT4:
  24D8  C5            		push	bc
  24D9  D5            		push	de
  24DA  CD180C        		call	SETF2
  24DD  2B            		dec	hl
  24DE  E5            		push	hl
  24DF  AF            		xor	a
  24E0                	DIVINT4LP:
  24E0  3C            		inc	a
  24E1  CDBE24        		call	SUBINT4
  24E4  30FA          		jr	nc,DIVINT4LP
  24E6  3D            		dec	a
  24E7  CDA624        		call	ADDINT4
  24EA  E1            		pop	hl
  24EB  D1            		pop	de
  24EC  C1            		pop	bc
  24ED  C9            		ret
                      	
                      	
                      	;negate 4-byte integer
                      	;input: FAC1(integer)
                      	;output: FAC1(integer), c-flag, z-flag
                      	;destroy: af,hl
  24EE                	NEGINT4:
  24EE  2166FF        		ld	hl,FAC1
  24F1  AF            		xor	a
  24F2  96            		sub	(hl)
  24F3  77            		ld	(hl),a
  24F4  23            		inc	hl
  24F5  3E00          		ld	a,0
  24F7  9E            		sbc	a,(hl)
  24F8  77            		ld	(hl),a
  24F9  23            		inc	hl
  24FA  3E00          		ld	a,0
  24FC  9E            		sbc	a,(hl)
  24FD  77            		ld	(hl),a
  24FE  23            		inc	hl
  24FF  3E00          		ld	a,0
  2501  9E            		sbc	a,(hl)
  2502  77            		ld	(hl),a
  2503  C9            		ret
                      	
                      	
                      	;compare 4-byte integer and 4-byte integer
                      	;input: FAC1(integer), FAC2(integer)
                      	;output: c-flag,z-flag
                      	;destroy: f,de,hl
  2504                	CMPINT4:
  2504  2A68FF        		ld	hl,(FAC1+2)
  2507  ED5B6FFF      		ld	de,(FAC2+2)
  250B  B7            		or	a
  250C  ED52          		sbc	hl,de
  250E  C0            		ret	nz
  250F  2A66FF        		ld	hl,(FAC1)
  2512  ED5B6DFF      		ld	de,(FAC2)
  2516  ED52          		sbc	hl,de
  2518  C9            		ret
                      	
                      	
                      	;decrement 4-byte integer
                      	;input: FAC1
                      	;output: FAC1
                      	;destroy: af,hl
  2519                	DECINT4:
  2519  2A66FF        		ld	hl,(FAC1)
  251C  7C            		ld	a,h
  251D  B5            		or	l		;
  251E  2B            		dec	hl
  251F  2266FF        		ld	(FAC1),hl
  2522  C0            		ret	nz		;
  2523  2A68FF        		ld	hl,(FAC1+2)
  2526  2B            		dec	hl
  2527  2268FF        		ld	(FAC1+2),hl
  252A  C9            		ret
                      	
                      	
                      	;4-byte integer=0?
                      	;output: a(4 bytes OR),z
                      	;destroy: af
  252B                	CHKINT4:
  252B  E5            		push	hl
  252C  2A66FF        		ld	hl,(FAC1)
  252F  7C            		ld	a,h
  2530  B5            		or	l
  2531  2A68FF        		ld	hl,(FAC1+2)
  2534  B4            		or	h
  2535  B5            		or	l
  2536  E1            		pop	hl
  2537  C9            		ret
                      	
                      	
                      	;check cload header and get file name
                      	;destroy: af,b,de (if no error)
  2538                	_GETFN:	ds	GETFN-_GETFN
  2539                		org	GETFN
                      	
                      	;check header (d3h*10)
  2539  11D30A        		ld	de,0ad3h
  253C  CD4E25        		call	CMTSKP
                      	;file name
  253F  11D1FE        		ld	de,FNAME
                      	
  2542  0606          		ld	b,6
  2544                	GETFNLP:
  2544  CD8F1A        		call	GETCMTTR
  2547  12            		ld	(de),a
  2548  13            		inc	de
  2549  10F9          		djnz	GETFNLP
  254B  C9            		ret
                      	
                      	
                      	;skip CMT data
                      	;input: d=count, e=data
                      	;destroy: af,b
  254C                	_CMTSKP:ds	CMTSKP-_CMTSKP
  254E                		org	CMTSKP
                      	
  254E  42            		ld	b,d
  254F                	CMTSKPLP:
  254F  CD8F1A        		call	GETCMTTR
  2552  BB            		cp	e
  2553  20F9          		jr	nz,CMTSKP
  2555  10F8          		djnz	CMTSKPLP
  2557  C9            		ret
                      	
                      	
  2558                	_FOUND:	ds	FOUND-_FOUND
  2576                		org	FOUND
                      	
  2576  466F756E643A00		db	"Found:", 00h
                      	
  257D                	SKIP:
  257D  536B69703A00  		db	"Skip:", 00h
                      	
                      	
                      	;print message and file name
                      	;input: hl=message address
                      	;destroy: af,hl,(bc,de,FAC1)
  2583                	_PRTFN:ds	PRTFN-_PRTFN
  2583                		org	PRTFN
                      	
  2583  CDCF30        		call	PUTS
  2586  21D1FE        		ld	hl,FNAME
  2589  CDCF30        		call	PUTS
  258C  C33927        		jp	PUTNL
                      	
                      	
                      	;CMT open for INPUT #-1
                      	;destroy: af,b
  258F                	_INPOPN:ds	INPOPN-_INPOPN
  259A                		org	INPOPN
                      	
                      	;	ld	a,0ffh
                      	;	ld	(VERIFY),a
                      	;	call	ROPEN
  259A  CD5C1A        		call	VRFOPN
  259D  D5            		push	de
  259E  119C06        		ld	de,069ch
  25A1  CD4E25        		call	CMTSKP
  25A4  D1            		pop	de
  25A5  C9            		ret
                      	
                      	
                      	;CMT open for PRINT #-1
                      	;destroy: a,b
  25A6                	_PRTOPN:ds	PRTOPN-_PRTOPN
  25A8                		org	PRTOPN
                      	
  25A8  CDB81A        		call	WOPEN
  25AB  3E9C          		ld	a,9ch
  25AD  0606          		ld	b,6
  25AF                	PRTOPNLP:
  25AF  CDCC1A        		call	PUTCMT
  25B2  10FB          		djnz	PRTOPNLP
  25B4  C9            		ret
                      	
                      	
                      	;convert intermediate code to command/function ascii characters
                      	;input: a=code
                      	;output: a=first character, hl=address
                      	;destroy: f,b,hl
  25B5                	CNVASC:
  25B5  210C02        		ld	hl,CMDNAME-1
  25B8  FEC2          		cp	TAB
  25BA  3805          		jr	c,CNVASCC
                      	;function
  25BC  21C402        		ld	hl,FNCNAME-1
  25BF  D642          		sub	TAB-80h
                      	
  25C1                	CNVASCC:
  25C1  D67F          		sub	7fh
  25C3  47            		ld	b,a
  25C4                	CNVASCLP:
  25C4  23            		inc	hl
  25C5  7E            		ld	a,(hl)
  25C6  D680          		sub	80h
  25C8  38FA          		jr	c,CNVASCLP
  25CA  10F8          		djnz	CNVASCLP
  25CC  C9            		ret
                      	
                      	
                      	;wait for about 3.5s
                      	;destroy: af,bc
  25CD                	_WAIT:	ds	WAIT-_WAIT
  25E5                		org	WAIT
                      	
  25E5  010000        		ld	bc,0
                      	;25e8
  25E8                	WAITLP:
  25E8  3A18FA        		ld	a,(STOPFLG)
  25EB  FE03          		cp	03h
  25ED  C8            		ret	z
                      	
  25EE  F1            		pop	af		;waste time
  25EF  F5            		push	af		;waste time
                      	
  25F0  0B            		dec	bc
  25F1  78            		ld	a,b
  25F2  B1            		or	c
  25F3  C8            		ret	z
  25F4  18F2          		jr	WAITLP
                      	
                      	
                      	;EXEC command
  25F6                	C_EXEC:
  25F6  CD6F0B        		call	NUMARGMO
  25F9  CDB10C        		call	FTOI
                      	
                      	;for compatibility with N60-BASIC
  25FC  2A4EFF        		ld	hl,(PROGAD)
  25FF  EB            		ex	de,hl
  2600  7C            		ld	a,h
  2601  B5            		or	l
  2602  ED44          		neg		;set c-flag if hl<>0
  2604  D5            		push	de
  2605  CDA507        		call	JPHL
  2608  D1            		pop	de
  2609  C9            		ret
                      	
                      	
                      	;get a character from buffer
                      	;input: hl=buffer map address
                      	;output: a,z-flag(1=no input)
                      	;destroy: f,hl
  260A                	GETBF:
  260A  7E            		ld	a,(hl)		;in
  260B  2C            		inc	l		;inc hl
  260C  BE            		cp	(hl)		;out
  260D  C8            		ret	z
  260E  7E            		ld	a,(hl)
  260F  3C            		inc	a
  2610  2C            		inc	l		;inc hl
  2611  2C            		inc	l		;inc hl
  2612  A6            		and	(hl)		;size
  2613  2D            		dec	l		;dec hl
  2614  2D            		dec	l		;dec hl
  2615  77            		ld	(hl),a		;out
  2616  2C            		inc	l		;inc hl
  2617  2C            		inc	l		;inc hl
  2618  2C            		inc	l		;inc hl
  2619  86            		add	a,(hl)		;hl=(buffer address)+a
  261A  2C            		inc	l		;inc hl, l>0, reset z-flag
  261B  66            		ld	h,(hl)
  261C  6F            		ld	l,a
  261D  3001          		jr	nc,GETBFNC
  261F  24            		inc	h		;h>0, reset z-flag
  2620                	GETBFNC:
  2620  7E            		ld	a,(hl)
  2621  C9            		ret
                      	
                      	
                      	;input: a=length, hl=string address
                      	;destroy: af,bc,de,hl
  2622                	MAKESTR:
  2622  322DFF        		ld	(STRDSC1),a
  2625  222FFF        		ld	(STRDSC1+2),hl
  2628  AF            		xor	a
  2629  1803          		jr	ADDSTR2
                      	
                      	;input: STRDSC1, STRDSC4
                      	;destroy: af,bc,de,hl
  262B                	ADDSTR:
  262B  3A39FF        		ld	a,(STRDSC4)
  262E                	ADDSTR2:
  262E  47            		ld	b,a		;;
  262F  3A2DFF        		ld	a,(STRDSC1)
  2632  4F            		ld	c,a		;
  2633  80            		add	a,b		;c+b
  2634  DA0304        		jp	c,LSERR		;over 255 characters
                      	
  2637  CD6526        		call	GCCHECK
  263A  223DFF        		ld	(STRAD),hl
  263D  23            		inc	hl
  263E  EB            		ex	de,hl
  263F  2A2FFF        		ld	hl,(STRDSC1+2)
  2642  ED532FFF      		ld	(STRDSC1+2),de
                      	
  2646  78            		ld	a,b		;;
  2647  81            		add	a,c		;
  2648  322DFF        		ld	(STRDSC1),a
  264B  90            		sub	b		;c=0?
                      	
  264C  78            		ld	a,b
  264D  0600          		ld	b,00h
  264F  2802          		jr	z,ADDSZ1
  2651  EDB0          		ldir
  2653                	ADDSZ1:
  2653  B7            		or	a
  2654  2806          		jr	z,ADDSZ2
  2656  4F            		ld	c,a		;b=0
  2657  2A3BFF        		ld	hl,(STRDSC4+2)
  265A  EDB0          		ldir
  265C                	ADDSZ2:
  265C  AF            		xor	a
  265D  3239FF        		ld	(STRDSC4),a
  2660  3C            		inc	a
  2661  3225FF        		ld	(ARGTYP),a	;=1
  2664  C9            		ret
                      	
                      	
                      	;check string area and call GC if necessary
                      	;input: a=new string length
                      	;output: hl=new (STRAD)+1
                      	;destroy: af,de
  2665                	GCCHECK:
  2665  C5            		push	bc
  2666  1600          		ld	d,00h
  2668  5F            		ld	e,a
  2669  D5            		push	de
  266A  CD7D26        		call	CHKSAREA
  266D  D1            		pop	de
  266E  300B          		jr	nc,GCCHECKOK
  2670  D5            		push	de
  2671  CD0F31        		call	GC
  2674  D1            		pop	de
  2675  CD7D26        		call	CHKSAREA
  2678  DA0004        		jp	c,OSERR
  267B                	GCCHECKOK:
  267B  C1            		pop	bc
  267C  C9            		ret
                      	
                      	;check string area
  267D                	CHKSAREA:
  267D  2A3DFF        		ld	hl,(STRAD)
  2680  B7            		or	a
  2681  ED52          		sbc	hl,de
  2683  ED5B5BFA      		ld	de,(STACK)
  2687  E7            		rst	CPHLDE
  2688  C9            		ret
                      	
                      	
                      	;get a string argument
                      	;input: hl=program address
                      	;output: a=length, de=string address, hl=next address, z-flag(1=ok)
                      	;destroy: f,bc,FAC1,FAC2
  2689                	STRARG:
  2689  CD613F        		call	CHKCLN
  268C  CA1204        		jp	z,MOERR
  268F  CD3D17        		call	ARG
  2692                	STRARG2:
  2692  EB            		ex	de,hl
  2693  CD840B        		call	CHKSTR
                      	;get string pointer
  2696  23            		inc	hl
  2697  23            		inc	hl
  2698  46            		ld	b,(hl)
  2699  23            		inc	hl
  269A  66            		ld	h,(hl)
  269B  68            		ld	l,b
  269C  EB            		ex	de,hl
  269D  C9            		ret
                      	
                      	
                      	;get string,integer argument
                      	;input: hl=program address
                      	;output: STRDSC1, a=length, hl=string address, FAC1,de=integer
                      	;destroy: FAC1, FAC2, f,bc
  269E                	ARGSI1:
  269E  CD920B        		call	CHKLPAR
  26A1  CD8926        		call	STRARG
  26A4  F5            		push	af
  26A5  322DFF        		ld	(STRDSC1),a	;length
  26A8  ED532FFF      		ld	(STRDSC1+2),de	;string address
  26AC  7E            		ld	a,(hl)
  26AD  FE2C          		cp	','
  26AF  C2DC03        		jp	nz,SNERR
  26B2  CDBA26        		call	ARGI1
  26B5  2A2FFF        		ld	hl,(STRDSC1+2)	;string address
  26B8  F1            		pop	af		;length
  26B9  C9            		ret
                      	
                      	
                      	;protect string descriptor and get integer argument
                      	;input: hl=program address
                      	;output: FAC1,de=integer
                      	;destroy: FAC1, FAC2, af, bc, de
  26BA                	ARGI1:
  26BA  E5            		push	hl		;program address
  26BB  CDB019        		call	COPYSTR
  26BE  E1            		pop	hl
  26BF  CDE30D        		call	INT1INC
  26C2  C3C419        		jp	BACKSTR
                      	
                      	
                      	;put a character in device
                      	;input: a=character code, (DEVICE)=0:CRT, 1:printer, 2:RS-232C, 80h-ffh:CMT
                      	;destroy: af
  26C5                	_PUTDEV:ds	PUTDEV-_PUTDEV
  26C7                		org	PUTDEV
                      	
  26C7  F5            		push	af
  26C8  3A58FA        		ld	a,(DEVICE)
  26CB  B7            		or	a
  26CC  2834          		jr	z,PUTCRT
  26CE  FACD1A        		jp	m,PUTCMT2
  26D1  3D            		dec	a
  26D2  2805          		jr	z,PUTPRT2
  26D4  3D            		dec	a
  26D5  282F          		jr	z,PUT232
  26D7  F1            		pop	af
  26D8  C9            		ret
                      	
                      	
  26D9                	PUTPRT2:
  26D9  F1            		pop	af
  26DA  FE09          		cp	09h
  26DC  2812          		jr	z,PUTPRTTAB
  26DE                	PUTPRT3:
  26DE  F5            		push	af
  26DF  CD1C1A        		call	PUTPRT
  26E2  F1            		pop	af
  26E3  D60D          		sub	0dh
  26E5  2805          		jr	z,PUTPRTZ	;a=0 if CR
  26E7  D8            		ret	c
  26E8  3A57FA        		ld	a,(PRTPOS)
  26EB  3C            		inc	a
  26EC                	PUTPRTZ:
  26EC  3257FA        		ld	(PRTPOS),a
  26EF  C9            		ret
                      	
                      	
  26F0                	PUTPRTTAB:
  26F0  C5            		push	bc
  26F1  3A57FA        		ld	a,(PRTPOS)
  26F4  2F            		cpl
  26F5  E607          		and	07h
  26F7  3C            		inc	a
  26F8  47            		ld	b,a
  26F9                	PUTPRTTABLP:
  26F9  3E20          		ld	a,' '
  26FB  CDDE26        		call	PUTPRT3
  26FE  10F9          		djnz	PUTPRTTABLP
  2700  C1            		pop	bc
  2701  C9            		ret
                      	
                      	
  2702                	PUTCRT:
  2702  F1            		pop	af
  2703  C37510        		jp	PUTC
                      	
                      	
                      	;input: a
                      	;output: none
                      	;destroy: af
  2706                	PUT232:
  2706  3E17          		ld	a,17h		;RTS=0
  2708  D381          		out	(81h),a
                      	
  270A                	PUT232LP:
  270A  DB81          		in	a,(81h)
  270C  2F            		cpl
  270D  E681          		and	81h
  270F  280C          		jr	z,PUT232Z	;if DSR=1, TxRDY=1
                      	
  2711  3A18FA        		ld	a,(STOPFLG)
  2714  FE03          		cp	03h
  2716  20F2          		jr	nz,PUT232LP
                      	;stop
  2718  CD2027        		call	PUT232END
  271B  1834          		jr	STOPSP
                      	
  271D                	PUT232Z:
  271D  F1            		pop	af
  271E  D380          		out	(80h),a
  2720                	PUT232END:
  2720  3E37          		ld	a,37h		;RTS=1
  2722  D381          		out	(81h),a
  2724  C9            		ret
                      	
                      	
                      	;put new line
                      	;destroy: af
  2725                	_PUTNL:	ds	PUTNL-_PUTNL
  2739                		org	PUTNL
                      	
  2739  3E0D          		ld	a,0dh
  273B  CDC726        		call	PUTDEV
  273E  3E0A          		ld	a,0ah
  2740  C3C726        		jp	PUTDEV
                      	
                      	
                      	;STOP and ESC
                      	;destroy: af
  2743                	_STOPESC:ds	STOPESC-_STOPESC
  274D                		org	STOPESC
                      	
  274D  CD5B27        		call	CHKSTOP
  2750  C0            		ret	nz
                      	;	jp	STOPSP
                      	
                      	;reset sp and stop
  2751                	STOPSP:
  2751  ED7B5BFA      		ld	sp,(STACK)
  2755  21FFFF        		ld	hl,0ffffh
  2758  C33B35        		jp	STOP2
                      	
                      	
                      	;check STOP/ESC
                      	;output: z-flag (1=STOP)
                      	;destroy: af
  275B                	CHKSTOP:
  275B  3A18FA        		ld	a,(STOPFLG)
  275E  FE03          		cp	03h
  2760  C8            		ret	z
  2761  FE1B          		cp	1bh
  2763  C0            		ret	nz
  2764  CDBC0F        		call	GETCH		;cancel ESC
  2767                	CHKSTLP:
  2767  3A18FA        		ld	a,(STOPFLG)
  276A  FE1B          		cp	1bh
  276C  28F9          		jr	z,CHKSTLP
  276E  CDBC0F        		call	GETCH		;ESC end
  2771  18E8          		jr	CHKSTOP
                      	
                      	
                      	;get device number
                      	;in	out
                      	;#0	0	CRT
                      	;#-1	80h	CMT
                      	;#-2	2	RS-232C
                      	;#-3	1	printer
                      	;input: hl=program address
                      	;output: a, hl,(PROGAD)=next address
                      	;destroy: f,bc,de
  2773                	DEVNUM:
  2773  CD5A3F        		call	SKIPSP
  2776  FE23          		cp	'#'
  2778  3E00          		ld	a,0
  277A  C0            		ret	nz
                      	
  277B  23            		inc	hl
  277C  CD1B0E        		call	INT2ARG
  277F  E5            		push	hl
  2780  1B            		dec	de
  2781  210400        		ld	hl,4
  2784  19            		add	hl,de
  2785  D2E503        		jp	nc,FCERR
  2788  7D            		ld	a,l
  2789  3C            		inc	a
  278A  FE03          		cp	3
  278C  3803          		jr	c,DEVNUMC	;#-2,#-3
  278E  E601          		and	01h
  2790  0F            		rrca
  2791                	DEVNUMC:
  2791  E1            		pop	hl
  2792  F5            		push	af
  2793  CD6C3F        		call	CHKCMM
  2796  C2DC03        		jp	nz,SNERR
  2799  224EFF        		ld	(PROGAD),hl
  279C  F1            		pop	af
  279D  C9            		ret
                      	
                      	
                      	;INKEY$
  279E                	F_INKY:
  279E  217D18        		ld	hl,FNCRTN
  27A1  E5            		push	hl
                      	
  27A2  CDBC0F        		call	GETCH
  27A5  2827          		jr	z,INKYZ
                      	
  27A7  FE03          		cp	03h
  27A9  2823          		jr	z,INKYZ
  27AB  FE1B          		cp	1bh
  27AD  281F          		jr	z,INKYZ
                      	
  27AF  47            		ld	b,a		;
  27B0                	INKYNZ:
  27B0  3E01          		ld	a,01h
  27B2  CD6526        		call	GCCHECK
  27B5  223DFF        		ld	(STRAD),hl
  27B8  23            		inc	hl
  27B9  70            		ld	(hl),b		;
  27BA  222FFF        		ld	(STRDSC1+2),hl
  27BD  3E01          		ld	a,01h
  27BF                	INKYLEN:
  27BF  322DFF        		ld	(STRDSC1),a
                      	
  27C2                	INKYEND:
  27C2  212DFF        		ld	hl,STRDSC1
  27C5  2267FF        		ld	(FAC1+1),hl
  27C8  3E01          		ld	a,01h
  27CA  3225FF        		ld	(ARGTYP),a
  27CD  C9            		ret
                      	
  27CE                	INKYZ:
  27CE  AF            		xor	a
  27CF  18EE          		jr	INKYLEN
                      	
                      	
                      	;convert string to 2-byte integer (unsigned)
                      	;input: hl=program address, b=string length
                      	;output: de=integer, hl=next address
                      	;destroy: af,bc
  27D1                	ATOI2:
  27D1  110000        		ld	de,0
  27D4  2B            		dec	hl
  27D5                	ATOI2LP:
  27D5  23            		inc	hl
  27D6  7E            		ld	a,(hl)
  27D7  FE20          		cp	' '
  27D9  28FA          		jr	z,ATOI2LP
  27DB  D630          		sub	'0'
  27DD  FE0A          		cp	'9'-'0'+1
  27DF  D0            		ret	nc
                      	
  27E0  E5            		push	hl
                      	
  27E1  2166E6        		ld	hl,0-6554
  27E4  19            		add	hl,de
  27E5  3813          		jr	c,ATOI2END
                      	
  27E7  62            		ld	h,d
  27E8  6B            		ld	l,e
  27E9  29            		add	hl,hl
  27EA  29            		add	hl,hl
  27EB  19            		add	hl,de
  27EC  29            		add	hl,hl
                      	
  27ED  85            		add	a,l
  27EE  6F            		ld	l,a
  27EF  3003          		jr	nc,ATOI2NC
  27F1  24            		inc	h
  27F2  2806          		jr	z,ATOI2END
                      	
  27F4                	ATOI2NC:
  27F4  EB            		ex	de,hl
  27F5  E1            		pop	hl
  27F6  10DD          		djnz	ATOI2LP
  27F8  23            		inc	hl
  27F9  C9            		ret
                      	
  27FA                	ATOI2END:
  27FA  E1            		pop	hl
  27FB  C9            		ret
                      	
                      	
                      	;convert string to float (integer part)
                      	;input: b=length, hl=program address
                      	;output: FAC1, hl=next address, b=remained length, d=sign(0=plus, 1=minus)
                      	;destroy: FAC2, af,de
  27FC                	ATOIF:
  27FC  78            		ld	a,b		;
  27FD  E5            		push	hl
  27FE  CD070C        		call	SETZERO
  2801  E1            		pop	hl
  2802  47            		ld	b,a		;
  2803  1600          		ld	d,0		;sign
                      	
  2805                	ATOIFLP1:
  2805  CD893A        		call	SKIPSPB
  2808  C8            		ret	z		;all space
                      	
  2809  05            		dec	b
  280A  FE2B          		cp	'+'
  280C  2810          		jr	z,ATOIFLP2
  280E  FECA          		cp	PLUS
  2810  280C          		jr	z,ATOIFLP2
  2812  14            		inc	d
  2813  FE2D          		cp	'-'
  2815  2807          		jr	z,ATOIFLP2
  2817  FECB          		cp	MINUS
  2819  2803          		jr	z,ATOIFLP2
  281B  04            		inc	b
  281C  15            		dec	d
  281D  2B            		dec	hl
  281E                	ATOIFLP2:
  281E  CD2528        		call	CTOF
  2821  D0            		ret	nc
  2822  10FA          		djnz	ATOIFLP2
  2824  C9            		ret
                      	
                      	
                      	;FAC1 = FAC1 * 10 + [0-9]
                      	;input: FAC1, hl=program address, b=length(>0), d=sign(0=plus, 1=minus)
                      	;output: FAC1, c-flag(1=OK), b=remained length(for space), hl=next address
                      	;destroy: FAC2,af
  2825                	CTOF:
  2825  CD893A        		call	SKIPSPB
  2828  2B            		dec	hl
  2829  C8            		ret	z
                      	
  282A  D630          		sub	'0'
  282C  FE0A          		cp	'9'-'0'+1
  282E  D0            		ret	nc
  282F  23            		inc	hl
  2830  E5            		push	hl		;program address
                      	
  2831  D5            		push	de
  2832  C5            		push	bc
  2833  F5            		push	af
  2834  CD1939        		call	ABS
  2837  CD9037        		call	MULF10
  283A  CD5B39        		call	CPYFAC
  283D  F1            		pop	af
  283E  CD590C        		call	I1TOFA
  2841  CD8F36        		call	ADDF
  2844  C1            		pop	bc
  2845  D1            		pop	de
                      	
  2846  7A            		ld	a,d
  2847  0F            		rrca
  2848  DC2C0D        		call	c,NEGABS2
                      	
  284B  E1            		pop	hl		;program address
  284C  37            		scf
  284D  C9            		ret
                      	
                      	
                      	;insert a character
                      	;input: a=data (for checking BELL)
                      	;output: hl=VRAM address
                      	;destroy: f,bc,de
  284E                	INSERT:
  284E  FE07          		cp	07h
  2850  2005          		jr	nz,INSNZ
  2852  CD7510        		call	PUTC
  2855  3E20          		ld	a,' '
  2857                	INSNZ:
  2857  F5            		push	af
                      	
  2858  2AAAFD        		ld	hl,(CSRAD)
                      	
  285B  CDCE28        		call	GETSCRC
  285E  47            		ld	b,a		;
                      	
  285F  23            		inc	hl
  2860  CD4B15        		call	CHKLINE
  2863  201B          		jr	nz,INSSCRL
                      	
  2865  CDF515        		call	CNVATT1
  2868  4F            		ld	c,a
                      	
  2869                	INSLP:
  2869  CDCE28        		call	GETSCRC
  286C  25            		dec	h
  286D  25            		dec	h
  286E  71            		ld	(hl),c
  286F  24            		inc	h
  2870  24            		inc	h
                      	
  2871  70            		ld	(hl),b
  2872  47            		ld	b,a
  2873  23            		inc	hl
  2874  CD4B15        		call	CHKLINE
  2877  28F0          		jr	z,INSLP
                      	
  2879  78            		ld	a,b
  287A  FE20          		cp	' '
  287C  2002          		jr	nz,INSSCRL
  287E  F1            		pop	af
  287F  C9            		ret
                      	
                      	
  2880                	INSSCRL:
  2880  E5            		push	hl
                      	
  2881  CD3313        		call	AD2XY
                      	
  2884  3AA5FD        		ld	a,(LASTLIN)
  2887  BD            		cp	l
  2888  381F          		jr	c,INSSCRLU
                      	
  288A  67            		ld	h,a		;(LASTLIN)
  288B  2835          		jr	z,NOSCRLD
  288D  CDA912        		call	SCRLDW
                      	
  2890                	INSSCRLEND:
  2890  4D            		ld	c,l		;;
  2891  2D            		dec	l
  2892  AF            		xor	a
                      	
  2893                	INSSCRLEND2:
  2893  CD6715        		call	SETLINE
  2896  69            		ld	l,c		;;
  2897  CDB811        		call	Y2AD
  289A  CDDA11        		call	DELLIN
  289D  E1            		pop	hl
                      	
  289E  25            		dec	h
  289F  25            		dec	h
  28A0  CDF515        		call	CNVATT1
  28A3  77            		ld	(hl),a
  28A4  24            		inc	h
  28A5  24            		inc	h
                      	
  28A6  70            		ld	(hl),b		;
  28A7  F1            		pop	af
  28A8  C9            		ret
                      	
  28A9                	INSSCRLU:
  28A9  E1            		pop	hl
  28AA  11E0FF        		ld	de,0-COLUMNS
  28AD  19            		add	hl,de
  28AE  E5            		push	hl
                      	
  28AF  6F            		ld	l,a		;(LASTLIN)
  28B0  3E1E          		ld	a,1eh		;up
  28B2  CD7510        		call	PUTC
                      	
  28B5  3AA2FD        		ld	a,(CONSOL1)
  28B8  67            		ld	h,a
  28B9  95            		sub	l
  28BA  4D            		ld	c,l
  28BB  280B          		jr	z,NOSCRLU	;a=0
                      	
  28BD  CD6012        		call	SCRLUP
  28C0  18CE          		jr	INSSCRLEND
                      	
  28C2                	NOSCRLD:
  28C2  AF            		xor	a
  28C3  32A4FE        		ld	(INPTXY),a	;scroll out
  28C6  18C8          		jr	INSSCRLEND
                      	
  28C8                	NOSCRLU:
                      	;	xor	a
  28C8  32A4FE        		ld	(INPTXY),a	;scroll out
  28CB  3C            		inc	a
  28CC  18C5          		jr	INSSCRLEND2
                      	
                      	
                      	;get character from screen
                      	;input: hl
                      	;output: a
                      	;destroy: f
  28CE                	GETSCRC:
  28CE  7E            		ld	a,(hl)
  28CF  25            		dec	h
  28D0  25            		dec	h
  28D1  CB76          		bit	6,(hl)
  28D3  2802          		jr	z,GETSCRCZ
  28D5  3E20          		ld	a,' '
  28D7                	GETSCRCZ:
  28D7  24            		inc	h
  28D8  24            		inc	h
  28D9  C9            		ret
                      	
                      	
                      	;one line input
                      	;output: hl=INPBUF-1, c-flag(1=stop)
                      	;destroy: af,bc,de
  28DA                	_INPT1:	ds	INPT1-_INPT1
  28F9                		org	INPT1
                      	
  28F9  2AA8FD        		ld	hl,(CSRY)
  28FC  22A5FE        		ld	(INPTX-1),hl	;h=end position for INPUT command
  28FF  22A4FE        		ld	(INPTXY),hl	;initial position for INPUT command
  2902  3AABFD        		ld	a,(CSRAD+1)
  2905  32A7FE        		ld	(INPTPAG),a	;page for INPUT command
                      	
  2908                	INPT1LP:
  2908  CDC40F        		call	GETC
  290B  CD1029        		call	INPT1CMD
  290E  18F8          		jr	INPT1LP
                      	
                      	
                      	;one line input main routine
  2910                	INPT1CMD:
  2910  FE20          		cp	20h
  2912  3832          		jr	c,INPT1CTL
                      	
  2914  2AA8FE        		ld	hl,(INSMODE)
  2917  2C            		inc	l
  2918  2D            		dec	l
  2919  C44E28        		call	nz,INSERT
                      	
  291C                	INPT1PUTC:
  291C  CD7510        		call	PUTC
                      	
  291F                	CHKIPOS2:
  291F  2AAAFD        		ld	hl,(CSRAD)
                      	
                      	;check cursor position for input command
                      	;input: hl=cursor address
                      	;output: hl=cursor XY, de=cursor address
                      	;destroy: af
  2922                	CHKIPOS:
  2922  54            		ld	d,h
  2923  5D            		ld	e,l
  2924  CD3313        		call	AD2XY
  2927  3AA4FE        		ld	a,(INPTXY)	;y+1
  292A  BD            		cp	l
  292B  C0            		ret	nz
                      	
  292C  3AA6FE        		ld	a,(INPTX)
  292F  BC            		cp	h
  2930  3004          		jr	nc,IPOSNC
  2932  7C            		ld	a,h
  2933  32A6FE        		ld	(INPTX),a
  2936                	IPOSNC:
  2936  3AA5FE        		ld	a,(INPTXY+1)	;x+1
  2939  BC            		cp	h
  293A  D8            		ret	c
                      	
  293B  3AA7FE        		ld	a,(INPTPAG)
  293E  AA            		xor	d
  293F  E6F0          		and	0f0h
  2941  C0            		ret	nz
                      	
  2942  22A4FE        		ld	(INPTXY),hl
  2945  C9            		ret
                      	
                      	
                      	;control code
  2946                	INPT1CTL:
  2946  21162B        		ld	hl,NOINSTBL
  2949  010C00        		ld	bc,12
  294C  EDB1          		cpir
  294E  2004          		jr	nz,INPT1CMDNZ
  2950  21A8FE        		ld	hl,INSMODE
  2953  70            		ld	(hl),b		;b=0
  2954                	INPT1CMDNZ:
  2954  2AAAFD        		ld	hl,(CSRAD)
                      	
  2957  FE02          		cp	02h
  2959  CADA29        		jp	z,INPT1CTLB
  295C  FE03          		cp	03h
  295E  CA6C2A        		jp	z,INPT1STOP
  2961  FE05          		cp	05h
  2963  2864          		jr	z,INPT1CTLE
  2965  FE06          		cp	06h
  2967  CAFC29        		jp	z,INPT1CTLF
  296A  FE08          		cp	08h
  296C  2824          		jr	z,INPT1DEL
  296E  FE09          		cp	09h
  2970  CA4E2A        		jp	z,INPT1TAB
  2973  FE0A          		cp	0ah
  2975  CA272A        		jp	z,INPT1CTLJ
  2978  FE0D          		cp	0dh
  297A  CA8E2A        		jp	z,INPT1RET
  297D  FE12          		cp	12h
  297F  280A          		jr	z,INPT1INS
  2981  FE14          		cp	14h
  2983  2897          		jr	z,INPT1PUTC
  2985  FE15          		cp	15h
  2987  283B          		jr	z,INPT1CTLU
  2989  1891          		jr	INPT1PUTC	;1ch,1dh,1eh,1fh
                      	
                      	
  298B                	INPT1INS:
  298B  21A8FE        		ld	hl,INSMODE
  298E  7E            		ld	a,(hl)
  298F  2F            		cpl
  2990  77            		ld	(hl),a
  2991  C9            		ret
                      	
                      	
  2992                	INPT1DEL:
  2992  CD4B15        		call	CHKLINE
  2995  C0            		ret	nz
  2996  E5            		push	hl
  2997  21BF29        		ld	hl,DELSTR
  299A  CDCF30        		call	PUTS
  299D  CD1F29        		call	CHKIPOS2
  29A0  D1            		pop	de
  29A1  62            		ld	h,d
  29A2  6B            		ld	l,e
  29A3  1B            		dec	de
  29A4  CDF515        		call	CNVATT1
  29A7  4F            		ld	c,a
  29A8                	DELLP:
  29A8  CDCE28        		call	GETSCRC
  29AB  12            		ld	(de),a
                      	
  29AC  25            		dec	h
  29AD  25            		dec	h
  29AE  71            		ld	(hl),c
  29AF  24            		inc	h
  29B0  24            		inc	h
                      	
  29B1  13            		inc	de
  29B2  23            		inc	hl
                      	
  29B3  CD4B15        		call	CHKLINE
  29B6  28F0          		jr	z,DELLP
                      	
  29B8  2B            		dec	hl
  29B9  3620          		ld	(hl),' '
  29BB  25            		dec	h
  29BC  25            		dec	h
  29BD  71            		ld	(hl),c
                      	
  29BE  C9            		ret
                      	
  29BF                	DELSTR:
  29BF  1D201D00      		db	1dh, ' ', 1dh, 00h
                      	
                      	
  29C3                	CTLULP:
  29C3  2B            		dec	hl
  29C4                	INPT1CTLU:
  29C4  CD4B15        		call	CHKLINE
  29C7  28FA          		jr	z,CTLULP
                      	
  29C9                	INPT1CTLE:
  29C9  25            		dec	h
  29CA  25            		dec	h
  29CB  CDF515        		call	CNVATT1
  29CE  77            		ld	(hl),a
  29CF  24            		inc	h
  29D0  24            		inc	h
  29D1  3620          		ld	(hl),' '
  29D3  23            		inc	hl
  29D4  CD4B15        		call	CHKLINE
  29D7  28F0          		jr	z,INPT1CTLE
  29D9  C9            		ret
                      	
                      	
  29DA                	INPT1CTLB:
  29DA  CDEB29        		call	CHKCTLB
  29DD  30FB          		jr	nc,INPT1CTLB
  29DF                	CTLBLP:
  29DF  CDEB29        		call	CHKCTLB
  29E2  38FB          		jr	c,CTLBLP
  29E4  23            		inc	hl
  29E5  CD2229        		call	CHKIPOS
  29E8  C36D11        		jp	SETCSR
                      	
  29EB                	CHKCTLB:
  29EB  2B            		dec	hl
  29EC  54            		ld	d,h
  29ED  5D            		ld	e,l
  29EE  CD3313        		call	AD2XY
  29F1  3AA2FD        		ld	a,(CONSOL1)
  29F4  2C            		inc	l
  29F5  BD            		cp	l
  29F6  3821          		jr	c,CTLBC
  29F8                	CTLBNC:
  29F8  F1            		pop	af		;cancel return address
  29F9  C34C11        		jp	CTLCR
                      	
                      	
  29FC                	INPT1CTLF:
  29FC  CD0D2A        		call	CHKCTLF
  29FF  38FB          		jr	c,INPT1CTLF
  2A01                	CTLFLP:
  2A01  CD0D2A        		call	CHKCTLF
  2A04  30FB          		jr	nc,CTLFLP
  2A06  EB            		ex	de,hl
  2A07  CD6D11        		call	SETCSR
  2A0A  C31F29        		jp	CHKIPOS2
                      	
  2A0D                	CHKCTLF:
  2A0D  23            		inc	hl
  2A0E  54            		ld	d,h
  2A0F  5D            		ld	e,l
  2A10  CD3313        		call	AD2XY
  2A13  3AA5FD        		ld	a,(LASTLIN)
  2A16  BD            		cp	l
  2A17  3807          		jr	c,CTLFC
  2A19                	CTLBC:
  2A19  EB            		ex	de,hl
  2A1A  CDCE28        		call	GETSCRC
  2A1D  C3B50B        		jp	ALPNUM2
                      	
  2A20                	CTLFC:
  2A20  6F            		ld	l,a
  2A21  2620          		ld	h,COLUMNS
  2A23  F1            		pop	af		;cancel return address
  2A24  C36D11        		jp	SETCSR
                      	
                      	
  2A27                	INPT1CTLJ:
  2A27  3AA8FE        		ld	a,(INSMODE)
  2A2A  B7            		or	a
  2A2B  3E0A          		ld	a,0ah
  2A2D  CA1C29        		jp	z,INPT1PUTC
                      	
  2A30  2AA8FD        		ld	hl,(CSRY)	;l=y+1, h=x+1
  2A33  3E21          		ld	a,COLUMNS+1
  2A35  94            		sub	h
  2A36  47            		ld	b,a
  2A37                	CTLJLP:
  2A37  C5            		push	bc
  2A38  3E20          		ld	a,' '
  2A3A  CD4E28        		call	INSERT
  2A3D  2AAAFD        		ld	hl,(CSRAD)
  2A40  77            		ld	(hl),a
  2A41  C1            		pop	bc
  2A42  10F3          		djnz	CTLJLP
                      	
  2A44  CD3313        		call	AD2XY
  2A47  CD6D11        		call	SETCSR
  2A4A  7C            		ld	a,h		;>0
  2A4B  C36715        		jp	SETLINE
                      	
                      	
  2A4E                	INPT1TAB:
  2A4E  3AA9FD        		ld	a,(CSRX)
  2A51  D619          		sub	COLUMNS-7
  2A53  DE07          		sbc	a,7
  2A55  C8            		ret	z
  2A56  2F            		cpl
  2A57  E607          		and	07h
  2A59  3C            		inc	a
  2A5A  47            		ld	b,a
  2A5B  3AA8FE        		ld	a,(INSMODE)
  2A5E  E604          		and	04h
  2A60  C61C          		add	a,1ch		;1ch(right) or 20h(space)
  2A62  4F            		ld	c,a
  2A63                	INPT1TABLP:
  2A63  C5            		push	bc
  2A64  79            		ld	a,c
  2A65  CD1029        		call	INPT1CMD
  2A68  C1            		pop	bc
  2A69  10F8          		djnz	INPT1TABLP
  2A6B  C9            		ret
                      	
                      	
  2A6C                	INPT1STOP:
  2A6C  E1            		pop	hl		;cancel return address
  2A6D  2AA8FD        		ld	hl,(CSRY)
  2A70  AF            		xor	a
  2A71  67            		ld	h,a
  2A72  11B5FD        		ld	de,LINEST-2
  2A75  19            		add	hl,de
  2A76                	STOPLP:
  2A76  23            		inc	hl
  2A77  B6            		or	(hl)
  2A78  28FC          		jr	z,STOPLP
                      	
                      	;	or	a
  2A7A  ED52          		sbc	hl,de
  2A7C  2D            		dec	l
  2A7D  CD4C11        		call	CTLCR
  2A80  CD3927        		call	PUTNL
                      	
  2A83  21DAFE        		ld	hl,INPBUF
  2A86  AF            		xor	a
  2A87  3218FA        		ld	(STOPFLG),a
  2A8A  77            		ld	(hl),a
  2A8B  2B            		dec	hl
  2A8C  37            		scf
  2A8D  C9            		ret
                      	
                      	
  2A8E                	INPT1RET:
  2A8E  F1            		pop	af		;cancel return address
                      	
  2A8F  3AABFD        		ld	a,(CSRAD+1)
  2A92  57            		ld	d,a
  2A93  3AA7FE        		ld	a,(INPTPAG)
  2A96  AA            		xor	d		;
  2A97  E6F0          		and	0f0h
  2A99  201A          		jr	nz,IRETNZ1
                      	
  2A9B  3AA8FD        		ld	a,(CSRY)
  2A9E  ED5BA4FE      		ld	de,(INPTXY)
  2AA2  BB            		cp	e
  2AA3  2010          		jr	nz,IRETNZ1
                      	
  2AA5  01B6FD        		ld	bc,LINEST-1
  2AA8  79            		ld	a,c
  2AA9  83            		add	a,e		;no carry
  2AAA  4F            		ld	c,a
  2AAB  0A            		ld	a,(bc)
  2AAC  B7            		or	a
  2AAD  2806          		jr	z,IRETNZ1
                      	
  2AAF  3AA6FE        		ld	a,(INPTX)
  2AB2  92            		sub	d
  2AB3  1802          		jr	SETINPTX
  2AB5                	IRETNZ1:
  2AB5  3E47          		ld	a,71
  2AB7                	SETINPTX:
  2AB7  32A6FE        		ld	(INPTX),a
                      	
  2ABA                	IRETLP1:
  2ABA  CD4B15        		call	CHKLINE
  2ABD  2B            		dec	hl
  2ABE  28FA          		jr	z,IRETLP1
  2AC0  23            		inc	hl
  2AC1  54            		ld	d,h		;
  2AC2  CD3313        		call	AD2XY
  2AC5  3AA7FE        		ld	a,(INPTPAG)
  2AC8  AA            		xor	d		;
  2AC9  E6F0          		and	0f0h
  2ACB  2009          		jr	nz,IRETNZ2
                      	
  2ACD  ED5BA4FE      		ld	de,(INPTXY)	;initial position
  2AD1  7D            		ld	a,l
  2AD2  BB            		cp	e
  2AD3  2001          		jr	nz,IRETNZ2
  2AD5  EB            		ex	de,hl
                      	
  2AD6                	IRETNZ2:
  2AD6  CDCD11        		call	XY2AD
                      	
  2AD9                	IRETLP2:
  2AD9  CDCE28        		call	GETSCRC
  2ADC  11DAFE        		ld	de,INPBUF
  2ADF  0647          		ld	b,71
  2AE1                	IRETLP3:
  2AE1  CDCE28        		call	GETSCRC
  2AE4  FE20          		cp	20h
  2AE6  300D          		jr	nc,IRETNC
  2AE8  EB            		ex	de,hl
  2AE9  3614          		ld	(hl),14h
  2AEB  EB            		ex	de,hl
                      	;	dec	b
                      	;	jr	nz,IRETGRP
  2AEC  1004          		djnz	IRETGRP
  2AEE  AF            		xor	a
  2AEF  12            		ld	(de),a
  2AF0  180D          		jr	IRETNZ3
  2AF2                	IRETGRP:
  2AF2  13            		inc	de
  2AF3  C630          		add	a,30h
                      	
  2AF5                	IRETNC:
  2AF5  12            		ld	(de),a
  2AF6  13            		inc	de
  2AF7  23            		inc	hl
  2AF8  CD4B15        		call	CHKLINE
  2AFB  2002          		jr	nz,IRETNZ3
  2AFD  10E2          		djnz	IRETLP3
                      	
  2AFF                	IRETNZ3:
  2AFF  2B            		dec	hl
  2B00  CD3313        		call	AD2XY
  2B03  CD6D11        		call	SETCSR
                      	
  2B06                	IRETLP4:
  2B06  1B            		dec	de
  2B07  1A            		ld	a,(de)
  2B08  FE20          		cp	' '
  2B0A  28FA          		jr	z,IRETLP4
  2B0C  13            		inc	de
  2B0D  AF            		xor	a
  2B0E  12            		ld	(de),a
                      	
  2B0F  CD3927        		call	PUTNL
                      	
  2B12  21D9FE        		ld	hl,INPBUF-1
  2B15  C9            		ret
                      	
  2B16                	NOINSTBL:
  2B16  020305060B0C0D		db	02h, 03h, 05h, 06h, 0bh, 0ch, 0dh, 15h, 1ch, 1dh, 1eh, 1fh
                      	
                      	
                      	;x=x+-(8 or 4 or 2 or 1)
                      	;input: b(bit7=0:increment, bit7=1:decrement), (GRPX3)
                      	;output: hl,(GRPX3)=X
                      	;destroy: af,de
  2B22                	INCGX:
  2B22  3A92FD        		ld	a,(SCREEN1)
  2B25  3C            		inc	a
  2B26  57            		ld	d,a
  2B27  3E10          		ld	a,10h
  2B29                	INCGXLP:
  2B29  0F            		rrca
  2B2A  15            		dec	d
  2B2B  20FC          		jr	nz,INCGXLP
                      	
  2B2D  2AB1FE        		ld	hl,(GRPX3)
  2B30  5F            		ld	e,a
  2B31  CB78          		bit	7,b
  2B33  2003          		jr	nz,INCGXNZ
                      	
  2B35  19            		add	hl,de		;de=8,4,2,1
  2B36  1802          		jr	INCGXEND
                      	
  2B38                	INCGXNZ:
                      	;	or	a
  2B38  ED52          		sbc	hl,de		;de=8,4,2,1
                      	
  2B3A                	INCGXEND:
  2B3A  22B1FE        		ld	(GRPX3),hl
  2B3D  C9            		ret
                      	
                      	
                      	;y=y+(12 or 4 or 1 or 1)
                      	;input: (GRPY3)
                      	;output: de=(GRPY3)
                      	;destroy: af
  2B3E                	INCGY:
  2B3E  3A92FD        		ld	a,(SCREEN1)
  2B41  3D            		dec	a
  2B42  3E04          		ld	a,4		;screen mode 2
  2B44  2807          		jr	z,INCGYZ
  2B46  3E01          		ld	a,1		;screen mode 3,4
  2B48  F24D2B        		jp	p,INCGYZ
  2B4B  3E0C          		ld	a,12		;screen mode 1
  2B4D                	INCGYZ:
  2B4D  ED5BB3FE      		ld	de,(GRPY3)
  2B51  83            		add	a,e
  2B52  5F            		ld	e,a
  2B53  32B3FE        		ld	(GRPY3),a	;<256
  2B56  C9            		ret
                      	
                      	
                      	;error-=|dx|*2
                      	;input: bc=dx, hl=error
                      	;output: hl=error
                      	;destroy: af
  2B57                	SUB2DX:
  2B57  78            		ld	a,b
  2B58  07            		rlca
  2B59  3805          		jr	c,SUB2DXNZ
                      	;dx>0
                      	;	or	a
  2B5B  ED42          		sbc	hl,bc
  2B5D  ED42          		sbc	hl,bc
  2B5F  C9            		ret
                      	
                      	;dx<0
  2B60                	SUB2DXNZ:
  2B60  09            		add	hl,bc
  2B61  09            		add	hl,bc
  2B62  C9            		ret
                      	
                      	
                      	;x1 <-> x2, y1 <-> y2
                      	;input: bc=x1, de=y1, (GRPX2)=x2, (GRPY2)=y2
                      	;output: (GRPX2)=larger x,(GRPY2)=larger y,(GRPX3)=smaller x,(GRPY3)=smaller y
                      	;destroy: bc,de,hl
  2B63                	SORTXY:
  2B63  F5            		push	af
  2B64  CDB32B        		call	CHKGXY23
  2B67  3807          		jr	c,SORTXOK
  2B69  22AFFE        		ld	(GRPY2),hl
  2B6C  ED53B3FE      		ld	(GRPY3),de
  2B70                	SORTXOK:
  2B70  2AADFE        		ld	hl,(GRPX2)
  2B73  ED5BB1FE      		ld	de,(GRPX3)
  2B77  E7            		rst	CPHLDE
  2B78  3816          		jr	c,SORTX
  2B7A  F1            		pop	af
  2B7B  C9            		ret
                      	
                      	
                      	;(x1,y1) <-> (x2,y2)
                      	;input: bc=x1, de=y1, (GRPX2)=x2, (GRPY2)=y2
                      	;output: (GRPX2),(GRPY2)=larger y with x, (GRPX3),(GRPY3)=small y with x
                      	;destroy: bc,de,hl
  2B7C                	SORTY:
  2B7C  F5            		push	af
  2B7D  CDB32B        		call	CHKGXY23
  2B80  3815          		jr	c,NOSORT
  2B82  22AFFE        		ld	(GRPY2),hl
  2B85  ED53B3FE      		ld	(GRPY3),de
  2B89  2AADFE        		ld	hl,(GRPX2)
  2B8C  ED5BB1FE      		ld	de,(GRPX3)
  2B90                	SORTX:
  2B90  ED53ADFE      		ld	(GRPX2),de
  2B94  22B1FE        		ld	(GRPX3),hl
  2B97                	NOSORT:
  2B97  F1            		pop	af
  2B98  C9            		ret
                      	
                      	
                      	;sort XY and put bc,de,hl
                      	;output: bc=smaller x, de=smaller y, hl=larger y
                      	;destroy: none
  2B99                	SORTXY2:
  2B99  CD632B        		call	SORTXY
  2B9C  ED4BB1FE      		ld	bc,(GRPX3)	;smaller x, b=0
  2BA0  ED5BB3FE      		ld	de,(GRPY3)	;smaller y
  2BA4  2AAFFE        		ld	hl,(GRPY2)	;larger y
  2BA7  C9            		ret
                      	
                      	
                      	;push (GRPX2),(GRPY2)
                      	;destroy: af,hl
  2BA8                	PUSHGXY:
  2BA8  F1            		pop	af		;return address
  2BA9  2AADFE        		ld	hl,(GRPX2)
  2BAC  E5            		push	hl
  2BAD  2AAFFE        		ld	hl,(GRPY2)
  2BB0  E5            		push	hl
  2BB1  F5            		push	af		;return address
  2BB2  C9            		ret
                      	
                      	
                      	;input: bc=x1, de=y1, (GRPX2)=x2, (GRPY2)=y2
                      	;output: bc=(GRPX2)=x2, de=(GRPY2)=y2, hl=(GRPY3)=y1, (GRPX3)=x1, z,c(y1>y2?)
                      	;destroy: af
  2BB3                	CHKGXY23:
  2BB3  CDD62B        		call	CHKGXY
  2BB6  ED43B1FE      		ld	(GRPX3),bc
  2BBA  ED53B3FE      		ld	(GRPY3),de
  2BBE  ED4BADFE      		ld	bc,(GRPX2)
  2BC2  ED5BAFFE      		ld	de,(GRPY2)
  2BC6  CDD62B        		call	CHKGXY
  2BC9  ED43ADFE      		ld	(GRPX2),bc
  2BCD  ED53AFFE      		ld	(GRPY2),de
                      	
  2BD1  2AB3FE        		ld	hl,(GRPY3)
  2BD4  E7            		rst	CPHLDE
  2BD5  C9            		ret
                      	
                      	
                      	;check and round graphic coordinates (x,y)
                      	;input: bc=x, de=y
                      	;output: bc=x, de=y
                      	;destroy: af,hl
  2BD6                	CHKGXY:
  2BD6  78            		ld	a,b
  2BD7  B7            		or	a
  2BD8  2802          		jr	z,CHKMNS
  2BDA  0EFF          		ld	c,255
  2BDC                	CHKMNS:
  2BDC  B2            		or	d
  2BDD  FAE503        		jp	m,FCERR
                      	
  2BE0  3A92FD        		ld	a,(SCREEN1)
  2BE3  47            		ld	b,a		;
  2BE4  0F            		rrca
  2BE5  2F            		cpl
  2BE6  21A6FD        		ld	hl,CONSOL3
  2BE9  A6            		and	(hl)
  2BEA  0F            		rrca
  2BEB  21BF00        		ld	hl,191
  2BEE  3003          		jr	nc,NOFKEY
  2BF0  21B300        		ld	hl,191-12
  2BF3                	NOFKEY:
  2BF3  E7            		rst	CPHLDE
  2BF4  3001          		jr	nc,CHKYOK
  2BF6  EB            		ex	de,hl
  2BF7                	CHKYOK:
  2BF7  78            		ld	a,b		;
  2BF8  3D            		dec	a
  2BF9  280D          		jr	z,ROUNDY2
  2BFB  F20C2C        		jp	p,ROUNDX	;screen mode 3,4
                      	
                      	;round off y for screen mode 1
  2BFE                	ROUNDY1:
  2BFE  CDB43F        		call	DIV12
  2C01  7B            		ld	a,e
  2C02  87            		add	a,a		;*2
  2C03  83            		add	a,e		;*3
  2C04  87            		add	a,a		;*6
  2C05  87            		add	a,a		;*12
  2C06  1803          		jr	ROUNDY2END
                      	
                      	;round off y for screen mode 2
  2C08                	ROUNDY2:
  2C08  7B            		ld	a,e
  2C09  E6FC          		and	0fch
  2C0B                	ROUNDY2END:
  2C0B  5F            		ld	e,a
                      	
  2C0C                	ROUNDX:
  2C0C  04            		inc	b		;
  2C0D  3EF0          		ld	a,0f0h
  2C0F                	ROUNDXLP:
  2C0F  37            		scf
  2C10  1F            		rra			;f8,fc,fe,ff
  2C11  10FC          		djnz	ROUNDXLP
                      	
  2C13  A1            		and	c
  2C14  4F            		ld	c,a		;b=0
  2C15  C9            		ret
                      	
                      	
                      	;screen mode 2
  2C16                	PSET2:
  2C16  C5            		push	bc		;X
  2C17  CD883F        		call	GXY2AD
                      	
  2C1A  3AACFE        		ld	a,(ATTDAT)
  2C1D  5E            		ld	e,(hl)		;
  2C1E  B7            		or	a
  2C1F  2004          		jr	nz,PS2NZ1
  2C21  CB73          		bit	6,e
  2C23  2004          		jr	nz,PS2NZ2
  2C25                	PS2NZ1:
  2C25  CD3F15        		call	GETSPA2NZ
  2C28  77            		ld	(hl),a
  2C29                	PS2NZ2:
  2C29  24            		inc	h
  2C2A  24            		inc	h
  2C2B  CB73          		bit	6,e		;
  2C2D  2004          		jr	nz,PS2SEMI	;semi-graphic mode?
  2C2F  CD0D16        		call	GETSP
  2C32  77            		ld	(hl),a
                      	
  2C33                	PS2SEMI:
  2C33  C1            		pop	bc		;X
  2C34  CD522C        		call	MASK2
  2C37  47            		ld	b,a
                      	
  2C38  7E            		ld	a,(hl)
  2C39  E63F          		and	3fh
  2C3B  B0            		or	b
  2C3C  4F            		ld	c,a
                      	
  2C3D  3AACFE        		ld	a,(ATTDAT)
  2C40  B7            		or	a
  2C41  2809          		jr	z,PSET2C0
  2C43  3D            		dec	a
  2C44  E603          		and	03h
  2C46  0F            		rrca
  2C47  0F            		rrca
  2C48  81            		add	a,c
  2C49  77            		ld	(hl),a
  2C4A  E1            		pop	hl
  2C4B  C9            		ret
                      	
  2C4C                	PSET2C0:
  2C4C  78            		ld	a,b
  2C4D  2F            		cpl
  2C4E  A6            		and	(hl)
  2C4F  77            		ld	(hl),a
  2C50  E1            		pop	hl
  2C51  C9            		ret
                      	
                      	
                      	;screen mode 2 dot bit mask
                      	;input: c=X, d=Y mod 12
                      	;output: a
                      	; bit5 bit4
                      	; bit3 bit2
                      	; bit1 bit0
                      	;destroy: f,bc
  2C52                	MASK2:
  2C52  79            		ld	a,c
  2C53  2F            		cpl
  2C54  E604          		and	04h
  2C56  C604          		add	a,04h
  2C58  CB52          		bit	2,d
  2C5A  C0            		ret	nz	;4<=d<=7
  2C5B  CB5A          		bit	3,d
  2C5D  2003          		jr	nz,MASK2NZ
  2C5F  07            		rlca
  2C60  07            		rlca
  2C61  C9            		ret		;0<=d<=3
  2C62                	MASK2NZ:
  2C62  0F            		rrca
  2C63  0F            		rrca
  2C64  C9            		ret		;8<=d<=11
                      	
                      	
                      	;continued from BFG
  2C65                	BFG2:
  2C65  3AB1FE        		ld	a,(GRPX3)	;smaller x
  2C68  E6F8          		and	0f8h
  2C6A  47            		ld	b,a
  2C6B  3AADFE        		ld	a,(GRPX2)	;larger x
  2C6E  E6F8          		and	0f8h
  2C70  90            		sub	b		;
  2C71  0F            		rrca
  2C72  0F            		rrca
  2C73  0F            		rrca			;int(larger/8)-int(smaller/8)
  2C74  47            		ld	b,a		;bytes
  2C75  2003          		jr	nz,BFGLP3	;a=0?
  2C77  7A            		ld	a,d
  2C78  A3            		and	e
  2C79  57            		ld	d,a
                      	
  2C7A                	BFGLP3:
                      	;left part
  2C7A  C5            		push	bc
  2C7B  3AACFE        		ld	a,(ATTDAT)
  2C7E  AE            		xor	(hl)
  2C7F  A2            		and	d		;d=left part mask
  2C80  AE            		xor	(hl)
  2C81  77            		ld	(hl),a
                      	
  2C82  05            		dec	b		;
  2C83  FA962C        		jp	m,BFGNEXT
                      	
                      	;middle part
  2C86  E5            		push	hl		;VRAM address
  2C87  3AACFE        		ld	a,(ATTDAT)
  2C8A  2804          		jr	z,BFGRHT	;
  2C8C                	BFGLP4:
  2C8C  23            		inc	hl
  2C8D  77            		ld	(hl),a
  2C8E  10FC          		djnz	BFGLP4
                      	
                      	;right part
  2C90                	BFGRHT:
  2C90  23            		inc	hl
  2C91  AE            		xor	(hl)
  2C92  A3            		and	e		;e=right part mask
  2C93  AE            		xor	(hl)
  2C94  77            		ld	(hl),a
  2C95  E1            		pop	hl		;VRAM address
                      	
  2C96                	BFGNEXT:
  2C96  012000        		ld	bc,0020h
  2C99  09            		add	hl,bc
  2C9A  C1            		pop	bc
  2C9B  0D            		dec	c
  2C9C  20DC          		jr	nz,BFGLP3
  2C9E  C3C02E        		jp	LINEEND2
                      	
                      	
                      	;|dy/dx|<=1
  2CA1                	SLOPEX:
  2CA1  AF            		xor	a
  2CA2  95            		sub	l
  2CA3  6F            		ld	l,a
  2CA4  9C            		sbc	a,h
  2CA5  95            		sub	l
  2CA6  67            		ld	h,a
  2CA7  E5            		push	hl		;error=-|dx|
                      	
  2CA8                	LINELP2:
  2CA8  ED4BB1FE      		ld	bc,(GRPX3)
  2CAC  ED5BB3FE      		ld	de,(GRPY3)
  2CB0  CD472D        		call	PSET
                      	
  2CB3  E1            		pop	hl		;error
  2CB4  C1            		pop	bc		;dx
  2CB5  D1            		pop	de		;dy
  2CB6  D5            		push	de		;dy
  2CB7  C5            		push	bc		;dx
                      	
  2CB8  19            		add	hl,de		;error+=dy
  2CB9  19            		add	hl,de		;error+=dy
  2CBA  CB7C          		bit	7,h
  2CBC  2006          		jr	nz,ERRMNS
                      	
                      	;if error>=0
  2CBE  CD572B        		call	SUB2DX		;error-=|dx|*2
  2CC1  CD3E2B        		call	INCGY		;increment Y
                      	
  2CC4                	ERRMNS:
  2CC4  E5            		push	hl		;error
  2CC5  CD222B        		call	INCGX		;increment or decrement X
  2CC8  DABB2E        		jp	c,LINEEND
                      	
  2CCB  EB            		ex	de,hl		;de=X
  2CCC  2AADFE        		ld	hl,(GRPX2)
  2CCF  CB78          		bit	7,b
  2CD1  2801          		jr	z,LINEZ
  2CD3  EB            		ex	de,hl		;if dx<0
  2CD4                	LINEZ:
  2CD4  E7            		rst	CPHLDE
  2CD5  30D1          		jr	nc,LINELP2
  2CD7  C3BB2E        		jp	LINEEND
                      	
                      	
                      	;get (step)(x,y) cordinate
                      	;input: hl=program address
                      	;output: bc=graphic X, de=graphic Y,
                      	;	 (GRPX1)=(GRPX2),(GRPY1)=(GRPY2)=0-32767
                      	;	 a=next data, hl=next data address, z(, or not)
                      	;destroy: f
  2CDA                	GETGXY:
  2CDA  CD5A3F        		call	SKIPSP
  2CDD  FEC9          		cp	STEP
  2CDF  F5            		push	af		;STEP?
  2CE0  2001          		jr	nz,GETGXYNZ
  2CE2  23            		inc	hl
  2CE3                	GETGXYNZ:
  2CE3  CD920B        		call	CHKLPAR
  2CE6  CD240E        		call	INTARG2		;bc,de
  2CE9  CDA10B        		call	CHKRPAR
  2CEC  F1            		pop	af		;STEP?
  2CED  CD132D        		call	SETGXY
  2CF0  CD5A3F        		call	SKIPSP
  2CF3  FE2C          		cp	','
  2CF5  C9            		ret
                      	
                      	
                      	;input: bc=x, de=y, z(0=absolute, 1=relative)
                      	;output: bc=x, de=y, (GRPX1)=(GRPX2)=x, (GRPY1)=(GRPY2)=y
                      	;destroy: f
  2CF6                	_SETGXY:ds	SETGXY-_SETGXY
  2D13                		org	SETGXY
                      	
  2D13  E5            		push	hl
  2D14  200B          		jr	nz,SETGXYNZ
  2D16  2AAEFD        		ld	hl,(GRPX1)
  2D19  09            		add	hl,bc
  2D1A  44            		ld	b,h
  2D1B  4D            		ld	c,l
  2D1C  2AB0FD        		ld	hl,(GRPY1)
  2D1F  19            		add	hl,de
  2D20  EB            		ex	de,hl
  2D21                	SETGXYNZ:
  2D21  ED43AEFD      		ld	(GRPX1),bc
  2D25  ED43ADFE      		ld	(GRPX2),bc
  2D29  ED53B0FD      		ld	(GRPY1),de
  2D2D  ED53AFFE      		ld	(GRPY2),de
  2D31  E1            		pop	hl
  2D32  C9            		ret
                      	
                      	
                      	;PRESET command
  2D33                	C_PRST:
  2D33  3A94FD        		ld	a,(COLOR2)
  2D36  1803          		jr	PSETRST
                      	
                      	;PSET command
  2D38                	C_PSET:
  2D38  3A93FD        		ld	a,(COLOR1)
                      	
                      	;PSET and PRESET
  2D3B                	PSETRST:
  2D3B  CDC015        		call	SETATT
  2D3E  CDDA2C        		call	GETGXY
  2D41  CC662D        		call	z,PSCOLR
                      	;	jp	PSET
                      	
                      	
                      	;input: bc=x1, de=y1, (ATTDAT)=attribute
                      	;destroy: af,bc,de
  2D44                	_PSET:	ds	PSET-_PSET
  2D47                		org	PSET
                      	
  2D47  E5            		push	hl
                      	;	call	CHKGXY
  2D48  3A92FD        		ld	a,(SCREEN1)
  2D4B  3D            		dec	a
  2D4C  CA162C        		jp	z,PSET2
  2D4F  F25A2D        		jp	p,PSETG
                      	
                      	
                      	;screen mode 1
  2D52                	PSET1:
  2D52  CD883F        		call	GXY2AD
  2D55  3AACFE        		ld	a,(ATTDAT)
  2D58  1809          		jr	PSETEND
                      	
                      	
                      	;screen mode 3,4
  2D5A                	PSETG:
  2D5A  CD3F14        		call	GXY2GAD
  2D5D  3AACFE        		ld	a,(ATTDAT)
  2D60  AE            		xor	(hl)
  2D61  A2            		and	d
  2D62  AE            		xor	(hl)
  2D63                	PSETEND:
  2D63  77            		ld	(hl),a
  2D64  E1            		pop	hl
  2D65  C9            		ret
                      	
                      	
  2D66                	PSCOLR:
  2D66  C5            		push	bc		;x
  2D67  D5            		push	de		;y
  2D68  CDE30D        		call	INT1INC
  2D6B  D1            		pop	de		;y
  2D6C  C1            		pop	bc		;x
  2D6D  C3C015        		jp	SETATT
                      	
                      	
                      	;POINT() function
  2D70                	F_POIN:
  2D70  CDDA2C        		call	GETGXY
  2D73  CD6E3E        		call	POINT
  2D76  C3590C        		jp	I1TOFA
                      	
                      	
                      	;LINE command
  2D79                	C_LINE:
  2D79  CD5A3F        		call	SKIPSP
  2D7C  FECB          		cp	MINUS
  2D7E  ED4BAEFD      		ld	bc,(GRPX1)
  2D82  ED5BB0FD      		ld	de,(GRPY1)
  2D86  2808          		jr	z,LINE2P
                      	
  2D88                	LINE1P:
  2D88  CDDA2C        		call	GETGXY
  2D8B  FECB          		cp	MINUS
  2D8D  C2DC03        		jp	nz,SNERR
                      	
  2D90                	LINE2P:
  2D90  C5            		push	bc		;x1
  2D91  D5            		push	de		;y1
                      	
  2D92  23            		inc	hl
  2D93  CDDA2C        		call	GETGXY
  2D96  ED43ADFE      		ld	(GRPX2),bc	;x2
  2D9A  ED53AFFE      		ld	(GRPY2),de	;y2
  2D9E  3A93FD        		ld	a,(COLOR1)
  2DA1  2011          		jr	nz,NOTBOX
  2DA3  5F            		ld	e,a
  2DA4  CD593F        		call	SKIPSPINC
  2DA7  FE2C          		cp	','
  2DA9  2810          		jr	z,CHKBF
                      	
                      	;color
  2DAB  CDE40D        		call	INT1ARG
  2DAE  7E            		ld	a,(hl)
  2DAF  FE2C          		cp	','
  2DB1  2808          		jr	z,CHKBF
  2DB3  7B            		ld	a,e
                      	
  2DB4                	NOTBOX:
  2DB4  CDC015        		call	SETATT
  2DB7  D1            		pop	de		;y1
  2DB8  C1            		pop	bc		;x1
  2DB9  1864          		jr	LINE
                      	
                      	;check 'B' and 'F'
  2DBB                	CHKBF:
  2DBB  CD593F        		call	SKIPSPINC
  2DBE  FE42          		cp	'B'
  2DC0  C2DC03        		jp	nz,SNERR
                      	
  2DC3  7B            		ld	a,e
  2DC4  CDC015        		call	SETATT
                      	
  2DC7  CD593F        		call	SKIPSPINC
  2DCA  FE46          		cp	'F'
  2DCC  2001          		jr	nz,BOX
  2DCE  23            		inc	hl		;for box fill
  2DCF                	BOX:
  2DCF  224EFF        		ld	(PROGAD),hl
  2DD2  D1            		pop	de		;y1
  2DD3  C1            		pop	bc		;x1
  2DD4  205F          		jr	nz,LINEB
  2DD6  180C          		jr	LINEBF
                      	
                      	
                      	;input: bc=x1, de=y1, (GRPX2)=x2, (GRPY2)=y2, (ATTDAT)=attribute
                      	;destroy: af,bc,de
  2DD8                	_LINEBF:ds	LINEBF-_LINEBF
  2DE4                		org	LINEBF
                      	
  2DE4  E5            		push	hl
  2DE5  CDA82B        		call	PUSHGXY
  2DE8  CD992B        		call	SORTXY2
                      	
  2DEB  3A92FD        		ld	a,(SCREEN1)
  2DEE  FE02          		cp	2
  2DF0  3868          		jr	c,BF12
                      	
                      	;line bf (graphic mode)
  2DF2                	BFG:
  2DF2  3AADFE        		ld	a,(GRPX2)	;larger x
  2DF5  2001          		jr	nz,BF4
  2DF7  3C            		inc	a		;screen mode 3
  2DF8                	BF4:
  2DF8  E607          		and	07h
  2DFA  3C            		inc	a
  2DFB  47            		ld	b,a
  2DFC  AF            		xor	a
  2DFD                	BFGLP1:
  2DFD  37            		scf
  2DFE  1F            		rra			;right part mask
  2DFF  10FC          		djnz	BFGLP1
                      	
                      	;	or	a
  2E01  ED52          		sbc	hl,de
  2E03  2C            		inc	l
  2E04  E5            		push	hl		;l=lines
                      	
  2E05  6F            		ld	l,a		;right part mask
                      	
  2E06  79            		ld	a,c		;smaller x
  2E07  E607          		and	07h
  2E09  47            		ld	b,a
  2E0A  3EFF          		ld	a,0ffh
  2E0C  2804          		jr	z,BFGZ
  2E0E                	BFGLP2:
  2E0E  CB3F          		srl	a
  2E10  10FC          		djnz	BFGLP2
  2E12                	BFGZ:
  2E12  67            		ld	h,a		;left part mask
                      	
  2E13  E5            		push	hl
  2E14  CD3F14        		call	GXY2GAD		;b=0
  2E17  D1            		pop	de		;d=left part mask, e=right part mask
  2E18  C1            		pop	bc		;c=lines
                      	
  2E19  C3652C        		jp	BFG2
                      	
                      	
                      	;by Bresenham's line algorithm
                      	;input: bc=x1, de=y1, (GRPX2)=x2, (GRPY2)=y2, (ATTDAT)=attribute
                      	;destroy: af
  2E1C                	_LINE:	ds	LINE-_LINE
  2E1F                		org	LINE
                      	
  2E1F  E5            		push	hl
  2E20  CDA82B        		call	PUSHGXY
  2E23  D5            		push	de
  2E24  C5            		push	bc
                      	
  2E25  CD7C2B        		call	SORTY
  2E28  ED4BB3FE      		ld	bc,(GRPY3)	;start (smaller y)
  2E2C  2AAFFE        		ld	hl,(GRPY2)	;end (larger y)
  2E2F  B7            		or	a
  2E30  ED42          		sbc	hl,bc		;dy
  2E32  1835          		jr	LINE2
                      	
                      	
                      	;input: bc=x1, de=y1, (GRPX2)=x2, (GRPY2)=y2, (ATTDAT)=attribute
                      	;destroy: af,bc,de
  2E34                	_LINEB:	ds	LINEB-_LINEB
  2E35                		org	LINEB
                      	
  2E35  E5            		push	hl
  2E36  CDA82B        		call	PUSHGXY
  2E39  CD992B        		call	SORTXY2
  2E3C  EB            		ex	de,hl
                      	
                      	;down-up-right-left
  2E3D  C5            		push	bc
  2E3E  CD1F2E        		call	LINE
  2E41  22AFFE        		ld	(GRPY2),hl	;smaller y
  2E44  EB            		ex	de,hl
  2E45  CD1F2E        		call	LINE
  2E48  ED4BADFE      		ld	bc,(GRPX2)	;larger x
  2E4C  EB            		ex	de,hl		;larger y
  2E4D  CD1F2E        		call	LINE
  2E50  C1            		pop	bc		;smaller x
  2E51  ED43ADFE      		ld	(GRPX2),bc
  2E55  CD1F2E        		call	LINE
  2E58  1866          		jr	LINEEND2
                      	
                      	
                      	;line bf (screen mode 1,2)
  2E5A                	BF12:
  2E5A  ED53AFFE      		ld	(GRPY2),de
  2E5E  CD1F2E        		call	LINE
  2E61  E7            		rst	CPHLDE
  2E62  285C          		jr	z,LINEEND2
  2E64  CD3E2B        		call	INCGY
  2E67  18F1          		jr	BF12
                      	
                      	
  2E69                	LINE2:
  2E69  3A92FD        		ld	a,(SCREEN1)
  2E6C  0F            		rrca
  2E6D  3801          		jr	c,SKIPY
                      	;screen mode 1 or 3: dy=dy*2
  2E6F  29            		add	hl,hl
                      	
  2E70                	SKIPY:
  2E70  EB            		ex	de,hl
  2E71  ED4BB1FE      		ld	bc,(GRPX3)	;start (x)
  2E75  2AADFE        		ld	hl,(GRPX2)	;end (x)
  2E78  B7            		or	a
  2E79  ED42          		sbc	hl,bc		;dx
  2E7B  B7            		or	a
  2E7C  2004          		jr	nz,SKIPX
                      	;screen mode 1: dx=dx*3
  2E7E  44            		ld	b,h
  2E7F  4D            		ld	c,l
  2E80  29            		add	hl,hl
  2E81  09            		add	hl,bc
                      	
  2E82                	SKIPX:
  2E82  D5            		push	de		;dy
  2E83  E5            		push	hl		;dx
                      	
  2E84  CB7C          		bit	7,h
  2E86  2806          		jr	z,DXPLUS	;dx>0
                      	;if dx<0, hl=-hl
  2E88  AF            		xor	a
  2E89  95            		sub	l
  2E8A  6F            		ld	l,a
  2E8B  9C            		sbc	a,h
  2E8C  95            		sub	l
  2E8D  67            		ld	h,a
  2E8E                	DXPLUS:
  2E8E  E7            		rst	CPHLDE
  2E8F  D2A12C        		jp	nc,SLOPEX	;if |dy/dx|<=1
                      	
                      	;|dy/dx|>1
  2E92  D5            		push	de		;error=dy
                      	
  2E93  ED5BB3FE      		ld	de,(GRPY3)
  2E97                	LINELP1:
  2E97  ED4BB1FE      		ld	bc,(GRPX3)
  2E9B  CD472D        		call	PSET
                      	
  2E9E  E1            		pop	hl		;error
  2E9F  C1            		pop	bc		;dx
  2EA0  D1            		pop	de		;dy
  2EA1  D5            		push	de		;dy
  2EA2  C5            		push	bc		;dx
                      	
  2EA3  CD572B        		call	SUB2DX		;error-=|dx|*2
  2EA6  E5            		push	hl
  2EA7  CB7C          		bit	7,h
  2EA9  2807          		jr	z,ERRPLS
                      	
                      	;if error<0
  2EAB  E1            		pop	hl
  2EAC  19            		add	hl,de		;error+=dy
  2EAD  19            		add	hl,de		;error+=dy
  2EAE  E5            		push	hl		;error
  2EAF  CD222B        		call	INCGX		;increment or decrement X
                      	;	jr	c,LINEEND
                      	
  2EB2                	ERRPLS:
  2EB2  CD3E2B        		call	INCGY		;increment Y
  2EB5  2AAFFE        		ld	hl,(GRPY2)
  2EB8  E7            		rst	CPHLDE
  2EB9  30DC          		jr	nc,LINELP1
                      	
  2EBB                	LINEEND:
  2EBB  F1            		pop	af		;cancel error
  2EBC  F1            		pop	af		;cancel dx
  2EBD  F1            		pop	af		;cancel dy
                      	
  2EBE  C1            		pop	bc
  2EBF  D1            		pop	de
                      	
  2EC0                	LINEEND2:
  2EC0  E1            		pop	hl
  2EC1  22AFFE        		ld	(GRPY2),hl
  2EC4  E1            		pop	hl
  2EC5  22ADFE        		ld	(GRPX2),hl
  2EC8  E1            		pop	hl
  2EC9  C9            		ret
                      	
                      	
                      	;PAINT command
  2ECA                	C_PAIN:
  2ECA  CDDA2C        		call	GETGXY
  2ECD  C5            		push	bc		;X
  2ECE  D5            		push	de		;Y
  2ECF  3A93FD        		ld	a,(COLOR1)
  2ED2  2003          		jr	nz,PASETATT
  2ED4  CDE30D        		call	INT1INC
  2ED7                	PASETATT:
  2ED7  CDC015        		call	SETATT
  2EDA  7E            		ld	a,(hl)
  2EDB  FE2C          		cp	','
  2EDD  3AC5FE        		ld	a,(BORDERA)
  2EE0  2006          		jr	nz,PANZ
  2EE2  CDE30D        		call	INT1INC
  2EE5  32C6FE        		ld	(BORDERC),a
  2EE8                	PANZ:
  2EE8  5F            		ld	e,a
  2EE9  C3F12E        		jp	PAINT2
                      	
                      	
                      	;paint called by OKHOTSK
                      	;input: e=color code, (sp)=Y, (sp+2)=X
  2EEC                	_PAINT2:ds	PAINT2-_PAINT2
  2EF1                		org	PAINT2
                      	
  2EF1  7B            		ld	a,e
  2EF2  CDC715        		call	CNVATT
  2EF5  32C5FE        		ld	(BORDERA),a
  2EF8  D1            		pop	de		;Y
  2EF9  C1            		pop	bc		;X
                      	
                      	
                      	;input: bc=x, de=y, (ATTDAT)=attribute, (BORDERA)=attribute, (BORDERC)=color
                      	;destroy: af,bc,de
  2EFA                	_PAINT:	ds	PAINT-_PAINT
  2EFA                		org	PAINT
                      	
  2EFA  3A92FD        		ld	a,(SCREEN1)
  2EFD  3D            		dec	a
  2EFE  C8            		ret	z		;screen mode 2
  2EFF  E5            		push	hl
  2F00  FA0B2F        		jp	m,PAINT1	;screen mode 1
  2F03  CD3F14        		call	GXY2GAD
  2F06                	PAMAIN:
  2F06  CD122F        		call	PADWN
  2F09  E1            		pop	hl
  2F0A  C9            		ret
                      	
  2F0B                	PAINT1:
  2F0B  CD883F        		call	GXY2AD
  2F0E  16FF          		ld	d,0ffh
  2F10  18F4          		jr	PAMAIN
                      	
                      	
  2F12                	PADWN:
  2F12  CDC42F        		call	PALINE
  2F15  C8            		ret	z
  2F16  E5            		push	hl		;address
  2F17  D5            		push	de		;bit
  2F18  ED4BB5FE      		ld	bc,(PAWRK)
  2F1C  C5            		push	bc
  2F1D  CD812F        		call	PAUP2
  2F20  E1            		pop	hl
  2F21  22B5FE        		ld	(PAWRK),hl
  2F24  D1            		pop	de		;bit
  2F25  E1            		pop	hl		;address
                      	
  2F26                	PADWN2:
  2F26  3A92FD        		ld	a,(SCREEN1)
  2F29  B7            		or	a
  2F2A  1E19          		ld	e,19h
  2F2C  2002          		jr	nz,PADWNG
  2F2E  1E01          		ld	e,01h
  2F30                	PADWNG:
  2F30  7C            		ld	a,h
  2F31  E61F          		and	1fh
  2F33  BB            		cp	e
  2F34  3804          		jr	c,PADWNOK
  2F36  7D            		ld	a,l
  2F37  FEE0          		cp	0e0h
  2F39  D0            		ret	nc
  2F3A                	PADWNOK:
  2F3A  012000        		ld	bc,COLUMNS
  2F3D  09            		add	hl,bc
                      	
  2F3E  AF            		xor	a
  2F3F  32B7FE        		ld	(PACNT),a
  2F42                	PADWNLP1:
  2F42  CD1E30        		call	SRCHOK
  2F45  3812          		jr	c,CALLDWN
  2F47  E5            		push	hl		;address
  2F48  21B7FE        		ld	hl,PACNT
  2F4B  34            		inc	(hl)
  2F4C  D5            		push	de		;bit
  2F4D  CDEA34        		call	CHKFRE
  2F50  D1            		pop	de
  2F51  E1            		pop	hl
  2F52  E5            		push	hl
  2F53  D5            		push	de
                      	
                      	;	ld	a,l
                      	;	inc	a
                      	;	and	1fh
                      	;	jr	nz,PADWNNZ
                      	;	bit	0,d
                      	;	jr	nz,CALLDWN
                      	;PADWNNZ:
                      	;	call	INCGXPA
                      	
  2F54  CD4B30        		call	SRCHNG
  2F57  30E9          		jr	nc,PADWNLP1
                      	
  2F59                	CALLDWN:
  2F59  3AB7FE        		ld	a,(PACNT)
  2F5C  B7            		or	a
  2F5D  C8            		ret	z
  2F5E                	PADWNLP2:
  2F5E  D1            		pop	de		;bit
  2F5F  E1            		pop	hl		;address
  2F60  3D            		dec	a
  2F61  32B7FE        		ld	(PACNT),a
  2F64  28AC          		jr	z,PADWN
  2F66  F5            		push	af
  2F67  CD122F        		call	PADWN
  2F6A  F1            		pop	af
  2F6B  18F1          		jr	PADWNLP2
                      	
                      	
  2F6D                	PAUP:
  2F6D  CDC42F        		call	PALINE
  2F70  C8            		ret	z
  2F71  E5            		push	hl		;address
  2F72  D5            		push	de		;bit
  2F73  ED4BB5FE      		ld	bc,(PAWRK)
  2F77  C5            		push	bc
  2F78  CD262F        		call	PADWN2
  2F7B  E1            		pop	hl
  2F7C  22B5FE        		ld	(PAWRK),hl
  2F7F  D1            		pop	de		;bit
  2F80  E1            		pop	hl		;address
                      	
  2F81                	PAUP2:
                      	;if (hl - start address) < 0020h
  2F81  3A92FD        		ld	a,(SCREEN1)
  2F84  E602          		and	02h		;0(screen mode 1) or 2(screen mode 3,4)
  2F86  5F            		ld	e,a
  2F87  7C            		ld	a,h
  2F88  E61F          		and	1fh
  2F8A  BB            		cp	e
  2F8B  2004          		jr	nz,PAUPNZ1
  2F8D  7D            		ld	a,l
  2F8E  FE20          		cp	20h
  2F90  D8            		ret	c
  2F91                	PAUPNZ1:
  2F91  01E0FF        		ld	bc,0-COLUMNS
  2F94  09            		add	hl,bc
                      	
  2F95  AF            		xor	a
  2F96  32B7FE        		ld	(PACNT),a
  2F99                	PAUPLP1:
  2F99  CD1E30        		call	SRCHOK
  2F9C  3812          		jr	c,CALLUP
  2F9E  E5            		push	hl		;address
  2F9F  21B7FE        		ld	hl,PACNT
  2FA2  34            		inc	(hl)
  2FA3  D5            		push	de		;bit
  2FA4  CDEA34        		call	CHKFRE
  2FA7  D1            		pop	de
  2FA8  E1            		pop	hl
  2FA9  E5            		push	hl
  2FAA  D5            		push	de
                      	
                      	;	ld	a,l
                      	;	inc	a
                      	;	and	1fh
                      	;	jr	nz,PAUPNZ2
                      	;	bit	0,d
                      	;	jr	nz,CALLUP
                      	;PAUPNZ2:
                      	;	call	INCGXPA
                      	
  2FAB  CD4B30        		call	SRCHNG
  2FAE  30E9          		jr	nc,PAUPLP1
                      	
  2FB0                	CALLUP:
  2FB0  3AB7FE        		ld	a,(PACNT)
  2FB3  B7            		or	a
  2FB4  C8            		ret	z
  2FB5                	PAUPLP2:
  2FB5  D1            		pop	de		;bit
  2FB6  E1            		pop	hl		;address
  2FB7  3D            		dec	a
  2FB8  32B7FE        		ld	(PACNT),a
  2FBB  28B0          		jr	z,PAUP
  2FBD  F5            		push	af
  2FBE  CD6D2F        		call	PAUP
  2FC1  F1            		pop	af
  2FC2  18F1          		jr	PAUPLP2
                      	
                      	
                      	;paint 1 line
                      	;input: hl=address, d=bit
                      	;output: hl, d, z-flag(1=not painted)
                      	;destroy: af,bc
  2FC4                	PALINE:
  2FC4  CD4D27        		call	STOPESC
  2FC7  CD0F30        		call	CHKPA
  2FCA  C8            		ret	z
  2FCB  E5            		push	hl		;address
  2FCC  D5            		push	de		;bit
  2FCD  CDF42F        		call	PAINTR
  2FD0  7D            		ld	a,l
  2FD1  E61F          		and	1fh
  2FD3  6F            		ld	l,a
  2FD4  62            		ld	h,d
  2FD5  22B5FE        		ld	(PAWRK),hl	;X_right
  2FD8  D1            		pop	de		;bit
  2FD9  E1            		pop	hl		;address
                      	;	jr	PAINTL		;z-flag=0
                      	
                      	
                      	;paint to left direction
                      	;input: hl=address, d=bit
                      	;output: hl, d, z-flag=0
                      	;destroy: af,bc
  2FDA                	PAINTL:
  2FDA  7D            		ld	a,l
  2FDB  E61F          		and	1fh
  2FDD  2003          		jr	nz,PALOK
  2FDF  CB7A          		bit	7,d
  2FE1  C0            		ret	nz
                      	
  2FE2                	PALOK:
  2FE2  CD0530        		call	DECGXPA
  2FE5  CD0F30        		call	CHKPA
  2FE8  20F0          		jr	nz,PAINTL
                      	;	jp	INCGXPA
                      	
                      	
                      	;increment x for paint
                      	;input: hl=address, d=bit
                      	;output: hl, d, z-flag=0
                      	;destroy: af
  2FEA                	INCGXPA:
  2FEA  CB0A          		rrc	d
  2FEC  E2F12F        		jp	po,INCGXPA4	;screen mode 4
  2FEF  CB0A          		rrc	d		;screen mode 1 or 3
  2FF1                	INCGXPA4:
  2FF1  D0            		ret	nc
  2FF2  23            		inc	hl
  2FF3  C9            		ret
                      	
                      	
                      	;paint to right direction
                      	;input: hl=address, d=bit
                      	;output: hl,d
                      	;destroy: af,bc
  2FF4                	PAINTR:
  2FF4  7D            		ld	a,l
  2FF5  3C            		inc	a
  2FF6  E61F          		and	1fh
  2FF8  2003          		jr	nz,PAROK
  2FFA  CB42          		bit	0,d
  2FFC  C0            		ret	nz
                      	
  2FFD                	PAROK:
  2FFD  CDEA2F        		call	INCGXPA
  3000  CD0F30        		call	CHKPA
  3003  20EF          		jr	nz,PAINTR
                      	;	jp	DECGXPA
                      	
                      	
                      	;decrement x for paint
                      	;input: hl=address, d=bit
                      	;output: hl, d
                      	;destroy: af
  3005                	DECGXPA:
  3005  CB02          		rlc	d
  3007  E20C30        		jp	po,DECGXPA4	;screen mode 4
  300A  CB02          		rlc	d		;screen mode 1 or 3
  300C                	DECGXPA4:
  300C  D0            		ret	nc
  300D  2B            		dec	hl
  300E  C9            		ret
                      	
                      	
                      	;check and paint
                      	;input: hl=address, d=bit
                      	;output: z(1=not painted)
                      	;destroy: af
  300F                	CHKPA:
  300F  3AC5FE        		ld	a,(BORDERA)
  3012  AE            		xor	(hl)
  3013  A2            		and	d
  3014  C8            		ret	z
                      	
  3015  3AACFE        		ld	a,(ATTDAT)
  3018  AE            		xor	(hl)
  3019  A2            		and	d
  301A  AE            		xor	(hl)
  301B  77            		ld	(hl),a
  301C  B2            		or	d		;d>0, reset z-flag
  301D  C9            		ret
                      	
                      	
                      	;search for paintable area
                      	;input: hl=address, d=bit
                      	;output: hl, d, c-flag(1=over,0=OK)
                      	;destroy: af,e
  301E                	SRCHOK:
  301E  7D            		ld	a,l
  301F  E61F          		and	1fh
  3021  5F            		ld	e,a
  3022  3AB5FE        		ld	a,(PAWRK)	;address low (5 bits)
  3025  BB            		cp	e
  3026  D8            		ret	c
                      	
  3027  2007          		jr	nz,SRCHOKNZ
  3029  3AB6FE        		ld	a,(PAWRK+1)	;bit
  302C  3D            		dec	a
  302D  BA            		cp	d
  302E  3F            		ccf
  302F  D8            		ret	c
                      	
  3030                	SRCHOKNZ:
  3030  5E            		ld	e,(hl)
  3031  3AC5FE        		ld	a,(BORDERA)
  3034  AB            		xor	e
  3035  A2            		and	d
  3036  2806          		jr	z,SRCHOKZ
                      	
  3038  3AACFE        		ld	a,(ATTDAT)
  303B  AB            		xor	e
  303C  A2            		and	d
  303D  C0            		ret	nz		;c-flag=0
                      	
  303E                	SRCHOKZ:
  303E  CDEA2F        		call	INCGXPA
  3041  7D            		ld	a,l
  3042  E61F          		and	1fh
  3044  20D8          		jr	nz,SRCHOK
  3046  7A            		ld	a,d
  3047  07            		rlca
  3048  30D4          		jr	nc,SRCHOK
  304A  C9            		ret			;c-flag=1
                      	
                      	
                      	;search for unpaintable area
                      	;get unpaintable area
                      	;input: hl=address, d=bit
                      	;output: hl, d, c-flag(1=over,0=NG)
                      	;destroy: af,e
  304B                	SRCHNG:
  304B  7D            		ld	a,l
  304C  E61F          		and	1fh
  304E  5F            		ld	e,a
  304F  3AB5FE        		ld	a,(PAWRK)	;address low (5 bits)
  3052  BB            		cp	e
  3053  D8            		ret	c
                      	
  3054  2007          		jr	nz,SRCHNGNZ
  3056  3AB6FE        		ld	a,(PAWRK+1)	;bit
  3059  3D            		dec	a
  305A  BA            		cp	d
  305B  3F            		ccf
  305C  D8            		ret	c
                      	
  305D                	SRCHNGNZ:
  305D  5E            		ld	e,(hl)
  305E  3AC5FE        		ld	a,(BORDERA)
  3061  AB            		xor	e
  3062  A2            		and	d
  3063  C8            		ret	z		;c-flag=0
                      	
  3064  CDEA2F        		call	INCGXPA
  3067  7D            		ld	a,l
  3068  E61F          		and	1fh
  306A  20DF          		jr	nz,SRCHNG
  306C  7A            		ld	a,d
  306D  07            		rlca
  306E  30DB          		jr	nc,SRCHNG
  3070  C9            		ret			;c-flag=1
                      	
                      	
                      	;STR$() function
  3071                	F_STR:
  3071  CD780B        		call	CHKNUM
  3074  CDAC3A        		call	FTOA
  3077  54            		ld	d,h
  3078  5D            		ld	e,l
                      	
  3079  06FF          		ld	b,0-1
  307B                	STRLP:
  307B  04            		inc	b
  307C  1A            		ld	a,(de)
  307D  13            		inc	de
  307E  B7            		or	a
  307F  20FA          		jr	nz,STRLP
                      	
  3081  78            		ld	a,b
  3082  CD2226        		call	MAKESTR
  3085  C3C227        		jp	INKYEND
                      	
                      	
                      	;put characters (skip first character)
  3088                	_PUTSINC:ds	PUTSINC-_PUTSINC
  30CE                		org	PUTSINC
                      	
  30CE  23            		inc	hl
                      	
                      	;put characters
                      	;input: hl,(DEVICE)=0:CRT, 1:printer, 2:RS-232C, 80h-ffh:CMT
                      	;destroy: af,hl,(bc,de,FAC1)
  30CF                	_PUTS:	ds	PUTS-_PUTS
  30CF                		org	PUTS
                      	
  30CF  7E            		ld	a,(hl)
  30D0  B7            		or	a
  30D1  C8            		ret	z
  30D2  FE22          		cp	22h		;double quotation mark
  30D4  C8            		ret	z
  30D5  CDC726        		call	PUTDEV
  30D8  18F4          		jr	PUTSINC
                      	
                      	
                      	;input: bc=candidate of string descriptor address
                      	;       hl=string descriptor address to be checked
                      	;	(GCWRK)=candidate of string data address to be comacted
                      	;	stack=string descriptor address pointing to same data (endmark=0000)
                      	;output: bc=string descriptor address to be compacted
                      	;	 (GCWRK)=string data address to be comacted
                      	;	 hl=next string descriptor address
                      	;	 stack=string descriptor address pointing to same data (endmark=0000)
                      	;destroy: af,de
  30DA                	GETSTR:
  30DA  E5            		push	hl
  30DB  7E            		ld	a,(hl)
  30DC  23            		inc	hl
  30DD  23            		inc	hl
  30DE  5E            		ld	e,(hl)
  30DF  23            		inc	hl
  30E0  56            		ld	d,(hl)
  30E1  23            		inc	hl
                      	
  30E2  B7            		or	a
  30E3  2852          		jr	z,GETNOSTR2	;length=0
                      	
  30E5  E5            		push	hl
  30E6  2A56FF        		ld	hl,(VARAD)
  30E9  E7            		rst	CPHLDE
  30EA  304A          		jr	nc,GETNOSTR	;in program area
  30EC  2A3DFF        		ld	hl,(STRAD)
  30EF  E7            		rst	CPHLDE
  30F0  3844          		jr	c,GETNOSTR	;in work area or have been compacted
  30F2  2A41FF        		ld	hl,(GCWRK)
  30F5  E7            		rst	CPHLDE
  30F6  E1            		pop	hl
  30F7  2811          		jr	z,GETSTRZ
  30F9  303C          		jr	nc,GETNOSTR2	;de < candidate
                      	
                      	;new candidate found
  30FB  ED5341FF      		ld	(GCWRK),de
  30FF  C1            		pop	bc
  3100  D1            		pop	de		;return address
                      	
  3101                	GETSTRLP:
  3101  F1            		pop	af		;pushed address (a=higher byte)
  3102  F5            		push	af
  3103  D5            		push	de		;return address
  3104  B7            		or	a
  3105  C8            		ret	z		;no data
  3106  D1            		pop	de		;return address
  3107  F1            		pop	af		;cancel
  3108  18F7          		jr	GETSTRLP
                      	
  310A                	GETSTRZ:
  310A  F1            		pop	af
  310B  D1            		pop	de		;return address
  310C  F5            		push	af
  310D  D5            		push	de		;return address
  310E  C9            		ret
                      	
                      	
                      	;garbage collection
                      	;destroy: af,bc,de,hl
  310F                	_GC:	ds	GC-_GC
  310F                		org	GC
                      	
  310F  2A27FF        		ld	hl,(STREND)
  3112  223DFF        		ld	(STRAD),hl
                      	
                      	;	ld	hl,0000h
  3115  2600          		ld	h,00h		;higher byte
  3117                	GCLP1:
  3117  E5            		push	hl
  3118  2241FF        		ld	(GCWRK),hl
  311B  2A56FF        		ld	hl,(VARAD)
                      	
                      	;normal variable
  311E                	GCVAR:
  311E  ED5B58FF      		ld	de,(ARRAD)
  3122  E7            		rst	CPHLDE
  3123  3014          		jr	nc,GCARR
  3125  23            		inc	hl
  3126  7E            		ld	a,(hl)
  3127  07            		rlca
  3128  3806          		jr	c,GCVARS
  312A  110600        		ld	de,0006h
  312D  19            		add	hl,de
  312E  18EE          		jr	GCVAR
  3130                	GCVARS:
  3130  23            		inc	hl
  3131  CDDA30        		call	GETSTR
  3134  18E8          		jr	GCVAR
                      	
                      	
  3136                	GETNOSTR:
  3136  E1            		pop	hl
  3137                	GETNOSTR2:
  3137  F1            		pop	af	;cancel
  3138  C9            		ret
                      	
                      	
                      	;array variable
  3139                	GCARR:
  3139  ED5B5AFF      		ld	de,(FREEAD)
  313D  E7            		rst	CPHLDE
  313E  3029          		jr	nc,GCSDSC
  3140  23            		inc	hl
  3141  7E            		ld	a,(hl)
  3142  23            		inc	hl
  3143  5E            		ld	e,(hl)
  3144  23            		inc	hl
  3145  56            		ld	d,(hl)
  3146  23            		inc	hl
  3147  07            		rlca
  3148  3803          		jr	c,GCARRS
  314A  19            		add	hl,de
  314B  18EC          		jr	GCARR
                      	
  314D                	GCARRS:
  314D  EB            		ex	de,hl
  314E  19            		add	hl,de
  314F  EB            		ex	de,hl
  3150  D5            		push	de
  3151  5E            		ld	e,(hl)		;dimensions
  3152  1600          		ld	d,00h
  3154  23            		inc	hl
  3155  19            		add	hl,de
  3156  19            		add	hl,de
  3157                	GCARRLP:
  3157  D1            		pop	de
  3158  E7            		rst	CPHLDE
  3159  30DE          		jr	nc,GCARR
  315B  ED5350FF      		ld	(TMP),de
  315F  CDDA30        		call	GETSTR
  3162  ED5B50FF      		ld	de,(TMP)
  3166  D5            		push	de
  3167  18EE          		jr	GCARRLP
                      	
                      	;temporary string descriptor
  3169                	GCSDSC:
  3169  212DFF        		ld	hl,STRDSC1
  316C  CDDA30        		call	GETSTR
                      	;	ld	hl,STRDSC2
  316F  CDDA30        		call	GETSTR
                      	;	ld	hl,STRDSC3
  3172  CDDA30        		call	GETSTR
                      	;	ld	hl,STRDSC4
  3175  CDDA30        		call	GETSTR
                      	
  3178  2A41FF        		ld	hl,(GCWRK)
  317B  7C            		ld	a,h
                      	;	or	l
  317C  B7            		or	a		;higher byte
  317D  D1            		pop	de		;cancel
  317E  C8            		ret	z
  317F  D5            		push	de
                      	
                      	;compaction
                      	;input:	bc=string descriptor address
                      	;	hl=string data address to be comacted
                      	
  3180  0A            		ld	a,(bc)
  3181  C5            		push	bc		;
  3182  0600          		ld	b,00h
  3184  4F            		ld	c,a
  3185  09            		add	hl,bc
  3186  2B            		dec	hl
  3187  ED5B3DFF      		ld	de,(STRAD)
  318B  EDB8          		lddr
  318D  ED533DFF      		ld	(STRAD),de
  3191  13            		inc	de
                      	
  3192  E1            		pop	hl		;
  3193                	GCLP2:
  3193  23            		inc	hl
  3194  23            		inc	hl
  3195  73            		ld	(hl),e
  3196  23            		inc	hl
  3197  72            		ld	(hl),d
  3198  E1            		pop	hl
  3199  7C            		ld	a,h
                      	;	or	l
  319A  B7            		or	a		;higher byte
  319B  CA1731        		jp	z,GCLP1
  319E  18F3          		jr	GCLP2
                      	
                      	
                      	;LEN() function
  31A0                	F_LEN:
  31A0  CD840B        		call	CHKSTR
  31A3                	SETI1A:
  31A3  6F            		ld	l,a
  31A4                	SETI1:
  31A4  CD5A0C        		call	I1TOF
  31A7                	SETTYP0:
  31A7  AF            		xor	a
  31A8  3225FF        		ld	(ARGTYP),a	;0=numeric
  31AB  C9            		ret
                      	
                      	
                      	;ASC() function
  31AC                	F_ASC:
  31AC  CD9226        		call	STRARG2
  31AF  B7            		or	a
  31B0  CAE503        		jp	z,FCERR
  31B3  1A            		ld	a,(de)
  31B4  18ED          		jr	SETI1A
                      	
                      	
                      	;CHR$() function
  31B6                	F_CHR:
  31B6  CD780B        		call	CHKNUM
  31B9  CD3507        		call	FTOI1
  31BC  43            		ld	b,e
  31BD  C3B027        		jp	INKYNZ
                      	
                      	
                      	;LEFT$() function
  31C0                	F_LEFT:
  31C0  CD9E26        		call	ARGSI1
  31C3  0E00          		ld	c,00h
  31C5  1824          		jr	MID
                      	
                      	
                      	;RIGHT$() function
  31C7                	F_RHT:
  31C7  CD9E26        		call	ARGSI1
  31CA  57            		ld	d,a		;
  31CB  93            		sub	e
  31CC  3001          		jr	nc,RHTNC
  31CE  AF            		xor	a
  31CF                	RHTNC:
  31CF  4F            		ld	c,a
  31D0  5A            		ld	e,d		;
  31D1  7A            		ld	a,d
  31D2  1817          		jr	MID
                      	
                      	
                      	;MID$() function
  31D4                	F_MID:
  31D4  CD9E26        		call	ARGSI1
  31D7  57            		ld	d,a		;length
  31D8  1D            		dec	e
  31D9  D5            		push	de		;d=length, e=2nd parameter-1
  31DA  1C            		inc	e
  31DB  CAE503        		jp	z,FCERR		;if 2nd parameter=0
                      	
  31DE  2A4EFF        		ld	hl,(PROGAD)
  31E1  1EFF          		ld	e,0ffh
  31E3  7E            		ld	a,(hl)
  31E4  FE2C          		cp	','
  31E6  CCBA26        		call	z,ARGI1
  31E9  C1            		pop	bc		;b=length, c=2nd parameter-1
  31EA  78            		ld	a,b
                      	
                      	;input: STRDSC1=string, a=string length, c=2nd parameter-1, e=3rd parameter
  31EB                	MID:
  31EB  91            		sub	c
  31EC  3001          		jr	nc,MIDNC
  31EE  AF            		xor	a
  31EF                	MIDNC:
  31EF  BB            		cp	e
  31F0  3801          		jr	c,MIDC
  31F2  7B            		ld	a,e
  31F3                	MIDC:
  31F3  47            		ld	b,a		;output length
  31F4  CD6526        		call	GCCHECK
  31F7  78            		ld	a,b		;output length
  31F8  2A2FFF        		ld	hl,(STRDSC1+2)
  31FB  0600          		ld	b,00h
  31FD  09            		add	hl,bc
  31FE  CD2226        		call	MAKESTR
  3201  2A4EFF        		ld	hl,(PROGAD)
  3204  CDA10B        		call	CHKRPAR
  3207  C3C227        		jp	INKYEND
                      	
                      	
                      	;VAL() function
  320A                	F_VAL:
  320A  CD9226        		call	STRARG2
  320D  EB            		ex	de,hl
  320E  CD9839        		call	ATOF
  3211  1894          		jr	SETTYP0
                      	
                      	
                      	;FRE() function
  3213                	F_FRE:
  3213  2125FF        		ld	hl,ARGTYP
  3216  7E            		ld	a,(hl)
  3217  B7            		or	a
  3218  2815          		jr	z,FRENUM
  321A  3D            		dec	a
  321B  C2DC03        		jp	nz,SNERR
                      	;string
  321E  77            		ld	(hl),a		;=0
  321F  322DFF        		ld	(STRDSC1),a	;=0
  3222  CD0F31        		call	GC
  3225  2A3DFF        		ld	hl,(STRAD)
  3228  ED5B5BFA      		ld	de,(STACK)
  322C  B7            		or	a
  322D  1807          		jr	CALCFRE
                      	;numeric
  322F                	FRENUM:
  322F  67            		ld	h,a		;a=0
  3230  6F            		ld	l,a
  3231  39            		add	hl,sp
  3232  ED5B5AFF      		ld	de,(FREEAD)
  3236                	CALCFRE:
                      	;	or	a
  3236  ED52          		sbc	hl,de
  3238  C35C0C        		jp	I2TOF
                      	
                      	
                      	;DIM command
  323B                	C_DIM:
  323B  CD8433        		call	CHKVAR
                      	
  323E  7E            		ld	a,(hl)
  323F  23            		inc	hl
  3240  FE28          		cp	'('
  3242  2049          		jr	nz,NOTARR
                      	
  3244  E5            		push	hl		;program address
  3245  CD2F34        		call	SRCHARR
  3248  D2F403        		jp	nc,DDERR
  324B  CD7A33        		call	SETARNM
  324E  E1            		pop	hl		;program address
  324F  D5            		push	de		;array address
  3250  CB79          		bit	7,c
  3252  010400        		ld	bc,4
  3255  2001          		jr	nz,DIMSTR
  3257  0C            		inc	c		;numeric:bc=5, string:bc=4
  3258                	DIMSTR:
  3258  D5            		push	de		;array address
  3259  C5            		push	bc		;element bytes
                      	
  325A  48            		ld	c,b		;b=0
  325B                	DIMLP:
  325B  C5            		push	bc		;dimensions
  325C  CD1B0E        		call	INT2ARG
  325F  C1            		pop	bc		;dimensions
  3260  CB7A          		bit	7,d
  3262  C2E503        		jp	nz,FCERR
  3265  0C            		inc	c
  3266  CAEB03        		jp	z,OMERR		;over 255 dimensions
  3269  13            		inc	de		;+1
  326A  E1            		pop	hl		;element bytes
                      	
  326B  EB            		ex	de,hl
  326C  E3            		ex	(sp),hl		;push size, pop array address
  326D  EB            		ex	de,hl
                      	
  326E  D5            		push	de		;array address
  326F  E5            		push	hl		;element bytes
  3270  2A4EFF        		ld	hl,(PROGAD)
  3273  7E            		ld	a,(hl)
  3274  23            		inc	hl
  3275  FE2C          		cp	','
  3277  28E2          		jr	z,DIMLP
  3279  FE29          		cp	')'
  327B  C2DC03        		jp	nz,SNERR
                      	
  327E                	CALLMKA:
  327E  CD4B34        		call	MAKEARR
  3281  2A4EFF        		ld	hl,(PROGAD)
                      	
  3284  2B            		dec	hl
  3285  D7            		rst	ANADAT
  3286  C8            		ret	z
  3287  23            		inc	hl
                      	
  3288  FE2C          		cp	','
  328A  C0            		ret	nz
  328B  18AE          		jr	C_DIM
                      	
                      	
  328D                	NOTARR:
  328D  2B            		dec	hl
  328E  224EFF        		ld	(PROGAD),hl
  3291  CDB633        		call	SRCHVAR
  3294  D0            		ret	nc
  3295  C3E033        		jp	MAKEVAR
                      	
                      	
                      	;get variable address
                      	;input: bc=variable name, hl=program address
                      	;output: de=variable address, (PROGAD)=next program address
                      	;destroy: FAC1,FAC2,af,de
  3298                	GETVAR:
  3298  C5            		push	bc
  3299  7E            		ld	a,(hl)
  329A  FE28          		cp	'('
  329C  280B          		jr	z,GETVARR
  329E  224EFF        		ld	(PROGAD),hl
  32A1  CDB633        		call	SRCHVAR
  32A4  DCE033        		call	c,MAKEVAR
  32A7  C1            		pop	bc
  32A8  C9            		ret
  32A9                	GETVARR:
  32A9  CDAE32        		call	GETARR
  32AC  C1            		pop	bc
  32AD  C9            		ret
                      	
                      	
                      	;get array address
                      	;input: bc=variable name, hl=program address of '('
                      	;output: de=array address
                      	;destroy: af,bc,hl
  32AE                	GETARR:
  32AE  23            		inc	hl
  32AF  224EFF        		ld	(PROGAD),hl
  32B2  C5            		push	bc		;variable name
  32B3  CD2F34        		call	SRCHARR
  32B6  300F          		jr	nc,ARROK
                      	
  32B8  D5            		push	de		;array address
  32B9  2A4EFF        		ld	hl,(PROGAD)
  32BC  E5            		push	hl		;program address
  32BD  CD4233        		call	DIMAUTO
  32C0  E1            		pop	hl		;program address
  32C1  224EFF        		ld	(PROGAD),hl
  32C4  D1            		pop	de		;array address
  32C5  13            		inc	de
  32C6  13            		inc	de
  32C7                	ARROK:
  32C7  EB            		ex	de,hl
  32C8  23            		inc	hl
  32C9  23            		inc	hl
  32CA  0600          		ld	b,00h
  32CC  4E            		ld	c,(hl)		;dimensions
  32CD  09            		add	hl,bc
  32CE  09            		add	hl,bc
  32CF  E5            		push	hl		;array address
  32D0  79            		ld	a,c
  32D1  08            		ex	af,af'		;dimensions
  32D2  F5            		push	af
  32D3  48            		ld	c,b		;=0
  32D4  C5            		push	bc		;pointer
  32D5  E5            		push	hl		;array address
  32D6  210100        		ld	hl,1
  32D9  2250FF        		ld	(TMP),hl	;multiplied sizes
                      	
  32DC                	GETALP:
  32DC  2A50FF        		ld	hl,(TMP)
  32DF  E5            		push	hl		;multiplied sizes
  32E0  2A4EFF        		ld	hl,(PROGAD)
  32E3  CD1B0E        		call	INT2ARG		;get suffix
  32E6  E1            		pop	hl		;multiplied sizes
  32E7  2250FF        		ld	(TMP),hl
  32EA  E1            		pop	hl		;array address
  32EB  D5            		push	de		;suffix
  32EC  56            		ld	d,(hl)		;de=size of each dimension
  32ED  2B            		dec	hl
  32EE  5E            		ld	e,(hl)
  32EF  2B            		dec	hl
  32F0  E3            		ex	(sp),hl		;push array address, pop suffix
  32F1  E7            		rst	CPHLDE
  32F2  D2F103        		jp	nc,BSERR
                      	
  32F5  D5            		push	de		;size
  32F6  ED5B50FF      		ld	de,(TMP)	;multiplied sizes
  32FA  CD6F24        		call	MULINT2		;hl = multiplied sizes * suffix
  32FD  C1            		pop	bc		;size
  32FE  EB            		ex	de,hl
  32FF  E1            		pop	hl		;array address
  3300  E3            		ex	(sp),hl		;push array address, pop pointer
  3301  19            		add	hl,de		;pointer += multiplied size * suffix
  3302  E5            		push	hl		;pointer
  3303  2A50FF        		ld	hl,(TMP)	;multiplied sizes
  3306  50            		ld	d,b		;size
  3307  59            		ld	e,c
  3308  CD6F24        		call	MULINT2		;hl = multiplied size * size
  330B  2250FF        		ld	(TMP),hl
  330E  E1            		pop	hl		;pointer
  330F  E3            		ex	(sp),hl		;push poniter, pop array address
  3310  E5            		push	hl		;array address
                      	
  3311  08            		ex	af,af'		;dimensions
  3312  3D            		dec	a
  3313  47            		ld	b,a
  3314  08            		ex	af,af'
  3315  2A4EFF        		ld	hl,(PROGAD)
  3318  7E            		ld	a,(hl)
  3319  FE2C          		cp	','
  331B  200A          		jr	nz,NOTCMM
  331D  23            		inc	hl
  331E  224EFF        		ld	(PROGAD),hl
  3321  04            		inc	b
                      	;	dec	b
                      	;	jr	nz,GETALP
  3322  10B8          		djnz	GETALP
  3324  C3DC03        		jp	SNERR
                      	
  3327                	NOTCMM:
  3327  04            		inc	b
  3328  05            		dec	b
  3329  C2F103        		jp	nz,BSERR
  332C  CDA10B        		call	CHKRPAR
                      	
  332F  D1            		pop	de		;array address
  3330  E1            		pop	hl		;pointer
  3331  F1            		pop	af
  3332  08            		ex	af,af'
  3333  D1            		pop	de		;array address
  3334  C1            		pop	bc		;variable name
  3335  79            		ld	a,c
  3336  44            		ld	b,h
  3337  4D            		ld	c,l
  3338  29            		add	hl,hl		;*2
  3339  29            		add	hl,hl		;*4
  333A  07            		rlca
  333B  3801          		jr	c,NCMMSTR
  333D  09            		add	hl,bc		;*5
  333E                	NCMMSTR:
  333E  19            		add	hl,de
  333F  23            		inc	hl
  3340  EB            		ex	de,hl
  3341  C9            		ret
                      	
                      	
  3342                	DIMAUTO:
  3342  CD7A33        		call	SETARNM
  3345  D5            		push	de		;array address
                      	
  3346  CB79          		bit	7,c
  3348  010400        		ld	bc,4
  334B  2001          		jr	nz,AUTOSTR
  334D  0C            		inc	c		;numeric:bc=5, string:bc=4
  334E                	AUTOSTR:
  334E  D5            		push	de		;array address
  334F  C5            		push	bc		;element bytes
                      	
  3350  2A4EFF        		ld	hl,(PROGAD)
  3353  48            		ld	c,b		;b=0
  3354                	AUTOLP1:
  3354  C5            		push	bc		;dimensions
  3355  CD1B0E        		call	INT2ARG		;de=size
                      	;	ld	a,d
                      	;	or	a
                      	;	jp	nz,BSERR
                      	;	ld	a,e
                      	;	ld	e,11		;de=10+1
                      	;	cp	e
                      	;	jp	nc,BSERR
                      	
  3358  110B00        		ld	de,11
                      	
  335B  C1            		pop	bc		;dimensions
  335C  0C            		inc	c
  335D  79            		ld	a,c
  335E  FE04          		cp	4
  3360  D2F103        		jp	nc,BSERR	;over 3 dimensions
                      	
  3363  EB            		ex	de,hl
  3364  D1            		pop	de		;element bytes
  3365  E3            		ex	(sp),hl		;push size, pop array address
  3366  E5            		push	hl		;array address
  3367  D5            		push	de		;element bytes
                      	
                      	
  3368  2A4EFF        		ld	hl,(PROGAD)
  336B  7E            		ld	a,(hl)
  336C  23            		inc	hl
  336D  FE2C          		cp	','
  336F  28E3          		jr	z,AUTOLP1
  3371  FE29          		cp	')'
  3373  C2DC03        		jp	nz,SNERR
  3376  CD4B34        		call	MAKEARR
  3379  C9            		ret
                      	
                      	
                      	;set array name
                      	;input: bc=name, de=array address
                      	;output: de=array address (next of name)
                      	;destroy: af,hl
  337A                	SETARNM:
  337A  EB            		ex	de,hl
  337B  CDED34        		call	CHKSTK
  337E  70            		ld	(hl),b
  337F  23            		inc	hl
  3380  71            		ld	(hl),c
  3381  23            		inc	hl
  3382  EB            		ex	de,hl
  3383  C9            		ret
                      	
                      	
                      	;check variable name
                      	;input: hl=program address
                      	;output: bc=name, hl=next address
                      	;destroy: af
  3384                	CHKVAR:
  3384  7E            		ld	a,(hl)
  3385  23            		inc	hl
  3386  FE20          		cp	' '
  3388  28FA          		jr	z,CHKVAR
  338A  47            		ld	b,a
  338B  D641          		sub	'A'
  338D  FE1A          		cp	'Z'-'A'+1
  338F  D2DC03        		jp	nc,SNERR
                      	;	call	GETNAME
                      	;	ret
                      	
                      	
                      	;get variable name
                      	;input: hl=2nd character address, b=1st character
                      	;output: bc=name, hl=next address
                      	;destroy: af
  3392                	GETNAME:
  3392  0E00          		ld	c,00h
  3394  2B            		dec	hl
  3395                	NAMELP1:
  3395  23            		inc	hl
  3396  7E            		ld	a,(hl)
  3397  FE20          		cp	' '
  3399  28FA          		jr	z,NAMELP1
  339B  FE24          		cp	'$'
  339D  2813          		jr	z,NAMESTR
  339F  CDBF0B        		call	ALPNUM
  33A2  D0            		ret	nc
  33A3  4F            		ld	c,a
  33A4                	NAMELP2:
  33A4  23            		inc	hl
  33A5  7E            		ld	a,(hl)
  33A6  FE20          		cp	' '
  33A8  28FA          		jr	z,NAMELP2
  33AA  CDBF0B        		call	ALPNUM
  33AD  38F5          		jr	c,NAMELP2
  33AF  FE24          		cp	'$'
  33B1  C0            		ret	nz
  33B2                	NAMESTR:
  33B2  23            		inc	hl
  33B3  CBF9          		set	7,c
  33B5  C9            		ret
                      	
                      	
                      	;search for variable
                      	;input: bc=variable name
                      	;output: de=variable address, c-flag(1=not found)
                      	;destroy: af,hl
  33B6                	SRCHVAR:
  33B6  2A5EFF        		ld	hl,(FNPAR)
  33B9  7D            		ld	a,l
  33BA  B8            		cp	b
  33BB  2006          		jr	nz,SRCHVMAIN
  33BD  7C            		ld	a,h
  33BE  B9            		cp	c
  33BF  1160FF        		ld	de,FNARG
  33C2  C8            		ret	z
                      	
  33C3                	SRCHVMAIN:
  33C3  ED5B56FF      		ld	de,(VARAD)
  33C7                	SRCHVLP:
  33C7  2A58FF        		ld	hl,(ARRAD)
  33CA  2B            		dec	hl
  33CB  E7            		rst	CPHLDE
  33CC  D8            		ret	c		;not found
  33CD  1A            		ld	a,(de)
  33CE  13            		inc	de
  33CF  B8            		cp	b		;
  33D0  1A            		ld	a,(de)
  33D1  13            		inc	de
  33D2  2002          		jr	nz,VARNEXT	;
  33D4  B9            		cp	c
  33D5  C8            		ret	z		;found
  33D6                	VARNEXT:
  33D6  07            		rlca			;c-flag=1 if string
  33D7  3F            		ccf
  33D8  210400        		ld	hl,6-2
  33DB  ED5A          		adc	hl,de
  33DD  EB            		ex	de,hl
  33DE  18E7          		jr	SRCHVLP
                      	
                      	
                      	;make variable
                      	;input: bc=variable name, de=variable address
                      	;output: de=de+2
                      	;destroy: af,bc,hl
  33E0                	MAKEVAR:
  33E0  C5            		push	bc		;variable name
  33E1  D5            		push	de		;variable address
                      	
  33E2  110600        		ld	de,6
  33E5  CB79          		bit	7,c
  33E7  2001          		jr	nz,MAKEVSTR	;numeric=7, string=6
  33E9  1C            		inc	e
  33EA                	MAKEVSTR:
  33EA  2A5AFF        		ld	hl,(FREEAD)
  33ED  ED4B58FF      		ld	bc,(ARRAD)
  33F1  B7            		or	a
  33F2  ED42          		sbc	hl,bc
  33F4  44            		ld	b,h
  33F5  4D            		ld	c,l
                      	
  33F6  2A5AFF        		ld	hl,(FREEAD)
                      	
  33F9  19            		add	hl,de
  33FA  D5            		push	de		;numeric=7, string=6
  33FB  CDED34        		call	CHKSTK
  33FE  D1            		pop	de		;numeric=7, string=6
  33FF  225AFF        		ld	(FREEAD),hl
  3402  2A58FF        		ld	hl,(ARRAD)
  3405  19            		add	hl,de
  3406  2258FF        		ld	(ARRAD),hl
                      	
  3409  78            		ld	a,b
  340A  B1            		or	c
  340B  280B          		jr	z,NOLDDR
  340D  2A5AFF        		ld	hl,(FREEAD)
  3410  E5            		push	hl		;
                      	;	or	a
  3411  ED52          		sbc	hl,de
  3413  2B            		dec	hl
  3414  D1            		pop	de		;
  3415  1B            		dec	de
  3416  EDB8          		lddr
  3418                	NOLDDR:
  3418  E1            		pop	hl		;variable address
  3419  C1            		pop	bc		;variable name
  341A  70            		ld	(hl),b
  341B  23            		inc	hl
  341C  71            		ld	(hl),c
  341D  23            		inc	hl
  341E  E5            		push	hl		;variable address
                      	
  341F  EB            		ex	de,hl
  3420  21AB0E        		ld	hl,ZERO
  3423  CB79          		bit	7,c
  3425  010400        		ld	bc,4
  3428  2001          		jr	nz,INISTR
  342A  0C            		inc	c		;numeric:bc=5, string:bc=4
  342B                	INISTR:
  342B  EDB0          		ldir
  342D  D1            		pop	de		;variable address
  342E  C9            		ret
                      	
                      	
                      	;search for array variable
                      	;input: bc=variable name
                      	;output: de=array address, c-flag(1=not found)
                      	;destroy: af,hl
  342F                	SRCHARR:
  342F  ED5B58FF      		ld	de,(ARRAD)
  3433                	SRCHALP:
  3433  2A5AFF        		ld	hl,(FREEAD)
  3436  2B            		dec	hl
  3437  E7            		rst	CPHLDE
  3438  D8            		ret	c		;not found
  3439  1A            		ld	a,(de)
  343A  13            		inc	de
  343B  B8            		cp	b		;
  343C  1A            		ld	a,(de)
  343D  13            		inc	de
  343E  2002          		jr	nz,ARRNEXT	;
  3440  B9            		cp	c
  3441  C8            		ret	z		;found
  3442                	ARRNEXT:
  3442  EB            		ex	de,hl
  3443  5E            		ld	e,(hl)
  3444  23            		inc	hl
  3445  56            		ld	d,(hl)
  3446  23            		inc	hl
  3447  19            		add	hl,de
  3448  EB            		ex	de,hl
  3449  18E8          		jr	SRCHALP
                      	
                      	
                      	;make array
                      	;input: c=dimensions, hl=program address
                      	;pushed: size*(1~255), array address, element bytes
                      	;destroy:
  344B                	MAKEARR:
  344B  224EFF        		ld	(PROGAD),hl
  344E  E1            		pop	hl		;return address
  344F  2250FF        		ld	(TMP),hl
  3452  D1            		pop	de		;element bytes
  3453  E1            		pop	hl		;array address
  3454  23            		inc	hl
  3455  23            		inc	hl
  3456  71            		ld	(hl),c		;dimensions
  3457  23            		inc	hl
  3458  EB            		ex	de,hl
                      	
  3459  41            		ld	b,c
  345A                	MKALP:
  345A  E3            		ex	(sp),hl		;push element bytes, pop size
  345B  EB            		ex	de,hl
  345C  73            		ld	(hl),e
  345D  23            		inc	hl
  345E  72            		ld	(hl),d
  345F  23            		inc	hl
  3460  E3            		ex	(sp),hl		;push array address, pop element bytes
  3461  C5            		push	bc		;dimensions
  3462  CD6F24        		call	MULINT2		;element bytes *= each dimension size
  3465  C1            		pop	bc		;dimensions
  3466  7A            		ld	a,d
  3467  B3            		or	e
  3468  C2F103        		jp	nz,BSERR	;for compatibility with N60-BASIC
  346B  D1            		pop	de		;array address
  346C  10EC          		djnz	MKALP
                      	
  346E  E5            		push	hl		;element bytes
  346F  EB            		ex	de,hl
  3470  60            		ld	h,b
  3471  69            		ld	l,c
  3472  29            		add	hl,hl
  3473  23            		inc	hl
  3474  19            		add	hl,de
  3475  DAEB03        		jp	c,OMERR
                      	
  3478  E5            		push	hl		;dimensions*2 + element bytes + 1
  3479  ED5B5AFF      		ld	de,(FREEAD)
  347D  13            		inc	de		;+2(total bytes)
  347E  13            		inc	de
  347F  13            		inc	de		;+2(name)
  3480  13            		inc	de
  3481  19            		add	hl,de
  3482  DAEB03        		jp	c,OMERR
  3485  CDED34        		call	CHKSTK
  3488  225AFF        		ld	(FREEAD),hl
                      	
  348B  79            		ld	a,c		;dimensions
  348C  D1            		pop	de		;dimensions*2 + element bytes + 1
  348D  E1            		pop	hl		;element bytes
  348E  E3            		ex	(sp),hl		;push element bytes, pop array address
                      	
  348F  73            		ld	(hl),e
  3490  23            		inc	hl
  3491  72            		ld	(hl),d
  3492  23            		inc	hl
  3493  23            		inc	hl
  3494  09            		add	hl,bc
  3495  09            		add	hl,bc
                      	
  3496  70            		ld	(hl),b		;b=0
  3497  54            		ld	d,h
  3498  5D            		ld	e,l
  3499  13            		inc	de
  349A  C1            		pop	bc		;element bytes
  349B  0B            		dec	bc
  349C  EDB0          		ldir
  349E  2A50FF        		ld	hl,(TMP)	;return address
  34A1  E9            		jp	(hl)
                      	
                      	
                      	;put into variable
                      	;input: bc=variable name, hl=program address, de=variable address
                      	;output: hl=next program address
                      	;destroy: FAC1,FAC2,af,bc,de
  34A2                	VARIN:
  34A2  CD5A3F        		call	SKIPSP
  34A5  FED2          		cp	EQ_		;0d2h
  34A7  C2DC03        		jp	nz,SNERR
                      	
  34AA  D5            		push	de		;variable address
  34AB  23            		inc	hl
  34AC  CB79          		bit	7,c
  34AE  2814          		jr	z,VARNUM
                      	
                      	;string
  34B0  CD8926        		call	STRARG
  34B3  47            		ld	b,a
  34B4  7A            		ld	a,d
  34B5  FEFA          		cp	0fah		;fa00h=work area start address
  34B7  78            		ld	a,b
  34B8  EB            		ex	de,hl
  34B9  D42226        		call	nc,MAKESTR
  34BC  212DFF        		ld	hl,STRDSC1
  34BF  010400        		ld	bc,0004h
  34C2  1809          		jr	VARINOK
                      	
  34C4                	VARNUM:
  34C4  CD6F0B        		call	NUMARGMO
  34C7  2166FF        		ld	hl,FAC1
  34CA  010500        		ld	bc,0005h
  34CD                	VARINOK:
  34CD  D1            		pop	de		;variable address
  34CE  EDB0          		ldir
  34D0  2A4EFF        		ld	hl,(PROGAD)
  34D3  C9            		ret
                      	
                      	
                      	;NEW command
  34D4                	C_NEW:
  34D4  214204        		ld	hl,EDIT
  34D7  E5            		push	hl
                      	
  34D8                	NEWRESSTK:
  34D8  21F934        		ld	hl,RESSTK
  34DB  E5            		push	hl
                      	;	jp	NEW
                      	
                      	;destroy: af,hl
  34DC                	NEW:
  34DC  2A29FF        		ld	hl,(BASICAD)
  34DF  AF            		xor	a
  34E0  77            		ld	(hl),a
  34E1  23            		inc	hl
  34E2  77            		ld	(hl),a
  34E3  23            		inc	hl
  34E4  77            		ld	(hl),a
  34E5  23            		inc	hl
  34E6  2256FF        		ld	(VARAD),hl
  34E9  C9            		ret
                      	
                      	
                      	;check free size
                      	;output: de=free size
                      	;destroy: f,hl
  34EA                	CHKFRE:
  34EA  2A5AFF        		ld	hl,(FREEAD)
                      	
                      	;check stack size
                      	;hl <= stack - 003bh?
                      	;input: hl=address
                      	;output: de=free size
                      	;destroy: f
  34ED                	CHKSTK:
  34ED  EB            		ex	de,hl
  34EE  21C6FF        		ld	hl,0-003bh+1
  34F1  39            		add	hl,sp
  34F2  ED52          		sbc	hl,de		;c-flag=1
  34F4  DAEB03        		jp	c,OMERR
  34F7  EB            		ex	de,hl
  34F8  C9            		ret
                      	
                      	
                      	;reset stack and variables
                      	;destroy: a,bc,de
  34F9                	_RESSTK:ds	RESSTK-_RESSTK
  34F9                		org	RESSTK
                      	
  34F9  EB            		ex	de,hl
  34FA  C1            		pop	bc		;return address
  34FB  ED7B5BFA      		ld	sp,(STACK)
  34FF  C5            		push	bc		;return address
  3500  3EFF          		ld	a,0ffh
  3502  3255FF        		ld	(STOPAD+1),a
                      	
  3505  2A56FF        		ld	hl,(VARAD)
  3508  2258FF        		ld	(ARRAD),hl
  350B  225AFF        		ld	(FREEAD),hl
  350E                	RSTRZ:
  350E  2A29FF        		ld	hl,(BASICAD)
  3511  225CFF        		ld	(DATAAD),hl
  3514  EB            		ex	de,hl
  3515  C9            		ret
                      	
                      	
                      	;RESTORE command
  3516                	C_RSTR:
  3516  CD613F        		call	CHKCLN
  3519  224EFF        		ld	(PROGAD),hl
  351C  28F0          		jr	z,RSTRZ
  351E  CD5F07        		call	GETLN
  3521  224EFF        		ld	(PROGAD),hl
  3524  CDF104        		call	SRCHLN
  3527  D2EE03        		jp	nc,ULERR
  352A  ED435CFF      		ld	(DATAAD),bc
  352E  C9            		ret
                      	
                      	
                      	;STOP command
  352F                	C_STOP:
  352F  CD613F        		call	CHKCLN
  3532  C2DC03        		jp	nz,SNERR
  3535  F1            		pop	af		;cancel return address
                      	
  3536                	STOP1:
  3536  7C            		ld	a,h
  3537  FEFA          		cp	0fah
  3539  300F          		jr	nc,STOPNC
  353B                	STOP2:
  353B  2254FF        		ld	(STOPAD),hl
  353E                	STOP3:
  353E  2A8FFD        		ld	hl,(SCREEN2)	;l=(SCREEN2),h=(SCREEN3)
  3541  22AAFE        		ld	(STOPSC2),hl	;(STOPSC2)=l,(STOPSC3)=h
  3544  2A5DFA        		ld	hl,(LINENUM)
  3547  2252FF        		ld	(STOPLN),hl
  354A                	STOPNC:
  354A  FB            		ei
  354B  AF            		xor	a
  354C  3218FA        		ld	(STOPFLG),a
                      	
  354F  CD5709        		call	PRTNLX
  3552  CD7B13        		call	CHGTXT
  3555  215E35        		ld	hl,BREAK
  3558  CDCF30        		call	PUTS
  355B  C32F04        		jp	PRTLNUM
                      	
  355E                	BREAK:
  355E  07427265616B00		db	07h, "Break", 00h
                      	
                      	
                      	;END command
  3565                	C_END:
  3565  F1            		pop	af		;cancel stack
  3566  C34204        		jp	EDIT
                      	
                      	
                      	;CONT command
  3569                	C_CONT:
  3569  F1            		pop	af		;cancel return address
                      	
  356A  7C            		ld	a,h
  356B  FEFA          		cp	0fah
  356D  DA0904        		jp	c,CNERR
                      	
  3570  2A54FF        		ld	hl,(STOPAD)
  3573  7C            		ld	a,h
  3574  FEFA          		cp	0fah
  3576  D24204        		jp	nc,EDIT		;if direct command mode
                      	
  3579  9F            		sbc	a,a		;c-flag=1
  357A  3255FF        		ld	(STOPAD+1),a	;a=ffh
                      	
  357D  EB            		ex	de,hl
  357E  2A52FF        		ld	hl,(STOPLN)
  3581  225DFA        		ld	(LINENUM),hl
  3584  2AAAFE        		ld	hl,(STOPSC2)	;l=(STOPSC2),h=(STOPSC3)
  3587  7D            		ld	a,l
  3588  CD0C14        		call	CHGACT
  358B  7C            		ld	a,h
  358C  CDED13        		call	CHGDSP
  358F  EB            		ex	de,hl
                      	
  3590  C30A07        		jp	INTPRT
                      	
                      	
                      	;CLEAR command
  3593                	C_CLR:
  3593  CD613F        		call	CHKCLN
  3596  CAF934        		jp	z,RESSTK
  3599  CD1B0E        		call	INT2ARG
  359C  CB7A          		bit	7,d
  359E  C2E503        		jp	nz,FCERR
  35A1  D5            		push	de		;1st parameter
  35A2  ED5B27FF      		ld	de,(STREND)
  35A6  13            		inc	de
  35A7  7E            		ld	a,(hl)
  35A8  FE2C          		cp	','
  35AA  2007          		jr	nz,CLRNZ
  35AC  23            		inc	hl
  35AD  CD6F0B        		call	NUMARGMO
  35B0  CDB10C        		call	FTOI
                      	
  35B3                	CLRNZ:
  35B3  2A8DFD        		ld	hl,(USREND)
  35B6  23            		inc	hl
  35B7  E7            		rst	CPHLDE
  35B8  DAE503        		jp	c,FCERR
  35BB  EB            		ex	de,hl
  35BC  C1            		pop	bc		;1st parameter
  35BD  2B            		dec	hl
                      	
                      	;input: bc=1st parameter, hl=2nd parameter-1
  35BE                	CLRMAIN:
  35BE  E5            		push	hl		;2nd parameter-1
  35BF  B7            		or	a
  35C0  ED42          		sbc	hl,bc
  35C2  EB            		ex	de,hl
  35C3  2A56FF        		ld	hl,(VARAD)
  35C6  013800        		ld	bc,0038h
  35C9  09            		add	hl,bc
  35CA  EB            		ex	de,hl
  35CB  E7            		rst	CPHLDE
  35CC  DAEB03        		jp	c,OMERR
  35CF  225BFA        		ld	(STACK),hl
  35D2  E1            		pop	hl		;2nd parameter-1
  35D3  2227FF        		ld	(STREND),hl
  35D6  223DFF        		ld	(STRAD),hl
  35D9  C3F934        		jp	RESSTK
                      	
                      	
                      	;NEXT command
  35DC                	C_NEXT:
  35DC  F1            		pop	af		;cancel return address
  35DD  0600          		ld	b,0
  35DF                	NEXTLP:
  35DF  CD613F        		call	CHKCLN
  35E2  C48433        		call	nz,CHKVAR
  35E5  224EFF        		ld	(PROGAD),hl
                      	
  35E8                	NEXTVLP:
  35E8  CDD107        		call	SRCHSTK
  35EB  CAD903        		jp	z,NFERR		;not found or gosub identifier found
  35EE  33            		inc	sp		;identifier
                      	
  35EF  D1            		pop	de		;variable address
                      	
  35F0  78            		ld	a,b
  35F1  B7            		or	a
  35F2  2813          		jr	z,NEXTOK
                      	
  35F4  1B            		dec	de
  35F5  1A            		ld	a,(de)
  35F6  B9            		cp	c
  35F7  2007          		jr	nz,NEXTNZ
  35F9  1B            		dec	de
  35FA  1A            		ld	a,(de)
  35FB  13            		inc	de
  35FC  13            		inc	de
  35FD  B8            		cp	b
  35FE  2807          		jr	z,NEXTOK
  3600                	NEXTNZ:
  3600  211000        		ld	hl,0010h	;STEP(6)+TO(6)+line number(2)+program address(2)
  3603  39            		add	hl,sp
  3604  F9            		ld	sp,hl
  3605  18E1          		jr	NEXTVLP
                      	
  3607                	NEXTOK:
  3607  CD3D39        		call	POPF1		;STEP value
  360A  CD1F39        		call	PUSHF1		;STEP value
                      	
  360D  D5            		push	de		;variable address
  360E  EB            		ex	de,hl
  360F  CD8036        		call	SETADDF
  3612  D1            		pop	de		;variable address
  3613  D5            		push	de		;variable address
  3614  2166FF        		ld	hl,FAC1
  3617  CD0D0C        		call	SETF
                      	
  361A  D1            		pop	de		;variable address
                      	
  361B  CD4C39        		call	POPF2		;STEP value
  361E  CD3D39        		call	POPF1		;TO value
  3621  CD1F39        		call	PUSHF1		;TO value
  3624  CD2E39        		call	PUSHF2		;STEP value
                      	
  3627  D5            		push	de		;variable address
                      	
  3628  2A70FF        		ld	hl,(FAC2+3)
  362B  7C            		ld	a,h
  362C  B7            		or	a		;z-flag
  362D  7D            		ld	a,l
  362E  07            		rlca			;c-flag
  362F  EB            		ex	de,hl		;variable address
  3630  CD180C        		call	SETF2		;no change in z,c-flag
  3633  2822          		jr	z,STEP0		;if STEP value = 0
  3635  DC6E39        		call	c,EXFAC		;if STEP value < 0
  3638  CD1D3F        		call	CMPF
  363B  381F          		jr	c,NEXTEND	;for-next loop end
                      	
  363D                	NEXTCONT:
  363D  210E00        		ld	hl,000eh	;variable address(2)+STEP(6)+TO(6)
  3640  39            		add	hl,sp
  3641  5E            		ld	e,(hl)
  3642  23            		inc	hl
  3643  56            		ld	d,(hl)
  3644  ED535DFA      		ld	(LINENUM),de
  3648  23            		inc	hl
  3649  5E            		ld	e,(hl)
  364A  23            		inc	hl
  364B  56            		ld	d,(hl)
  364C  ED534EFF      		ld	(PROGAD),de
  3650  3E81          		ld	a,FOR
  3652  F5            		push	af		;identifier
  3653  33            		inc	sp
  3654  C3E706        		jp	INTPEND
                      	
  3657                	STEP0:
  3657  CD1D3F        		call	CMPF
  365A  20E1          		jr	nz,NEXTCONT
                      	
  365C                	NEXTEND:
  365C  211200        		ld	hl,0012h	;variable address(2)+STEP(6)+TO(6)+line number(2)+program address(2)
  365F  39            		add	hl,sp
  3660  F9            		ld	sp,hl
                      	
  3661  2A4EFF        		ld	hl,(PROGAD)
  3664  7E            		ld	a,(hl)
  3665  23            		inc	hl
  3666  FE2C          		cp	','
  3668  C2E706        		jp	nz,INTPEND
  366B  47            		ld	b,a		;not variable name
  366C  C3DF35        		jp	NEXTLP
                      	
                      	
                      	;+ operator
  366F                	O_PLS:
  366F  3A25FF        		ld	a,(ARGTYP)
  3672  B7            		or	a
  3673  281A          		jr	z,ADDF
                      	
  3675                	PLSSTR:
  3675  D603          		sub	3		;string and string
  3677  CA2B26        		jp	z,ADDSTR
  367A  C3FD03        		jp	TMERR
                      	
                      	
                      	;FAC1=FAC1+1
                      	;destroy: FAC2,af,bc,de,hl
  367D                	INCF1:
  367D  21A10E        		ld	hl,PLSONE
                      	
                      	;set FAC2 and add
                      	;input: FAC1, hl=float address
  3680                	SETADDF:
  3680  CD180C        		call	SETF2
  3683  180A          		jr	ADDF
                      	
                      	
                      	;- operator
  3685                	O_MNS:
  3685  CD780B        		call	CHKNUM
                      	;	call	SUBF
                      	;	ret
                      	
                      	
                      	;FAC1 = FAC1 - FAC2
                      	;input: FAC1,FAC2
                      	;output: FAC1
                      	;destroy: FAC2,af,b,de,hl
  3688                	SUBF:
  3688  2170FF        		ld	hl,FAC2+3
  368B                	CHGSGNADD:
  368B  7E            		ld	a,(hl)
  368C  EE80          		xor	80h
  368E  77            		ld	(hl),a
                      	;	call	ADDF
                      	;	ret
                      	
                      	
                      	;FAC1 = FAC1 + FAC2
                      	;input: FAC1,FAC2
                      	;output: FAC1
                      	;destroy: FAC2,af,bc,de,hl
  368F                	ADDF:
  368F  2A70FF        		ld	hl,(FAC2+3)	;l=(FAC2+3),h=(FAC2+4)
  3692  7C            		ld	a,h
  3693  B7            		or	a
  3694  C8            		ret	z		;FAC2=0
                      	
  3695  E5            		push	hl
  3696  CBFD          		set	7,l
  3698  2270FF        		ld	(FAC2+3),hl
                      	
  369B  2A69FF        		ld	hl,(FAC1+3)	;l=(FAC1+3),h=(FAC1+4)
  369E  E5            		push	hl
  369F  CBFD          		set	7,l
  36A1  2269FF        		ld	(FAC1+3),hl
                      	
  36A4  94            		sub	h
  36A5  3814          		jr	c,ADD1GT2	;|FAC1| > |FAC2|
  36A7  2005          		jr	nz,ADD1LT2	;|FAC1| < |FAC2|
                      	
  36A9  CD1D3F        		call	CMPF
  36AC  380D          		jr	c,ADD1GT2	;|FAC1| > |FAC2|
                      	
  36AE                	ADD1LT2:
  36AE  CD6E39        		call	EXFAC
                      	
  36B1  D1            		pop	de		;e=(FAC1+3),d=(FAC1+4)
  36B2  E1            		pop	hl		;l=(FAC2+3),h=(FAC2+4)
                      	
  36B3  7A            		ld	a,d
  36B4  B7            		or	a
  36B5  2006          		jr	nz,ADDCHKSGN
  36B7  2269FF        		ld	(FAC1+3),hl
  36BA  C9            		ret
                      	
  36BB                	ADD1GT2:
  36BB  E1            		pop	hl		;l=(FAC1+3),h=(FAC1+4)
  36BC  D1            		pop	de		;e=(FAC2+3),d=(FAC2+4)
                      	
  36BD                	ADDCHKSGN:
  36BD  7C            		ld	a,h
  36BE  92            		sub	d
  36BF  47            		ld	b,a		;
                      	
  36C0  7D            		ld	a,l
  36C1  F5            		push	af		;sign
                      	
  36C2  AB            		xor	e
  36C3  07            		rlca
  36C4  F5            		push	af		;c-flag=0:same sign
  36C5  3009          		jr	nc,SAMESGN
                      	
  36C7  CD6E39        		call	EXFAC
  36CA  CDEE24        		call	NEGINT4
  36CD  CD6E39        		call	EXFAC
                      	
  36D0                	SAMESGN:
  36D0  0E00          		ld	c,0		;guard/round/sticky bit
  36D2  2A6DFF        		ld	hl,(FAC2)
  36D5  ED5B6FFF      		ld	de,(FAC2+2)
                      	
  36D9                	ADDFLP1:
  36D9  78            		ld	a,b
  36DA  D608          		sub	08h
  36DC  3818          		jr	c,EXPLT8
  36DE  47            		ld	b,a
                      	
  36DF  7D            		ld	a,l
  36E0  E63F          		and	3fh
  36E2  2004          		jr	nz,SETSBIT
  36E4  0C            		inc	c
  36E5  0D            		dec	c
  36E6  2802          		jr	z,NOSBIT
  36E8                	SETSBIT:
  36E8  0E20          		ld	c,20h		;set sticky bit
  36EA                	NOSBIT:
  36EA  AD            		xor	l
  36EB  B1            		or	c
  36EC  4F            		ld	c,a
  36ED  6C            		ld	l,h
  36EE  63            		ld	h,e
  36EF  5A            		ld	e,d
  36F0  F1            		pop	af		;same sign?
  36F1  F5            		push	af
  36F2  9F            		sbc	a,a		;00h or ffh
  36F3  57            		ld	d,a
  36F4  18E3          		jr	ADDFLP1
                      	
  36F6                	EXPLT8:
  36F6  C608          		add	a,08h
  36F8  2813          		jr	z,SAMEEXP
                      	
  36FA                	ADDFLP2:
  36FA  F1            		pop	af		;same sign?
  36FB  F5            		push	af
  36FC  CB1A          		rr	d
  36FE  CB1B          		rr	e
  3700  CB1C          		rr	h
  3702  CB1D          		rr	l
                      	
  3704  79            		ld	a,c
  3705  CB19          		rr	c
  3707  E620          		and	20h		;sticky bit
  3709  B1            		or	c
                      	;	and	0e0h
  370A  4F            		ld	c,a
  370B  10ED          		djnz	ADDFLP2
                      	
  370D                	SAMEEXP:
  370D  226DFF        		ld	(FAC2),hl
  3710  ED536FFF      		ld	(FAC2+2),de
                      	
  3714  EB            		ex	de,hl
                      	
  3715  2A66FF        		ld	hl,(FAC1)
                      	;	ld	de,(FAC2)
  3718  19            		add	hl,de
  3719  2266FF        		ld	(FAC1),hl
  371C  2A68FF        		ld	hl,(FAC1+2)
  371F  ED5B6FFF      		ld	de,(FAC2+2)
  3723  ED5A          		adc	hl,de
  3725  2268FF        		ld	(FAC1+2),hl
                      	
  3728  17            		rla
  3729  E1            		pop	hl		;l-bit0=same sign?
  372A  AD            		xor	l
  372B  0F            		rrca
  372C  301A          		jr	nc,SEARCH1
                      	
  372E  216AFF        		ld	hl,FAC1+4
  3731  34            		inc	(hl)
  3732  CAE803        		jp	z,OVERR
                      	
                      	;	scf			;c-flag=1
  3735  2D            		dec	l		;dec hl,FAC1+3
  3736  CB1E          		rr	(hl)
  3738  2D            		dec	l		;dec hl,FAC1+2
  3739  CB1E          		rr	(hl)
  373B  2D            		dec	l		;dec hl,FAC1+1
  373C  CB1E          		rr	(hl)
  373E  2D            		dec	l		;dec hl,FAC1
  373F  CB1E          		rr	(hl)
                      	
  3741  79            		ld	a,c
  3742  CB19          		rr	c
  3744  E620          		and	20h		;sticky bit
  3746  B1            		or	c
                      	;	and	0e0h
  3747  4F            		ld	c,a
                      	
  3748                	SEARCH1:
  3748  2A66FF        		ld	hl,(FAC1)
  374B  ED5B68FF      		ld	de,(FAC1+2)
                      	;	ld	a,h
                      	;	or	l
                      	;	or	d
                      	;	or	e
                      	;	or	c
                      	;	jp	z,MULFZERO
                      	
  374F                	ADDFLP3:
  374F  CB7A          		bit	7,d
  3751  2014          		jr	nz,CHKROUND
  3753  CB21          		sla	c
  3755  ED6A          		adc	hl,hl
  3757  CB13          		rl	e
  3759  CB12          		rl	d
  375B  3A6AFF        		ld	a,(FAC1+4)
  375E  3D            		dec	a
  375F  326AFF        		ld	(FAC1+4),a
  3762  20EB          		jr	nz,ADDFLP3
  3764  C33338        		jp	MULFZERO	;pop af/jp SETZERO
                      	
                      	;round to the nearest even
  3767                	CHKROUND:
  3767  7D            		ld	a,l
  3768  0F            		rrca
  3769  79            		ld	a,c
  376A  8F            		adc	a,a
  376B  3015          		jr	nc,ADDSGN	;guard bit=0
  376D  2813          		jr	z,ADDSGN	;round bit=0 and sticky bit=0 and l=even
                      	
                      	;round up
  376F  23            		inc	hl
  3770  7C            		ld	a,h
  3771  B5            		or	l
  3772  200E          		jr	nz,ADDSGN
  3774  13            		inc	de
  3775  7A            		ld	a,d
  3776  B3            		or	e
  3777  2009          		jr	nz,ADDSGN
                      	
  3779  216AFF        		ld	hl,FAC1+4
  377C  34            		inc	(hl)
  377D  CAE803        		jp	z,OVERR
                      	;	ld	d,80h
  3780  63            		ld	h,e		;e=0
  3781  6B            		ld	l,e		;e=0
                      	
  3782                	ADDSGN:
  3782  F1            		pop	af		;sign
  3783  AA            		xor	d
  3784  E680          		and	80h
  3786  AA            		xor	d
  3787  57            		ld	d,a
                      	
                      	;set 4-byte integer in FAC1
                      	;input: de-hl
  3788                	SETI4:
  3788  2266FF        		ld	(FAC1),hl
  378B  ED5368FF      		ld	(FAC1+2),de
  378F  C9            		ret
                      	
                      	
                      	;FAC1 = FAC1 * 10
                      	;input: FAC1
                      	;output: FAC1
                      	;destroy: FAC2,af,bc,de,hl
  3790                	MULF10:
  3790  219837        		ld	hl,TEN
  3793  CD180C        		call	SETF2
  3796  1808          		jr	MULF
                      	
  3798                	TEN:
  3798  0000002084    		db	00h, 00h, 00h, 20h, 84h
                      	
                      	
                      	;* operator
  379D                	O_MUL:
  379D  CD780B        		call	CHKNUM
                      	;	call	MULF
                      	;	ret
                      	
                      	
                      	;FAC1 = FAC1 * FAC2
                      	;input: FAC1,FAC2
                      	;output: FAC1
                      	;destroy: FAC2,af,bc,de,hl
  37A0                	MULF:
                      	
                      	;result=bc-de-de'-hl'
                      	
  37A0  3A6AFF        		ld	a,(FAC1+4)
  37A3  B7            		or	a
  37A4  C8            		ret	z
                      	
  37A5  2171FF        		ld	hl,FAC2+4
  37A8  7E            		ld	a,(hl)
  37A9  B7            		or	a
  37AA  CA070C        		jp	z,SETZERO
                      	
  37AD  2D            		dec	l		;dec hl,FAC2+3
  37AE  7E            		ld	a,(hl)
  37AF  CBFE          		set	7,(hl)
  37B1  2E69          		ld	l,FAC1+3-(FAC1+3)/256*256	;hl=FAC1+3
  37B3  AE            		xor	(hl)
  37B4  F5            		push	af		;sign
  37B5  CBFE          		set	7,(hl)
                      	
  37B7  010000        		ld	bc,0000h
  37BA  50            		ld	d,b
  37BB  59            		ld	e,c
                      	
  37BC  D9            		exx
  37BD  E5            		push	hl
  37BE  D5            		push	de
  37BF  C5            		push	bc
                      	
  37C0  2A66FF        		ld	hl,(FAC1)
  37C3  ED5B68FF      		ld	de,(FAC1+2)
                      	;	or	a		;c-flag=0
                      	
  37C7  0620          		ld	b,20h
  37C9                	MULFLP:
                      	;shift result and FAC1
  37C9  D9            		exx
  37CA  CB18          		rr	b
  37CC  CB19          		rr	c
  37CE  CB1A          		rr	d
  37D0  CB1B          		rr	e
  37D2  D9            		exx
  37D3  CB1A          		rr	d
  37D5  CB1B          		rr	e
  37D7  CB1C          		rr	h
  37D9  CB1D          		rr	l
  37DB  300E          		jr	nc,MULFNC1
                      	
                      	;add
  37DD  D9            		exx
  37DE  2A6DFF        		ld	hl,(FAC2)
  37E1  19            		add	hl,de
  37E2  EB            		ex	de,hl
  37E3  2A6FFF        		ld	hl,(FAC2+2)
  37E6  ED4A          		adc	hl,bc
  37E8  44            		ld	b,h
  37E9  4D            		ld	c,l
  37EA  D9            		exx
  37EB                	MULFNC1:
  37EB  10DC          		djnz	MULFLP
                      	
  37ED  D9            		exx
  37EE  216AFF        		ld	hl,FAC1+4
  37F1  300D          		jr	nc,MULFNC2
                      	
                      	;shift result
  37F3  CB18          		rr	b
  37F5  CB19          		rr	c
  37F7  CB1A          		rr	d
  37F9  CB1B          		rr	e
  37FB  D9            		exx
  37FC  CB1A          		rr	d
                      	;	rr	e
                      	;	rr	h
                      	;	rr	l
  37FE  D9            		exx
  37FF  34            		inc	(hl)
                      	
  3800                	MULFNC2:
  3800  35            		dec	(hl)		;;
                      	
                      	;round to the nearest even
  3801  D9            		exx
  3802  7A            		ld	a,d
  3803  8F            		adc	a,a		;check d-bit7
  3804  3041          		jr	nc,NOROUNDUP
  3806  B3            		or	e
  3807  B4            		or	h
  3808  B5            		or	l
  3809  C1            		pop	bc
  380A  D1            		pop	de
  380B  E1            		pop	hl
  380C  D9            		exx
  380D  2004          		jr	nz,ROUNDUP
  380F  7B            		ld	a,e
  3810  0F            		rrca
  3811  300E          		jr	nc,MULFEND
                      	
  3813                	ROUNDUP:
  3813  13            		inc	de
  3814  7A            		ld	a,d
  3815  B3            		or	e
  3816  2009          		jr	nz,MULFEND
  3818  03            		inc	bc
  3819  78            		ld	a,b
  381A  B1            		or	c
  381B  2004          		jr	nz,MULFEND
                      	;	ld	b,80h
  381D  34            		inc	(hl)
  381E  CAE803        		jp	z,OVERR
                      	
  3821                	MULFEND:
  3821  ED5366FF      		ld	(FAC1),de
  3825  ED4368FF      		ld	(FAC1+2),bc
                      	
                      	;exponent
  3829  3A71FF        		ld	a,(FAC2+4)
  382C  86            		add	a,(hl)
  382D  3808          		jr	c,MULFC
  382F  D680          		sub	80h		;;not 81h
  3831  3009          		jr	nc,MULEXP
                      	
  3833                	MULFZERO:
  3833  F1            		pop	af		;cancel
  3834  C3070C        		jp	SETZERO
                      	
  3837                	MULFC:
  3837  D680          		sub	80h		;;not 81h
  3839                	MULFCHKOV:
  3839  D2E803        		jp	nc,OVERR
  383C                	MULEXP:
  383C  77            		ld	(hl),a		;exponent
  383D  28F4          		jr	z,MULFZERO
  383F  2D            		dec	l		;dec hl,FAC1+3
  3840  F1            		pop	af		;sign
  3841  07            		rlca
  3842  7E            		ld	a,(hl)
  3843  17            		rla
  3844  0F            		rrca
  3845  77            		ld	(hl),a
  3846  C9            		ret
                      	
  3847                	NOROUNDUP:
  3847  C1            		pop	bc
  3848  D1            		pop	de
  3849  E1            		pop	hl
  384A  D9            		exx
  384B  18D4          		jr	MULFEND
                      	
                      	
                      	;FAC1 = FAC1 * 0.1
                      	;input: FAC1
                      	;output: FAC1
                      	;destroy: FAC2,af,bc,de,hl
  384D                	DIVF10:
  384D  215638        		ld	hl,EM1
  3850  CD180C        		call	SETF2
  3853  C3A037        		jp	MULF
                      	
                      	;0.1
  3856                	EM1:
  3856  CDCCCC4C7D    		db	0cdh, 0cch, 0cch, 4ch, 7dh
                      	
                      	
                      	;/ operator
  385B                	O_DIV:
  385B  CD780B        		call	CHKNUM
                      	;	call	DIVF
                      	;	ret
                      	
                      	
                      	;FAC1 = FAC1 / FAC2
                      	;input: FAC1,FAC2
                      	;output: FAC1
                      	;destroy: FAC2,af,bc,de,hl
  385E                	DIVF:
  385E  3A6AFF        		ld	a,(FAC1+4)
  3861  B7            		or	a
  3862  C8            		ret	z
                      	
  3863  2171FF        		ld	hl,FAC2+4
  3866  7E            		ld	a,(hl)
  3867  B7            		or	a
  3868  CAF703        		jp	z,DIV0ERR
                      	
  386B  2D            		dec	l		;dec hl,FAC2+3
  386C  7E            		ld	a,(hl)
  386D  CBFE          		set	7,(hl)
  386F  2E69          		ld	l,FAC1+3-(FAC1+3)/256*256	;hl=FAC1+3
  3871  AE            		xor	(hl)
  3872  F5            		push	af		;sign
  3873  CBFE          		set	7,(hl)
                      	
  3875  210000        		ld	hl,0000h
  3878  54            		ld	d,h
  3879  5D            		ld	e,l
                      	
  387A  D9            		exx			;
  387B  E5            		push	hl
  387C  D5            		push	de
                      	
  387D  CD0425        		call	CMPINT4
  3880  3007          		jr	nc,DIVFNC
  3882  216AFF        		ld	hl,FAC1+4
  3885  35            		dec	(hl)
  3886  CD3C3F        		call	SLAF1
                      	
  3889                	DIVFNC:
  3889  0620          		ld	b,20h
  388B                	DIVFLP:
  388B  3805          		jr	c,DIVFC1
  388D  CD0425        		call	CMPINT4
  3890  381A          		jr	c,DIVFC2
  3892                	DIVFC1:
  3892  2A66FF        		ld	hl,(FAC1)
  3895  ED5B6DFF      		ld	de,(FAC2)
  3899  B7            		or	a
  389A  ED52          		sbc	hl,de
  389C  2266FF        		ld	(FAC1),hl
  389F  2A68FF        		ld	hl,(FAC1+2)
  38A2  ED5B6FFF      		ld	de,(FAC2+2)
  38A6  ED52          		sbc	hl,de
  38A8  2268FF        		ld	(FAC1+2),hl
  38AB  B7            		or	a		;reset c-flag
  38AC                	DIVFC2:
  38AC  3F            		ccf
  38AD  D9            		exx			;
  38AE  ED6A          		adc	hl,hl
  38B0  CB13          		rl	e
  38B2  CB12          		rl	d
  38B4  D9            		exx			;
                      	
  38B5  CD3C3F        		call	SLAF1
  38B8  10D1          		djnz	DIVFLP
                      	
  38BA  17            		rla			;store c-flag
  38BB  CD0425        		call	CMPINT4		;no change in a
  38BE  D1            		pop	de
  38BF  E1            		pop	hl
  38C0  D9            		exx
                      	
  38C1  1F            		rra
  38C2  3809          		jr	c,DIVFUP
  38C4  07            		rlca
  38C5  381B          		jr	c,DIVFNOUP
                      	
                      	;round to the nearest even
  38C7  2004          		jr	nz,DIVFUP
  38C9  7D            		ld	a,l
  38CA  0F            		rrca
  38CB  3015          		jr	nc,DIVFNOUP
                      	
                      	;round up
  38CD                	DIVFUP:
  38CD  23            		inc	hl
  38CE  7C            		ld	a,h
  38CF  B5            		or	l
  38D0  2010          		jr	nz,DIVFNOUP
  38D2  13            		inc	de
  38D3  7A            		ld	a,d
  38D4  B3            		or	e
  38D5  200B          		jr	nz,DIVFNOUP
  38D7  216AFF        		ld	hl,FAC1+4
  38DA  34            		inc	(hl)
  38DB  CAE803        		jp	z,OVERR
  38DE  EB            		ex	de,hl		;hl<-0
  38DF  110080        		ld	de,8000h
                      	
  38E2                	DIVFNOUP:
  38E2  2266FF        		ld	(FAC1),hl
  38E5  ED5368FF      		ld	(FAC1+2),de
                      	
  38E9  3A71FF        		ld	a,(FAC2+4)
  38EC  47            		ld	b,a
  38ED  216AFF        		ld	hl,FAC1+4
  38F0  7E            		ld	a,(hl)
  38F1  90            		sub	b
  38F2  3806          		jr	c,DIVF1LT2
                      	
                      	;FAC1>=FAC2
  38F4  C681          		add	a,81h
  38F6  3F            		ccf
  38F7  C33938        		jp	MULFCHKOV
                      	
                      	
                      	;FAC1<FAC2
  38FA                	DIVF1LT2:
  38FA  F2070C        		jp	p,SETZERO
  38FD  C681          		add	a,81h
  38FF  C33C38        		jp	MULEXP
                      	
                      	
                      	;continued from CHKSGN
  3902                	CHKSGN2:
  3902  3A69FF        		ld	a,(FAC1+3)
  3905  07            		rlca
  3906  9F            		sbc	a,a		;00h or ffh
  3907  D8            		ret	c		;ffh
  3908  3C            		inc	a
  3909  C9            		ret			;01h
                      	
                      	
                      	;SGN() function
  390A                	F_SGN:
  390A  CD780B        		call	CHKNUM
  390D  EF            		rst	CHKSGN
  390E  C8            		ret	z
  390F  3C            		inc	a
  3910  CA1D0C        		jp	z,SETMNS1
  3913  C34122        		jp	SETPLS1
                      	
                      	
                      	;ABS() function
  3916                	F_ABS:
  3916  CD780B        		call	CHKNUM
  3919                	ABS:
  3919  2169FF        		ld	hl,FAC1+3
  391C  CBBE          		res	7,(hl)
  391E  C9            		ret
                      	
                      	
                      	;push FAC1
                      	;input: FAC1
                      	;output: sp=sp-6
                      	;destroy: af,hl
  391F                	PUSHF1:
  391F  F1            		pop	af		;return address
  3920  2A69FF        		ld	hl,(FAC1+3)
  3923  E5            		push	hl
  3924  2A67FF        		ld	hl,(FAC1+1)
  3927  E5            		push	hl
  3928  2A65FF        		ld	hl,(FAC1-1)
  392B  E5            		push	hl
  392C  F5            		push	af		;
  392D  C9            		ret
                      	
                      	
                      	;push FAC2
                      	;input: FAC2
                      	;output: sp=sp-6
                      	;destroy: af,hl
  392E                	PUSHF2:
  392E  F1            		pop	af		;return address
  392F  2A70FF        		ld	hl,(FAC2+3)
  3932  E5            		push	hl
  3933  2A6EFF        		ld	hl,(FAC2+1)
  3936  E5            		push	hl
  3937  2A6CFF        		ld	hl,(FAC2-1)
  393A  E5            		push	hl
  393B  F5            		push	af		;
  393C  C9            		ret
                      	
                      	
                      	;pop FAC1
                      	;input: none
                      	;output: FAC1,sp=sp+6
                      	;destroy: af,hl
  393D                	POPF1:
  393D  F1            		pop	af		;return address
  393E  E1            		pop	hl
  393F  2265FF        		ld	(FAC1-1),hl
  3942  E1            		pop	hl
  3943  2267FF        		ld	(FAC1+1),hl
  3946  E1            		pop	hl
  3947  2269FF        		ld	(FAC1+3),hl
  394A  F5            		push	af		;
  394B  C9            		ret
                      	
                      	
                      	;pop FAC2
                      	;input: none
                      	;output: FAC2,sp=sp+6
                      	;destroy: af,hl
  394C                	POPF2:
  394C  F1            		pop	af		;return address
  394D  E1            		pop	hl
  394E  226CFF        		ld	(FAC2-1),hl
  3951  E1            		pop	hl
  3952  226EFF        		ld	(FAC2+1),hl
  3955  E1            		pop	hl
  3956  2270FF        		ld	(FAC2+3),hl
  3959  F5            		push	af		;
  395A  C9            		ret
                      	
                      	
                      	;copy FAC1 to FAC2
                      	;input: FAC1
                      	;output: FAC2
                      	;destroy: hl
  395B                	CPYFAC:
  395B  2A65FF        		ld	hl,(FAC1-1)
  395E  226CFF        		ld	(FAC2-1),hl
  3961  2A67FF        		ld	hl,(FAC1+1)
  3964  226EFF        		ld	(FAC2+1),hl
  3967  2A69FF        		ld	hl,(FAC1+3)
  396A  2270FF        		ld	(FAC2+3),hl
  396D  C9            		ret
                      	
                      	
                      	;exchange FAC1 and FAC2
                      	;input: FAC1,FAC2
                      	;output: FAC1,FAC2
                      	;destroy: hl
  396E                	EXFAC:
  396E  F5            		push	af
  396F  CD2E39        		call	PUSHF2
  3972  CD5B39        		call	CPYFAC
  3975  CD3D39        		call	POPF1
  3978  F1            		pop	af
  3979  C9            		ret
                      	
                      	
                      	;print 1-byte integer (unsigned)
                      	;input: a
                      	;destroy: af,bc,de,hl
  397A                	_PUTI1:	ds	PUTI1-_PUTI1
  397A                		org	PUTI1
                      	
  397A  2600          		ld	h,0
  397C  6F            		ld	l,a
  397D  C3A13A        		jp	PUTI2
                      	
                      	
                      	;INT() function
                      	;(round toward minus infinity)
  3980                	F_INT:
  3980  CD780B        		call	CHKNUM
  3983                	INT:
  3983  CD5B39        		call	CPYFAC
  3986  CDE20C        		call	GETINT
  3989  3A70FF        		ld	a,(FAC2+3)
  398C  07            		rlca
  398D  D0            		ret	nc
  398E  CD1D3F        		call	CMPF
  3991  C8            		ret	z
  3992  21A60E        		ld	hl,MNSONE
  3995  C38036        		jp	SETADDF
                      	
                      	
                      	;convert string to float
                      	;input: a=max length, hl=program address
                      	;output: FAC1, hl=next address (except for VAL())
                      	;destroy: FAC2, af,bc,de
  3998                	ATOF:
  3998  47            		ld	b,a
  3999  CD893A        		call	SKIPSPB
  399C  CA070C        		jp	z,SETZERO
  399F  FE26          		cp	'&'
  39A1  CA383A        		jp	z,ATOFHEX
  39A4  2B            		dec	hl
                      	
  39A5  CDFC27        		call	ATOIF
                      	
  39A8  CD893A        		call	SKIPSPB
  39AB  C8            		ret	z
  39AC  0E00          		ld	c,0		;after-dot counter
  39AE  FE2E          		cp	'.'
  39B0  280F          		jr	z,ATOFDOT
  39B2  05            		dec	b
  39B3  F620          		or	20h
  39B5  FE65          		cp	'e'
  39B7  281B          		jr	z,ATOFEXP
  39B9  2B            		dec	hl
  39BA  C9            		ret
                      	
  39BB                	ATOFLP1:
  39BB  CD2528        		call	CTOF
  39BE  3005          		jr	nc,CHKEXP
  39C0  0C            		inc	c
  39C1                	ATOFDOT:
  39C1  10F8          		djnz	ATOFLP1
  39C3  180F          		jr	ATOFEXP
                      	
  39C5                	CHKEXP:
  39C5  CD893A        		call	SKIPSPB
  39C8  280A          		jr	z,ATOFEXP
  39CA  05            		dec	b
  39CB  F620          		or	20h
  39CD  FE65          		cp	'e'
  39CF  2803          		jr	z,ATOFEXP
                      	
  39D1  2B            		dec	hl
  39D2  0600          		ld	b,0
  39D4                	ATOFEXP:
  39D4  EB            		ex	de,hl
  39D5  CD1F39        		call	PUSHF1
  39D8  EB            		ex	de,hl
                      	
  39D9  C5            		push	bc		;c=after-dot counter
  39DA  78            		ld	a,b
  39DB  B7            		or	a
  39DC  2805          		jr	z,ATOFE0
  39DE  CDFC27        		call	ATOIF
  39E1  1805          		jr	CALCEXP
                      	
  39E3                	ATOFE0:
  39E3  E5            		push	hl		;program address
  39E4  CD070C        		call	SETZERO
  39E7  E1            		pop	hl		;program address
                      	
  39E8                	CALCEXP:
  39E8  C1            		pop	bc		;c=after-dot counter
  39E9  E5            		push	hl		;program address
  39EA  CD1F39        		call	PUSHF1
  39ED  69            		ld	l,c
  39EE  CD5A0C        		call	I1TOF
  39F1  CD4C39        		call	POPF2
  39F4  CD0F3E        		call	SUBF21
                      	
  39F7  D1            		pop	de		;program address
  39F8  CD5B39        		call	CPYFAC
  39FB  CD3D39        		call	POPF1
  39FE  D5            		push	de		;program address
                      	
  39FF  2170FF        		ld	hl,FAC2+3
  3A02  7E            		ld	a,(hl)
  3A03  F5            		push	af		;E sign
  3A04  CBBE          		res	7,(hl)
                      	
  3A06                	ATOFLP2:
  3A06  3A71FF        		ld	a,(FAC2+4)
  3A09  B7            		or	a
  3A0A  2829          		jr	z,ATOFEND	;E0
                      	
  3A0C  3A6AFF        		ld	a,(FAC1+4)
  3A0F  B7            		or	a
  3A10  2823          		jr	z,ATOFEND	;=0
                      	
  3A12  CD1F39        		call	PUSHF1
  3A15  CD1D0C        		call	SETMNS1
  3A18  CD8F36        		call	ADDF
  3A1B  CD5B39        		call	CPYFAC
  3A1E  CD3D39        		call	POPF1
                      	
  3A21  C1            		pop	bc		;b=E sign
  3A22  C5            		push	bc
  3A23  CD2E39        		call	PUSHF2
  3A26  78            		ld	a,b
  3A27  07            		rlca
  3A28  F5            		push	af
  3A29  D49037        		call	nc,MULF10
  3A2C  F1            		pop	af
  3A2D  DC4D38        		call	c,DIVF10
  3A30  CD4C39        		call	POPF2
                      	
  3A33  18D1          		jr	ATOFLP2
                      	
  3A35                	ATOFEND:
  3A35  F1            		pop	af
  3A36  E1            		pop	hl		;program address
  3A37  C9            		ret
                      	
  3A38                	ATOFHEX:
  3A38  2B            		dec	hl
  3A39  05            		dec	b
  3A3A  CD433A        		call	HEX
  3A3D  EB            		ex	de,hl
  3A3E  CD180D        		call	S2TOF
  3A41  EB            		ex	de,hl
  3A42  C9            		ret
                      	
                      	
                      	;convert hexadecimal string to integer
                      	;input: hl="&" address, b=max length-1("&")
                      	;output: de=decimal, hl=next address
                      	;destroy: af,bc
  3A43                	HEX:
  3A43  110000        		ld	de,0
  3A46                	HEXLP1:
  3A46  23            		inc	hl
  3A47  7E            		ld	a,(hl)
  3A48  FE20          		cp	' '
  3A4A  2003          		jr	nz,CHKH
  3A4C  10F8          		djnz	HEXLP1
  3A4E  C9            		ret
                      	
  3A4F                	CHKH:
  3A4F  F620          		or	20h
  3A51  FE68          		cp	'h'
  3A53  C2DC03        		jp	nz,SNERR
  3A56  05            		dec	b
  3A57  0E05          		ld	c,5
                      	
  3A59                	HEXLP2:
  3A59  23            		inc	hl
  3A5A  7E            		ld	a,(hl)
  3A5B  FE20          		cp	' '
  3A5D  281F          		jr	z,HEXEND
  3A5F  FE93          		cp	DEF		;93h
  3A61  281F          		jr	z,HEXDEF
  3A63  D630          		sub	'0'
  3A65  FE0A          		cp	'9'-'0'+1
  3A67  3809          		jr	c,HEX0F
  3A69  F620          		or	20h
  3A6B  D631          		sub	'a'-'0'
  3A6D  FE06          		cp	'f'-'a'+1
  3A6F  D0            		ret	nc		;not hex
  3A70  C60A          		add	a,0ah
  3A72                	HEX0F:
  3A72  0D            		dec	c
  3A73  CAE803        		jp	z,OVERR
  3A76  EB            		ex	de,hl
  3A77  29            		add	hl,hl		;*2
  3A78  29            		add	hl,hl		;*4
  3A79  29            		add	hl,hl		;*8
  3A7A  29            		add	hl,hl		;*16
  3A7B  85            		add	a,l		;no carry
  3A7C  6F            		ld	l,a
  3A7D  EB            		ex	de,hl
  3A7E                	HEXEND:
  3A7E  10D9          		djnz	HEXLP2
  3A80  23            		inc	hl
  3A81  C9            		ret
                      	
  3A82                	HEXDEF:
  3A82  53            		ld	d,e
  3A83  1EDE          		ld	e,0deh
  3A85  3E0F          		ld	a,0fh
  3A87  18E9          		jr	HEX0F
                      	
                      	
                      	;skip space and decrement b
                      	;input: hl=program address, b=length
                      	;output: a=data, hl=next address, b=remained length, z-flag(1:b=0)
                      	;destroy: f
  3A89                	SKIPSPB:
  3A89  04            		inc	b
  3A8A                	SKIPSPBLP:
  3A8A  05            		dec	b
  3A8B  C8            		ret	z
  3A8C  7E            		ld	a,(hl)
  3A8D  23            		inc	hl
  3A8E  FE20          		cp	' '
  3A90  C0            		ret	nz
  3A91  18F7          		jr	SKIPSPBLP
                      	
                      	
                      	;print "in *****"
                      	;input: hl
                      	;destory: af,bc,de,hl
  3A93                	_INLNUM:
  3A93                		ds	INLNUM-_INLNUM
  3A99                		org	INLNUM
                      	
  3A99  E5            		push	hl		;
  3A9A  218B03        		ld	hl,ERRIN
  3A9D  CDCF30        		call	PUTS
  3AA0  E1            		pop	hl		;
                      	;	jp	PUTI2
                      	
                      	
                      	;print 2-byte integer (unsigned)
                      	;input: hl
                      	;destory: af,bc,de,hl
  3AA1                	_PUTI2:	ds	PUTI2-_PUTI2
  3AA1                		org	PUTI2
                      	
  3AA1  11CE30        		ld	de,PUTSINC
  3AA4  D5            		push	de
                      	;	jp	I2TOA
                      	
                      	
                      	;convert 2-byte integer (unsigned) to string
                      	;input: hl
                      	;output: FAC3, hl=FAC3
                      	;destroy: af,bc,de
  3AA5                	_I2TOA:	ds	I2TOA-_I2TOA
  3AA5                		org	I2TOA
                      	
  3AA5  CD5C0C        		call	I2TOF
  3AA8  C3AC3A        		jp	FTOA
                      	
                      	
                      	;convert float to string
                      	;input: FAC1
                      	;output: FAC3, hl=FAC3
                      	;destroy: FAC1,FAC2,af,bc,de
  3AAB                	_FTOA:	ds	FTOA-_FTOA
  3AAC                		org	FTOA
                      	
  3AAC  2172FF        		ld	hl,FAC3
  3AAF  3620          		ld	(hl),' '
  3AB1  EF            		rst	CHKSGN
  3AB2  CA633B        		jp	z,FTOAZERO	;a=0
  3AB5  3D            		dec	a
  3AB6  2802          		jr	z,FTOAPLS	;if FAC1>0
  3AB8  362D          		ld	(hl),'-'
  3ABA                	FTOAPLS:
  3ABA  2169FF        		ld	hl,FAC1+3
  3ABD  CBBE          		res	7,(hl)
                      	
  3ABF                	FTOA2:
  3ABF  216C3B        		ld	hl,E8
  3AC2  CD183F        		call	SETCMPF		;c=0
  3AC5  306E          		jr	nc,LARGE	;FAC1 >= 1e8
  3AC7  21803B        		ld	hl,EM2
  3ACA  CD183F        		call	SETCMPF		;c=0
  3ACD  3856          		jr	c,SMALL		;FAC1 < 1e-2
                      	
  3ACF  0609          		ld	b,9
  3AD1                	FTOALP1:
  3AD1  C5            		push	bc
  3AD2  21713B        		ld	hl,E7
  3AD5  CD183F        		call	SETCMPF
  3AD8  3007          		jr	nc,FTOAOK
  3ADA  CD9037        		call	MULF10
  3ADD  C1            		pop	bc
  3ADE  10F1          		djnz	FTOALP1
  3AE0  C5            		push	bc
                      	
  3AE1                	FTOAOK:
  3AE1  3A6AFF        		ld	a,(FAC1+4)
  3AE4  D697          		sub	97h
  3AE6  47            		ld	b,a
  3AE7  3A66FF        		ld	a,(FAC1)
  3AEA                	FTOALP2:
  3AEA  07            		rlca
  3AEB  10FD          		djnz	FTOALP2
  3AED  DC7D36        		call	c,INCF1		;round up
                      	
  3AF0  CD7B0C        		call	FTOI4
                      	
  3AF3  21853B        		ld	hl,INTE7
  3AF6  1173FF        		ld	de,FAC3+1
  3AF9  C1            		pop	bc
  3AFA  48            		ld	c,b		;
  3AFB  05            		dec	b
  3AFC                	FTOALP3:
  3AFC  05            		dec	b
  3AFD  FA093B        		jp	m,FTOADOT
  3B00  CDD824        		call	DIVINT4
  3B03  C630          		add	a,'0'
  3B05  12            		ld	(de),a
  3B06  13            		inc	de
  3B07  18F3          		jr	FTOALP3
                      	
  3B09                	FTOADOT:
  3B09  CD2B25        		call	CHKINT4
  3B0C  2812          		jr	z,FTOAEND
                      	
  3B0E  3E2E          		ld	a,'.'
  3B10  12            		ld	(de),a
  3B11  13            		inc	de
                      	
  3B12  79            		ld	a,c		;
  3B13  B7            		or	a
  3B14                	FTOALP4:
  3B14  C4D824        		call	nz,DIVINT4
  3B17  C630          		add	a,'0'
  3B19  12            		ld	(de),a
  3B1A  13            		inc	de
  3B1B  CD2B25        		call	CHKINT4
  3B1E  20F4          		jr	nz,FTOALP4
                      	
  3B20                	FTOAEND:
  3B20  12            		ld	(de),a		;a=0
  3B21  2172FF        		ld	hl,FAC3
  3B24  C9            		ret
                      	
                      	;c=0
  3B25                	SMALL:
  3B25  0D            		dec	c
  3B26  C5            		push	bc
  3B27  CD9037        		call	MULF10
  3B2A  217B3B        		ld	hl,E0
  3B2D  CD183F        		call	SETCMPF
  3B30  C1            		pop	bc
  3B31  38F2          		jr	c,SMALL
  3B33  180E          		jr	LARSMA
                      	
                      	;c=0
  3B35                	LARGE:
  3B35  0C            		inc	c
  3B36  C5            		push	bc
  3B37  CD4D38        		call	DIVF10
  3B3A  21763B        		ld	hl,E2
  3B3D  CD183F        		call	SETCMPF
  3B40  C1            		pop	bc
  3B41  30F2          		jr	nc,LARGE
                      	
  3B43                	LARSMA:
  3B43  79            		ld	a,c
  3B44  F5            		push	af		;
  3B45  CDBF3A        		call	FTOA2
                      	
  3B48                	LARLP2:
  3B48  23            		inc	hl
  3B49  7E            		ld	a,(hl)
  3B4A  B7            		or	a
  3B4B  20FB          		jr	nz,LARLP2
                      	
  3B4D  3645          		ld	(hl),'E'
  3B4F  23            		inc	hl
  3B50  362B          		ld	(hl),'+'
  3B52  F1            		pop	af		;
  3B53  3804          		jr	c,LARPLS
  3B55  ED44          		neg
  3B57  362D          		ld	(hl),'-'
                      	
  3B59                	LARPLS:
  3B59  23            		inc	hl
  3B5A  010A2F        		ld	bc,2f0ah	;b='0'-1, c=10
  3B5D                	LARLP3:
  3B5D  04            		inc	b
  3B5E  91            		sub	c
  3B5F  30FC          		jr	nc,LARLP3
  3B61  81            		add	a,c
  3B62  70            		ld	(hl),b
                      	
  3B63                	FTOAZERO:
  3B63  23            		inc	hl
  3B64  C630          		add	a,'0'
  3B66  77            		ld	(hl),a
  3B67  23            		inc	hl
  3B68  EB            		ex	de,hl
  3B69  AF            		xor	a
  3B6A  18B4          		jr	FTOAEND
                      	
                      	
                      	;99999999.5
  3B6C                	E8:
  3B6C  F01FBC3E9B    		db	0f0h, 1fh, 0bch, 3eh, 9bh
                      	
                      	;9999999.95
  3B71                	E7:
  3B71  F37F961898    		db	0f3h, 7fh, 96h, 18h, 98h
                      	
                      	;9.99999995
  3B76                	E2:
  3B76  F3FFFF1F84    		db	0f3h, 0ffh, 0ffh, 1fh, 84h
                      	
                      	;0.999999995
  3B7B                	E0:
  3B7B  EBFFFF7F80    		db	0ebh, 0ffh, 0ffh, 7fh, 80h
                      	
                      	;0.00999999995
  3B80                	EM2:
  3B80  300AD7237A    		db	30h, 0ah, 0d7h, 23h, 7ah
                      	
  3B85                	INTE7:
  3B85  80969800      		db	80h, 96h, 98h, 00h	;10^7
  3B89  40420F00      		db	40h, 42h, 0fh, 00h	;10^6
  3B8D  A0860100      		db	0a0h,86h, 01h, 00h	;10^5
  3B91  10270000      		db	10h, 27h, 00h, 00h	;10^4
  3B95  E8030000      		db	0e8h,03h, 00h, 00h	;10^3
  3B99  64000000      		db	64h, 00h, 00h, 00h	;10^2
  3B9D  0A000000      		db	0ah, 00h, 00h, 00h	;10^1
  3BA1  01000000      		db	01h, 00h, 00h, 00h	;10^0
                      	
                      	
                      	;RND() function
  3BA5                	_F_RND:	ds	RNDPLS-9-_F_RND
  3BA6                		org	RNDPLS-9
  3BA6                	F_RND:
  3BA6  CD780B        		call	CHKNUM
  3BA9  EF            		rst	CHKSGN
  3BAA  2815          		jr	z,RND0		;rnd(0)
  3BAC  3C            		inc	a
  3BAD  2806          		jr	z,RNDMNS	;rnd(-x)
                      	
                      	;rnd(+x)
  3BAF                	_RNDPLS:ds	RNDPLS-_RNDPLS
  3BAF                		org	RNDPLS
                      	
  3BAF  2151FA        		ld	hl,RSEED
  3BB2  CD0A0C        		call	SETF1
  3BB5                	RNDMNS:
  3BB5  CD1925        		call	DECINT4
  3BB8  21D53B        		ld	hl,RNDFCT
  3BBB  CD180C        		call	SETF2
  3BBE  CDD93B        		call	MULRND
  3BC1                	RND0:
  3BC1  2A51FA        		ld	hl,(RSEED)
  3BC4  ED5B53FA      		ld	de,(RSEED+2)
  3BC8  CD9A0C        		call	I4TOF
  3BCB  216AFF        		ld	hl,FAC1+4
  3BCE  7E            		ld	a,(hl)
  3BCF  B7            		or	a
  3BD0  C8            		ret	z
  3BD1  D620          		sub	20h
  3BD3  77            		ld	(hl),a
  3BD4  C9            		ret
                      	
                      	
  3BD5                	RNDFCT:
  3BD5  65520F00      		db	65h, 52h, 0fh, 00h
                      	
                      	
                      	;RSEED = (FAC1 (integer) * FAC2 (integer)) & ff,ff,ff,ff,ffh
                      	; for RND() function
                      	;input: FAC1,FAC2 (not zero)
                      	;output: RSEED
                      	;destroy: FAC1,af,b,de,hl
  3BD9                	MULRND:
  3BD9  21AB0E        		ld	hl,ZERO
  3BDC  1151FA        		ld	de,RSEED
  3BDF  CD0D0C        		call	SETF
  3BE2  AF            		xor	a
  3BE3  326AFF        		ld	(FAC1+4),a
                      	
  3BE6  D9            		exx			;
  3BE7  E5            		push	hl
  3BE8  D5            		push	de
  3BE9  C5            		push	bc
  3BEA  D9            		exx			;
                      	
  3BEB  2A6DFF        		ld	hl,(FAC2)
  3BEE  ED5B6FFF      		ld	de,(FAC2+2)
                      	
  3BF2  0620          		ld	b,32
  3BF4                	MULRLP1:
  3BF4  CB3A          		srl	d
  3BF6  CB1B          		rr	e
  3BF8  CB1C          		rr	h
  3BFA  CB1D          		rr	l
  3BFC  D9            		exx			;
  3BFD  3010          		jr	nc,MULRNC
                      	
  3BFF  1166FF        		ld	de,FAC1
  3C02  2151FA        		ld	hl,RSEED
  3C05  B7            		or	a
  3C06  0605          		ld	b,5
  3C08                	MULRLP2:
  3C08  1A            		ld	a,(de)
  3C09  8E            		adc	a,(hl)
  3C0A  77            		ld	(hl),a
  3C0B  1C            		inc	e		;inc de
  3C0C  2C            		inc	l		;inc hl
  3C0D  10F9          		djnz	MULRLP2
                      	
  3C0F                	MULRNC:
  3C0F  CD3C3F        		call	SLAF1
  3C12  216AFF        		ld	hl,FAC1+4
  3C15  CB16          		rl	(hl)
  3C17  D9            		exx			;
  3C18  10DA          		djnz	MULRLP1
                      	
  3C1A  D9            		exx			;
  3C1B  C1            		pop	bc
  3C1C  D1            		pop	de
  3C1D  E1            		pop	hl
  3C1E  D9            		exx			;
  3C1F  C9            		ret
                      	
                      	
                      	;EXP() function
                      	;exp(x)=2^n*e^a, n=[x/log2], a=x-n*log2
  3C20                	F_EXP:
  3C20  CD780B        		call	CHKNUM
  3C23                	EXP:
  3C23  CD1F39        		call	PUSHF1		;x
  3C26  218E3C        		ld	hl,LOG2
  3C29  CD180C        		call	SETF2
  3C2C  CD5E38        		call	DIVF		;x/log2
                      	
  3C2F  2A69FF        		ld	hl,(FAC1+3)
  3C32  7C            		ld	a,h		;(FAC1+4)
  3C33  FE89          		cp	89h
  3C35  304C          		jr	nc,EXPLARGE
                      	
  3C37  CD8339        		call	INT		;n=[x/log2]
  3C3A  CDB10C        		call	FTOI
  3C3D  D5            		push	de		;n
  3C3E  218E3C        		ld	hl,LOG2
  3C41  CD180C        		call	SETF2
  3C44  CDA037        		call	MULF		;n*log2
  3C47  D1            		pop	de		;n
  3C48  CD4C39        		call	POPF2
  3C4B  D5            		push	de		;n
  3C4C  CD0F3E        		call	SUBF21		;a=x-n*log2
                      	
                      	;1+a(1+a/2(1+a/3(1+...(1+a/10))))))))))
  3C4F  CD5B39        		call	CPYFAC
  3C52  CD4122        		call	SETPLS1
                      	
  3C55  0E0A          		ld	c,10
  3C57                	EXPLP:
  3C57  CD2E39        		call	PUSHF2		;a
  3C5A  C5            		push	bc
  3C5B  CDA037        		call	MULF		;a*y
  3C5E  CD5B39        		call	CPYFAC
  3C61  E1            		pop	hl
  3C62  E5            		push	hl
  3C63  CD5A0C        		call	I1TOF
  3C66  CD6E39        		call	EXFAC
  3C69  CD5E38        		call	DIVF		;a*y/b
  3C6C  CD7D36        		call	INCF1		;a*y/b+1
  3C6F  C1            		pop	bc
  3C70  CD4C39        		call	POPF2		;a
  3C73  0D            		dec	c
  3C74  20E1          		jr	nz,EXPLP
                      	
  3C76  D1            		pop	de		;n
                      	;	ld	a,(FAC1+4)	;=81h?
  3C77  3E81          		ld	a,81h
  3C79  83            		add	a,e
  3C7A  326AFF        		ld	(FAC1+4),a	;e^a*2^n
  3C7D  79            		ld	a,c		;c=0
  3C7E  8A            		adc	a,d
  3C7F  C8            		ret	z
  3C80  C3E803        		jp	OVERR
                      	
  3C83                	EXPLARGE:
  3C83  CB7D          		bit	7,l		;(FAC1+3)
  3C85  CAE803        		jp	z,OVERR		;x>0
  3C88  CD3D39        		call	POPF1
  3C8B  C3070C        		jp	SETZERO		;x<0
                      	
                      	;log(2)
  3C8E                	LOG2:
  3C8E  F817723180    		db	0f8h, 17h, 72h, 31h, 80h
                      	
                      	
                      	;LOG() function
                      	;log(x)=log(a*2^n)=log(a)+n*log(2)
                      	;a'=(a-1)/(a+1)
                      	;log(a)=2*(a'+a'^3/3+a'^5/5+...)=2a'(1+1/3*a'^2(1+3/5*a'^2(...(1+19/21*a'^2))))))))))
  3C93                	F_LOG:
  3C93  CD780B        		call	CHKNUM
  3C96                	LOG:
  3C96  EF            		rst	CHKSGN
  3C97  3D            		dec	a
  3C98  C2E503        		jp	nz,FCERR	;x<=0
                      	
  3C9B  216AFF        		ld	hl,FAC1+4
  3C9E  7E            		ld	a,(hl)
  3C9F  D681          		sub	81h
  3CA1  F5            		push	af		;n
  3CA2  3681          		ld	(hl),81h	;a
  3CA4  CD1F39        		call	PUSHF1		;a
  3CA7  CD7D36        		call	INCF1
  3CAA  CD4C39        		call	POPF2		;a
  3CAD  CD1F39        		call	PUSHF1		;a+1
  3CB0  CD1D0C        		call	SETMNS1
  3CB3  CD8F36        		call	ADDF		;a-1
  3CB6  CD4C39        		call	POPF2		;a+1
  3CB9  CD5E38        		call	DIVF		;a'=(a-1)/(a+1)
  3CBC  CD1F39        		call	PUSHF1		;a'
  3CBF  CD5B39        		call	CPYFAC
  3CC2  CDA037        		call	MULF		;a'^2
  3CC5  CD5B39        		call	CPYFAC		;a'^2
  3CC8  CD4122        		call	SETPLS1		;y
                      	
  3CCB  0E12          		ld	c,18
  3CCD                	LOGLP:
  3CCD  CD2E39        		call	PUSHF2		;a'^2
  3CD0  C5            		push	bc
  3CD1  CDA037        		call	MULF		;y*a'^2
  3CD4  CD5B39        		call	CPYFAC
  3CD7  E1            		pop	hl		;l=c
  3CD8  E5            		push	hl
  3CD9  2C            		inc	l
  3CDA  CD5A0C        		call	I1TOF
  3CDD  CD6E39        		call	EXFAC
  3CE0  CD5E38        		call	DIVF		;y*a'^2/(c+1)
  3CE3  CD5B39        		call	CPYFAC
  3CE6  E1            		pop	hl
  3CE7  2D            		dec	l
  3CE8  E5            		push	hl
  3CE9  CD5A0C        		call	I1TOF		;c-1
  3CEC  CDA037        		call	MULF		;y*a'^2*(c-1)/(c+1)
  3CEF  CD7D36        		call	INCF1		;y=1+y*a'^2*(c-1)/(c+1)
  3CF2  C1            		pop	bc
  3CF3  CD4C39        		call	POPF2		;a'^2
  3CF6  0D            		dec	c
  3CF7  20D4          		jr	nz,LOGLP
                      	
  3CF9  CD4C39        		call	POPF2		;a'
  3CFC  CDA037        		call	MULF		;a'*y
  3CFF  216AFF        		ld	hl,FAC1+4
  3D02  7E            		ld	a,(hl)
  3D03  B7            		or	a
  3D04  2804          		jr	z,LOGZ
  3D06  34            		inc	(hl)		;2*a'*y
  3D07  CAE803        		jp	z,OVERR
  3D0A                	LOGZ:
  3D0A  C1            		pop	bc		;b=n
  3D0B  CD1F39        		call	PUSHF1		;2*a'*y
  3D0E  CD110D        		call	S1TOF
  3D11  218E3C        		ld	hl,LOG2
  3D14  CD180C        		call	SETF2
  3D17  CDA037        		call	MULF		;n*log(2)
  3D1A  CD4C39        		call	POPF2		;2*a'*y
  3D1D  C38F36        		jp	ADDF		;n*log(2)+2*a'*y
                      	
                      	
                      	;^ operator
  3D20                	O_POW:
  3D20  CD780B        		call	CHKNUM
                      	
  3D23  2A70FF        		ld	hl,(FAC2+3)
  3D26  7C            		ld	a,h		;(FAC2+4)
  3D27  B7            		or	a
  3D28  CA4122        		jp	z,SETPLS1	;x^0
                      	
  3D2B  EF            		rst	CHKSGN
  3D2C  2812          		jr	z,POWZERO
  3D2E  3C            		inc	a
  3D2F  2815          		jr	z,POWNEG
                      	
                      	;x^y=exp(ylog(x))
  3D31                	POWPOS:
  3D31  CD2E39        		call	PUSHF2		;y
  3D34  CD963C        		call	LOG		;log(x)
  3D37  CD4C39        		call	POPF2		;y
  3D3A  CDA037        		call	MULF		;ylog(x)
  3D3D  C3233C        		jp	EXP
                      	
                      	;0^y
  3D40                	POWZERO:
  3D40  7D            		ld	a,l		;(FAC2+3)
  3D41  07            		rlca
  3D42  D0            		ret	nc		;0^(positive)
  3D43  C3F703        		jp	DIV0ERR		;0^(negative)
                      	
                      	;(negative)^y
  3D46                	POWNEG:
  3D46  7C            		ld	a,h		;(FAC2+4)
  3D47  FEA1          		cp	0a1h
  3D49  D2E503        		jp	nc,FCERR
                      	
  3D4C  CD1F39        		call	PUSHF1
  3D4F  CD2E39        		call	PUSHF2
  3D52  CD3D39        		call	POPF1
                      	
  3D55  CDE20C        		call	GETINT
  3D58  CD1D3F        		call	CMPF
  3D5B  C2E503        		jp	nz,FCERR	;y=not integer
  3D5E  CD7B0C        		call	FTOI4
  3D61  3A66FF        		ld	a,(FAC1)	;even/odd
  3D64  47            		ld	b,a
                      	
  3D65  CD3D39        		call	POPF1
  3D68  C5            		push	bc		;
  3D69  CD1939        		call	ABS
  3D6C  CD313D        		call	POWPOS
  3D6F  F1            		pop	af		;
  3D70  0F            		rrca
  3D71  D0            		ret	nc		;y=even
  3D72  C3260D        		jp	NEGABS		;y=odd
                      	
                      	
                      	;COS() function
                      	;cos(x)=sin(pi/2-|x|)
  3D75                	F_COS:
  3D75  CD780B        		call	CHKNUM
  3D78                	COS:
  3D78  CD2C0D        		call	NEGABS2
  3D7B  21833D        		ld	hl,PIDIV2
  3D7E  CD8036        		call	SETADDF		;pi/2-|x|
  3D81  1808          		jr	SIN
                      	
                      	;pi/2
  3D83                	PIDIV2:
  3D83  A2DA0F4981    		db	0a2h, 0dah, 0fh, 49h, 81h
                      	
                      	
                      	;SIN() function
                      	;x-x^3/3!+x^5/5!-...=x(1-x^2/(2*3)(1-x^2/(4*5)(...(1-x^2/(12*13)))))))))))
  3D88                	F_SIN:
  3D88  CD780B        		call	CHKNUM
  3D8B                	SIN:
  3D8B  CD1F39        		call	PUSHF1		;x
  3D8E  21153E        		ld	hl,PI2
  3D91  CD180C        		call	SETF2
  3D94  CD5E38        		call	DIVF		;x/2pi
  3D97  CDE20C        		call	GETINT		;int(x/2pi)
  3D9A  21153E        		ld	hl,PI2
  3D9D  CD180C        		call	SETF2
  3DA0  CDA037        		call	MULF		;int(x/2pi)*2pi
  3DA3  CD4C39        		call	POPF2		;x
  3DA6  CD0F3E        		call	SUBF21		;x'=x-int(x/2pi)*2pi
                      	
  3DA9  CDFA3D        		call	SINRANGE	;-pi~+pi
  3DAC  CDFA3D        		call	SINRANGE	;-pi/2~+pi/2
                      	
  3DAF  CD1F39        		call	PUSHF1		;x'
  3DB2  CD5B39        		call	CPYFAC
  3DB5  CDA037        		call	MULF		;x'^2
                      	
  3DB8  CD5B39        		call	CPYFAC
  3DBB  CD4122        		call	SETPLS1		;y=1
                      	
  3DBE  060C          		ld	b,0ch
  3DC0                	SINLP:
  3DC0  CD2E39        		call	PUSHF2		;x'^2
  3DC3  C5            		push	bc
  3DC4  CDA037        		call	MULF		;x'^2*y
  3DC7  C1            		pop	bc
  3DC8  C5            		push	bc
  3DC9  CD1F39        		call	PUSHF1		;x'^2*y
                      	
  3DCC  78            		ld	a,b
  3DCD  04            		inc	b
  3DCE  CD5E24        		call	MULINT1		;hl=b(b+1)
  3DD1  CD5C0C        		call	I2TOF		;hl->FAC1
                      	
  3DD4  CD5B39        		call	CPYFAC
  3DD7  CD3D39        		call	POPF1		;x'^2*y
  3DDA  CD5E38        		call	DIVF		;x'^2/b/(b+1)*y
  3DDD  CD2C0D        		call	NEGABS2		;-x'^2/b/(b+1)*y (y>0)
  3DE0  CD7D36        		call	INCF1		;y=1-x'^2/b/(b+1)*y
                      	
  3DE3  C1            		pop	bc
  3DE4  CD4C39        		call	POPF2		;x'^2
  3DE7  05            		dec	b
  3DE8  10D6          		djnz	SINLP
                      	
  3DEA  CD4C39        		call	POPF2		;x'
  3DED  CDA037        		call	MULF
                      	
                      	;if |sin(x)|>1
  3DF0  3A6AFF        		ld	a,(FAC1+4)
  3DF3  D681          		sub	81h
  3DF5  C0            		ret	nz
  3DF6  3266FF        		ld	(FAC1),a	;=0
  3DF9  C9            		ret
                      	
                      	;-pi/2~+pi/2
  3DFA                	SINRANGE:
  3DFA  21833D        		ld	hl,PIDIV2	;pi/2
  3DFD  CD183F        		call	SETCMPF
  3E00  3009          		jr	nc,RANGENC
  3E02  2170FF        		ld	hl,FAC2+3
  3E05  CBFE          		set	7,(hl)		;-pi/2
  3E07  CD1D3F        		call	CMPF
  3E0A  D0            		ret	nc
  3E0B                	RANGENC:
  3E0B  2171FF        		ld	hl,FAC2+4
  3E0E  34            		inc	(hl)		;+-pi
                      	
                      	;FAC1=FAC2-FAC1
  3E0F                	SUBF21:
  3E0F  2169FF        		ld	hl,FAC1+3
  3E12  C38B36        		jp	CHGSGNADD	
                      	
                      	;pi*2
  3E15                	PI2:
  3E15  A2DA0F4983    		db	0a2h, 0dah, 0fh, 49h, 83h
                      	
                      	
                      	;SQR() function
                      	;y_n+1=(y_n + x/y_n)/2
  3E1A                	F_SQR:
  3E1A  CD780B        		call	CHKNUM
  3E1D  EF            		rst	CHKSGN
  3E1E  C8            		ret	z		;sqr(0)=0
  3E1F  3C            		inc	a
  3E20  CAE503        		jp	z,FCERR		;sqr(-x)
                      	
  3E23  CD1F39        		call	PUSHF1
  3E26  216AFF        		ld	hl,FAC1+4
  3E29  7E            		ld	a,(hl)
  3E2A  D681          		sub	81h
  3E2C  1F            		rra			;=sra a,c-flag=bit7
  3E2D  C681          		add	a,81h
  3E2F  77            		ld	(hl),a		;exponent of y_0 = (exponent of x)/2
                      	
  3E30  0605          		ld	b,5
  3E32                	SQRLP:
  3E32  CD5B39        		call	CPYFAC
  3E35  CD3D39        		call	POPF1		;x
  3E38  CD1F39        		call	PUSHF1		;x
  3E3B  C5            		push	bc
  3E3C  CD2E39        		call	PUSHF2		;;y
  3E3F  CD5E38        		call	DIVF		;x/y
  3E42  CD4C39        		call	POPF2		;;y
  3E45  CD8F36        		call	ADDF		;x/y+y
  3E48  216AFF        		ld	hl,FAC1+4
  3E4B  35            		dec	(hl)		;y=(x/y+y)/2
  3E4C  C1            		pop	bc
  3E4D  10E3          		djnz	SQRLP
  3E4F  CD4C39        		call	POPF2
  3E52  C9            		ret
                      	
                      	
                      	;TAN() function
                      	;tan(x)=sin(x)/cos(x)
  3E53                	F_TAN:
  3E53  CD780B        		call	CHKNUM
  3E56  CD1F39        		call	PUSHF1		;x
  3E59  CD783D        		call	COS		;cos(x)
  3E5C  CD5B39        		call	CPYFAC
  3E5F  CD3D39        		call	POPF1		;x
  3E62  CD2E39        		call	PUSHF2		;cos(x)
  3E65  CD8B3D        		call	SIN		;sin(x)
  3E68  CD4C39        		call	POPF2		;cos(x)
  3E6B  C35E38        		jp	DIVF		;sin(x)/cos(x)
                      	
                      	
                      	;input: bc=X, de=Y
                      	;output: a=color
                      	;destroy: f,bc,de,hl
  3E6E                	POINT:
  3E6E  3A92FD        		ld	a,(SCREEN1)
  3E71  3D            		dec	a
  3E72  281A          		jr	z,POINT2
  3E74  F27E3E        		jp	p,POINTG
                      	
                      	;screen mode 1
  3E77                	POINT1:
  3E77  CD883F        		call	GXY2AD
  3E7A  7E            		ld	a,(hl)
  3E7B  D61F          		sub	1fh
  3E7D  C9            		ret
                      	
                      	;graphic mode (screen mode 3,4)
  3E7E                	POINTG:
  3E7E  CD3F14        		call	GXY2GAD
  3E81  7E            		ld	a,(hl)
  3E82  A2            		and	d
  3E83  07            		rlca
  3E84                	POINTLP:
  3E84  0F            		rrca
  3E85  CB0A          		rrc	d
  3E87  30FB          		jr	nc,POINTLP
  3E89                	POINTOK:
  3E89  CB0A          		rrc	d
  3E8B  D0            		ret	nc		;screen mode 4
  3E8C  3C            		inc	a		;screen mode 3
  3E8D  C9            		ret
                      	
                      	;screen mode 2
  3E8E                	POINT2:
  3E8E  C5            		push	bc		;x
  3E8F  CD883F        		call	GXY2AD
  3E92  C1            		pop	bc		;x
  3E93  CD522C        		call	MASK2
  3E96  46            		ld	b,(hl)		;
  3E97  24            		inc	h
  3E98  24            		inc	h
  3E99  A6            		and	(hl)
  3E9A  C8            		ret	z
                      	
  3E9B  78            		ld	a,b		;
  3E9C  0F            		rrca
  3E9D  0F            		rrca
  3E9E  7E            		ld	a,(hl)
  3E9F  17            		rla
  3EA0  17            		rla
  3EA1  17            		rla
  3EA2  E607          		and	07h
  3EA4  3C            		inc	a
  3EA5  C9            		ret
                      	
                      	
                      	;SCREEN() function
                      	;not called but jumped
  3EA6                	F_SCRN:
  3EA6  CD920B        		call	CHKLPAR
  3EA9  CDE40D        		call	INT1ARG
  3EAC  F5            		push	af		;
  3EAD  7E            		ld	a,(hl)
  3EAE  FE2C          		cp	','
  3EB0  C2DC03        		jp	nz,SNERR
  3EB3  CDE30D        		call	INT1INC
  3EB6  CDA10B        		call	CHKRPAR
  3EB9  E1            		pop	hl		;
  3EBA  24            		inc	h
  3EBB  6B            		ld	l,e
  3EBC  2C            		inc	l
  3EBD  CDCD11        		call	XY2AD
  3EC0  6E            		ld	l,(hl)
  3EC1  CD5A0C        		call	I1TOF
  3EC4  C37D18        		jp	FNCRTN
                      	
                      	
                      	;FN() function
                      	;not called but jumped
  3EC7                	F_FN:
  3EC7  CD8433        		call	CHKVAR
  3ECA  E5            		push	hl		;program address
  3ECB  CBF8          		set	7,b
  3ECD  CDB633        		call	SRCHVAR
  3ED0  DA0C04        		jp	c,UFERR
  3ED3  E1            		pop	hl		;program address
  3ED4  D5            		push	de		;function address
  3ED5  CD640B        		call	FNCNUM
  3ED8  C1            		pop	bc		;function address
  3ED9  E5            		push	hl		;program address
                      	
                      	;push old FN() argument
  3EDA  2A63FF        		ld	hl,(FNARG+3)
  3EDD  E5            		push	hl
  3EDE  2A61FF        		ld	hl,(FNARG+1)
  3EE1  E5            		push	hl
  3EE2  3A60FF        		ld	a,(FNARG)
  3EE5  F5            		push	af
  3EE6  2A5EFF        		ld	hl,(FNPAR)
  3EE9  E5            		push	hl		;old FN() parameter
                      	
  3EEA  C5            		push	bc		;function address
  3EEB  2166FF        		ld	hl,FAC1
  3EEE  1160FF        		ld	de,FNARG
  3EF1  CD0D0C        		call	SETF
  3EF4  E1            		pop	hl		;function address
                      	
  3EF5  5E            		ld	e,(hl)
  3EF6  23            		inc	hl
  3EF7  56            		ld	d,(hl)
  3EF8  23            		inc	hl
  3EF9  7E            		ld	a,(hl)
  3EFA  23            		inc	hl
  3EFB  66            		ld	h,(hl)
  3EFC  6F            		ld	l,a
  3EFD  225EFF        		ld	(FNPAR),hl
                      	
  3F00  EB            		ex	de,hl
  3F01  CD3D17        		call	ARG
                      	
  3F04  E1            		pop	hl		;old FN() parameter
  3F05  225EFF        		ld	(FNPAR),hl
                      	
                      	;pop old FN() argument
  3F08  F1            		pop	af
  3F09  3260FF        		ld	(FNARG),a
  3F0C  E1            		pop	hl
  3F0D  2261FF        		ld	(FNARG+1),hl
  3F10  E1            		pop	hl
  3F11  2263FF        		ld	(FNARG+3),hl
  3F14  E1            		pop	hl		;program address
  3F15  C38018        		jp	CLRSTRD
                      	
                      	
                      	;set FAC2 and compare
                      	;input: FAC1,hl=float address
                      	;output: c-flag, z-flag, FAC2, c=0
                      	;destroy: af,b,de,hl
  3F18                	SETCMPF:
  3F18  CD180C        		call	SETF2
  3F1B  0E00          		ld	c,0
                      	;	jp	CMPF
                      	
                      	
                      	;compare FAC2 and FAC1
                      	;input: FAC1,FAC2
                      	;output: c-flag,z-flag
                      	;destroy: af,b,de,hl
  3F1D                	CMPF:
  3F1D  1169FF        		ld	de,FAC1+3
  3F20  2170FF        		ld	hl,FAC2+3
  3F23  B4            		or	h		;h>0, reset z-flag
  3F24  7E            		ld	a,(hl)
  3F25  07            		rlca
  3F26  1A            		ld	a,(de)
  3F27  380E          		jr	c,CMPFNEG
  3F29  07            		rlca
  3F2A  D8            		ret	c
                      	
  3F2B                	CMPFPOS:
  3F2B  13            		inc	de
  3F2C  23            		inc	hl
  3F2D  0605          		ld	b,5
  3F2F                	CMPFLP:
  3F2F  1A            		ld	a,(de)
  3F30  BE            		cp	(hl)
  3F31  C0            		ret	nz
  3F32  2B            		dec	hl
  3F33  1B            		dec	de
  3F34  10F9          		djnz	CMPFLP
  3F36  C9            		ret
                      	
  3F37                	CMPFNEG:
  3F37  07            		rlca
  3F38  D0            		ret	nc
                      	
                      	;FAC1<0, FAC2<0
  3F39  EB            		ex	de,hl
  3F3A  18EF          		jr	CMPFPOS
                      	
                      	
                      	;shift left arithmetic for FAC1
                      	;input: FAC1
                      	;output: FAC1,c-flag
                      	;destroy: f,hl
  3F3C                	SLAF1:
  3F3C  2166FF        		ld	hl,FAC1
  3F3F  CB26          		sla	(hl)
  3F41  23            		inc	hl
  3F42  CB16          		rl	(hl)
  3F44  23            		inc	hl
  3F45  CB16          		rl	(hl)
  3F47  23            		inc	hl
  3F48  CB16          		rl	(hl)
  3F4A  C9            		ret
                      	
                      	
                      	;jump subroutine in table
                      	;input: de=table address, a=data(00h-7fh or 80h-ffh)
                      	;output: de=jump address
                      	;destroy: af
  3F4B                	JPTBL:
  3F4B  EB            		ex	de,hl
  3F4C  87            		add	a,a
  3F4D  85            		add	a,l
  3F4E  6F            		ld	l,a
  3F4F  3001          		jr	nc,JPTBLNC
  3F51  24            		inc	h
  3F52                	JPTBLNC:
  3F52  7E            		ld	a,(hl)
  3F53  23            		inc	hl
  3F54  66            		ld	h,(hl)
  3F55  6F            		ld	l,a
                      	
  3F56  EB            		ex	de,hl
  3F57  D5            		push	de
  3F58  C9            		ret
                      	
                      	
                      	;skip space
                      	;input: hl=program address-1
                      	;output: a=data, hl=next address
                      	;destroy: f
  3F59                	SKIPSPINC:
  3F59  23            		inc	hl
  3F5A                	SKIPSP:
  3F5A  7E            		ld	a,(hl)
  3F5B  FE20          		cp	' '
  3F5D  C0            		ret	nz
  3F5E  18F9          		jr	SKIPSPINC
                      	
                      	
                      	;check colon and line end
                      	;input: hl=program address
                      	;output: a=(hl), z-flag(1= 00h or ":")
                      	;destroy: af
  3F60                	CHKCLNINC:
  3F60  23            		inc	hl
  3F61                	CHKCLN:
  3F61  7E            		ld	a,(hl)
  3F62  B7            		or	a
  3F63  C8            		ret	z
  3F64  FE3A          		cp	':'
  3F66  C8            		ret	z
  3F67  FE20          		cp	' '
  3F69  C0            		ret	nz
  3F6A  18F4          		jr	CHKCLNINC
                      	
                      	
                      	;check comma or argument
                      	;input: hl=program address
                      	;output: a=(hl), f(z=1:comma), hl=next address
  3F6C                	CHKCMM:
  3F6C  CD613F        		call	CHKCLN		;a=(hl)
  3F6F  CA1204        		jp	z,MOERR
  3F72  23            		inc	hl
  3F73  FE20          		cp	' '
  3F75  28F5          		jr	z,CHKCMM
  3F77  FE2C          		cp	','
  3F79  C8            		ret	z
  3F7A  2B            		dec	hl
  3F7B  C9            		ret
                      	
                      	
                      	;check colon and comma
                      	;input: hl=program address
                      	;output: a=(hl), z-flag(1= 00h or ":" ), hl=hl+1(comma)
                      	;destroy: af
  3F7C                	CHKCLCM:
  3F7C  CD613F        		call	CHKCLN
  3F7F  C8            		ret	z
  3F80  FE2C          		cp	','
  3F82  C2DC03        		jp	nz,SNERR
  3F85  23            		inc	hl
  3F86  B7            		or	a		;reset z-flag
  3F87  C9            		ret
                      	
                      	
                      	;get VRAM attirbute address (screen mode 1,2)
                      	;hl=(VRAM)+X/8+Y/12*32
                      	;input: bc=graphic X, de=graphic Y
                      	;output: hl=VRAM address, d=Y mod 12
                      	;destroy: af,bc,e
  3F88                	GXY2AD:
  3F88  CDD62B        		call	CHKGXY
  3F8B  CDB43F        		call	DIV12
  3F8E  EB            		ex	de,hl
  3F8F  57            		ld	d,a
  3F90  29            		add	hl,hl		;*2
  3F91  29            		add	hl,hl		;*4
  3F92  29            		add	hl,hl		;*8
  3F93  29            		add	hl,hl		;*16
  3F94  29            		add	hl,hl		;*32
  3F95  3A91FD        		ld	a,(VRAM)
  3F98  47            		ld	b,a
  3F99  CB39          		srl	c
  3F9B  CB39          		srl	c
  3F9D  CB39          		srl	c
  3F9F  09            		add	hl,bc
  3FA0  C9            		ret
                      	
                      	
                      	;bc=a*32
                      	;input: a(<=16), b=0
                      	;output: bc
                      	;destroy: f
  3FA1                	MUL32:
  3FA1  87            		add	a,a		;*2
  3FA2  87            		add	a,a		;*4
  3FA3  87            		add	a,a		;*8
  3FA4  87            		add	a,a		;*16
  3FA5  CB10          		rl	b
  3FA7  87            		add	a,a		;*32
  3FA8  CB10          		rl	b
  3FAA  4F            		ld	c,a
  3FAB  C9            		ret
                      	
                      	
                      	;ldir or lddr
                      	;input: bc,de,hl,z(0=ldir,1=lddr)
                      	;output: bc=0,de,hl
                      	;destroy: f
  3FAC                	LDIDR:
  3FAC  2803          		jr	z,LDIDRZ
  3FAE  EDB0          		ldir
  3FB0  C9            		ret
  3FB1                	LDIDRZ:
  3FB1  EDB8          		lddr
  3FB3  C9            		ret
                      	
                      	
                      	;de=de/12
                      	;input: de<192
                      	;output: de=int(de/12), a=de mod 12
                      	;destroy: f,b=0,l
  3FB4                	DIV12:
  3FB4  7B            		ld	a,e
  3FB5  5A            		ld	e,d		;d=0
  3FB6  2E60          		ld	l,01100000b
  3FB8  0604          		ld	b,4
  3FBA                	DIV12LP:
  3FBA  BD            		cp	l
  3FBB  3801          		jr	c,DIV12C
  3FBD  95            		sub	l
  3FBE                	DIV12C:
  3FBE  3F            		ccf
  3FBF  CB13          		rl	e
  3FC1  CB3D          		srl	l
  3FC3  10F5          		djnz	DIV12LP
  3FC5  C9            		ret
                      	
                      	
                      	;ROM end
  3FC6                	_4000H:	ds	4000h-_4000H
                      	
  4000                		end
